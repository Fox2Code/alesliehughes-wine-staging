From 9b3bb53102622ad9edca4db74f91b6dbf5fa08c5 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 7 Jun 2021 09:34:10 +1000
Subject: [PATCH 2/4] msdasql: Support IAccessor in IRowset for Enumation

---
 dlls/msdasql/msdasql_main.c | 81 +++++++++++++++++++++++++++++++++++++
 1 file changed, 81 insertions(+)

diff --git a/dlls/msdasql/msdasql_main.c b/dlls/msdasql/msdasql_main.c
index b747221fc47..61a76eb1064 100644
--- a/dlls/msdasql/msdasql_main.c
+++ b/dlls/msdasql/msdasql_main.c
@@ -712,6 +712,7 @@ static ULONG WINAPI msdasql_enum_Release(ISourcesRowset *iface)
 struct msdasql_enum_rowset
 {
     IRowset IRowset_iface;
+    IAccessor IAccessor_iface;
     LONG ref;
 };
 
@@ -720,6 +721,11 @@ static inline struct msdasql_enum_rowset *msdasql_rs_from_IRowset(IRowset *iface
     return CONTAINING_RECORD(iface, struct msdasql_enum_rowset, IRowset_iface);
 }
 
+static inline struct msdasql_enum_rowset *msdasql_enum_from_IAccessor ( IAccessor *iface )
+{
+    return CONTAINING_RECORD( iface, struct msdasql_enum_rowset, IAccessor_iface );
+}
+
 static HRESULT WINAPI enum_rowset_QueryInterface(IRowset *iface, REFIID riid,  void **ppv)
 {
     struct msdasql_enum_rowset *rowset = msdasql_rs_from_IRowset( iface );
@@ -731,6 +737,10 @@ static HRESULT WINAPI enum_rowset_QueryInterface(IRowset *iface, REFIID riid,  v
        IsEqualGUID(&IID_IRowset, riid)) {
         *ppv = &rowset->IRowset_iface;
     }
+    else if(IsEqualGUID(&IID_IAccessor, riid))
+    {
+         *ppv = &rowset->IAccessor_iface;
+    }
 
     if(*ppv) {
         IUnknown_AddRef((IUnknown*)*ppv);
@@ -830,6 +840,76 @@ static const struct IRowsetVtbl enum_rowset_vtbl =
     enum_rowset_RestartPosition
 };
 
+static HRESULT WINAPI enum_rs_accessor_QueryInterface(IAccessor *iface, REFIID riid, void **out)
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+    return IRowset_QueryInterface(&rowset->IRowset_iface, riid, out);
+}
+
+static ULONG WINAPI enum_rs_accessor_AddRef(IAccessor *iface)
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+    return IRowset_AddRef(&rowset->IRowset_iface);
+}
+
+static ULONG  WINAPI enum_rs_accessor_Release(IAccessor *iface)
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+    return IRowset_Release(&rowset->IRowset_iface);
+}
+
+static HRESULT WINAPI enum_rs_accessor_AddRefAccessor(IAccessor *iface, HACCESSOR accessor, DBREFCOUNT *count)
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+    FIXME("%p, %lu, %p\n", rowset, accessor, count);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI enum_rs_accessor_CreateAccessor(IAccessor *iface, DBACCESSORFLAGS flags,
+        DBCOUNTITEM count, const DBBINDING bindings[], DBLENGTH row_size, HACCESSOR *accessor,
+        DBBINDSTATUS status[])
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+
+    FIXME("%p 0x%08x, %lu, %p, %lu, %p, %p\n", rowset, flags, count, bindings, row_size, accessor, status);
+
+    if (accessor)
+        *accessor = 0xDeadBeef;
+
+    return S_OK;
+}
+
+static HRESULT WINAPI enum_rs_accessor_GetBindings(IAccessor *iface, HACCESSOR accessor,
+        DBACCESSORFLAGS *flags, DBCOUNTITEM *count, DBBINDING **bindings)
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+    FIXME("%p %lu, %p, %p, %p\n", rowset, accessor, flags, count, bindings);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI enum_rs_accessor_ReleaseAccessor(IAccessor *iface, HACCESSOR accessor, DBREFCOUNT *count)
+{
+    struct msdasql_enum_rowset *rowset = msdasql_enum_from_IAccessor( iface );
+
+    FIXME("%p, %lu, %p\n", rowset, accessor, count);
+
+    if (count)
+        *count = 0;
+
+    return S_OK;
+}
+
+struct IAccessorVtbl enum_accessor_vtbl =
+{
+    enum_rs_accessor_QueryInterface,
+    enum_rs_accessor_AddRef,
+    enum_rs_accessor_Release,
+    enum_rs_accessor_AddRefAccessor,
+    enum_rs_accessor_CreateAccessor,
+    enum_rs_accessor_GetBindings,
+    enum_rs_accessor_ReleaseAccessor
+};
+
 static HRESULT WINAPI msdasql_enum_GetSourcesRowset(ISourcesRowset *iface, IUnknown *outer, REFIID riid, ULONG sets,
                 DBPROPSET properties[], IUnknown **rowset)
 {
@@ -841,6 +921,7 @@ static HRESULT WINAPI msdasql_enum_GetSourcesRowset(ISourcesRowset *iface, IUnkn
 
     enum_rs = heap_alloc(sizeof(*enum_rs));
     enum_rs->IRowset_iface.lpVtbl = &enum_rowset_vtbl;
+    enum_rs->IAccessor_iface.lpVtbl = &enum_accessor_vtbl;
     enum_rs->ref = 1;
 
     hr = IRowset_QueryInterface(&enum_rs->IRowset_iface, riid, (void**)rowset);
-- 
2.30.2

