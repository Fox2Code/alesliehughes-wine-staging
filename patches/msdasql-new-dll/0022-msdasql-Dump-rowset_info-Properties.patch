From 986091867b3390b2eee63cb5f04b544142ff0090 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 29 Oct 2020 11:08:34 +1100
Subject: [PATCH 22/42] msdasql: Dump rowset_info Properties

---
 dlls/msdasql/session.c | 66 +++++++++++++++++++++++++++++++++++++++---
 1 file changed, 62 insertions(+), 4 deletions(-)

diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index 6eecbc9518d..a6fd15fef11 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -25,6 +25,7 @@
 #include "objbase.h"
 #include "rpcproxy.h"
 #include "msdasc.h"
+#include "oledberr.h"
 #include "wine/heap.h"
 #include "wine/debug.h"
 
@@ -526,11 +527,69 @@ static ULONG WINAPI rowset_info_Release(IRowsetInfo *iface)
 }
 
 static HRESULT WINAPI rowset_info_GetProperties(IRowsetInfo *iface, const ULONG count,
-        const DBPROPIDSET propertyidsets[], ULONG *out_count, DBPROPSET **propertysets)
+        const DBPROPIDSET propertyidsets[], ULONG *out_count, DBPROPSET **propertysets1)
 {
     struct msdasql_rowset *rowset = impl_from_IRowsetInfo( iface );
-    FIXME("%p, %ld, %p, %p, %p\n", rowset, count, propertyidsets, out_count, propertysets);
-    return E_NOTIMPL;
+    int i, j;
+    DBPROPSET *propertysets;
+
+    FIXME("%p, %d, %p, %p, %p\n", rowset, count, propertyidsets, out_count, propertysets1);
+
+    propertysets = CoTaskMemAlloc(count * sizeof(DBPROPSET));
+    if (!propertysets)
+        return E_OUTOFMEMORY;
+
+    memset(propertysets, 0, count * sizeof(DBPROPSET));
+    for (i=0; i < count; i++)
+    {
+        FIXME("Property Set %d\n", i);
+        FIXME("  cPropertyIDs:  %d\n", propertyidsets[i].cPropertyIDs);
+        FIXME("  guidPropertySet: %s\n", debugstr_guid(&propertyidsets[i].guidPropertySet) );
+
+        propertysets[i].rgProperties = CoTaskMemAlloc(propertyidsets[i].cPropertyIDs * sizeof(DBPROP));
+        memset(propertysets[i].rgProperties, 0, propertyidsets[i].cPropertyIDs * sizeof(DBPROP));
+
+        propertysets[i].cProperties = propertyidsets[i].cPropertyIDs;
+        for (j=0; j < propertyidsets[i].cPropertyIDs; j++)
+        {
+            FIXME("  rgPropertyIDs[%d]: 0x%08x\n", j, propertyidsets[i].rgPropertyIDs[j]);
+            propertysets[i].rgProperties[j].dwPropertyID = propertyidsets[i].cPropertyIDs;
+            propertysets[i].rgProperties[j].dwOptions = DBPROPOPTIONS_OPTIONAL;
+            switch(propertyidsets[i].rgPropertyIDs[j])
+            {
+                case DBPROP_CANHOLDROWS:
+                case DBPROP_CANSCROLLBACKWARDS:
+                    V_VT(&propertysets[i].rgProperties[j].vValue) = VT_BOOL;
+                    V_BOOL(&propertysets[i].rgProperties[j].vValue) = VARIANT_FALSE;
+                    break;
+                case DBPROP_UPDATABILITY:
+                    V_VT(&propertysets[i].rgProperties[j].vValue) = VT_I4;
+                    V_I4(&propertysets[i].rgProperties[j].vValue) = 0;
+                    break;
+                case DBPROP_IRowsetUpdate:
+                case DBPROP_IRowsetResynch:
+                case DBPROP_IConnectionPointContainer:
+                case DBPROP_BOOKMARKSKIPPED:
+                case DBPROP_REMOVEDELETED:
+                    V_VT(&propertysets[i].rgProperties[j].vValue) = VT_BOOL;
+                    V_BOOL(&propertysets[i].rgProperties[j].vValue) = VARIANT_FALSE;
+                    break;
+                case DBPROP_AUTH_INTEGRATED:
+                    V_VT(&propertysets[i].rgProperties[j].vValue) = VT_I4;
+                    V_I4(&propertysets[i].rgProperties[j].vValue) = 13;
+                    break;
+
+                case DBPROP_IRowsetCurrentIndex:
+                default:
+                    V_VT(&propertysets[i].rgProperties[j].vValue) = VT_EMPTY;
+                    propertysets[i].rgProperties[j].dwStatus = DBPROPSTATUS_NOTSUPPORTED;
+            }
+        }
+    }
+
+    *propertysets1 = propertysets;
+    *out_count = count;
+    return DB_S_ERRORSOCCURRED;
 }
 
 static HRESULT WINAPI rowset_info_GetReferencedRowset(IRowsetInfo *iface, DBORDINAL ordinal,
@@ -580,7 +639,6 @@ static HRESULT WINAPI command_Execute(ICommandText *iface, IUnknown *outer, REFI
 
     hr = IRowset_QueryInterface(&msrowset->IRowset_iface, &IID_IUnknown, (void**)rowset);
     IRowset_Release(&msrowset->IRowset_iface);
-
     return hr;
 }
 
-- 
2.30.2

