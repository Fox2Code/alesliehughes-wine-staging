From 06d55d7312e3b8c58baf2d7a150468c0d5caa6e1 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 26 Oct 2018 12:13:43 +1100
Subject: [PATCH] New DLL msdasql

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 configure                   |   2 +
 configure.ac                |   1 +
 dlls/msdasql/Makefile.in    |   7 ++
 dlls/msdasql/msdasql.spec   |   5 ++
 dlls/msdasql/msdasql_main.c | 131 ++++++++++++++++++++++++++++++++++++
 loader/wine.inf.in          |   2 +
 6 files changed, 148 insertions(+)
 create mode 100644 dlls/msdasql/Makefile.in
 create mode 100644 dlls/msdasql/msdasql.spec
 create mode 100644 dlls/msdasql/msdasql_main.c

diff --git a/configure b/configure
index e79acfec9c7..449192472b8 100755
--- a/configure
+++ b/configure
@@ -1459,6 +1459,7 @@ enable_mscorwks
 enable_msctf
 enable_msctfp
 enable_msdaps
+enable_msdasql
 enable_msdelta
 enable_msdmo
 enable_msdrm
@@ -20934,6 +20935,7 @@ wine_fn_config_makefile dlls/msctf enable_msctf
 wine_fn_config_makefile dlls/msctf/tests enable_tests
 wine_fn_config_makefile dlls/msctfp enable_msctfp
 wine_fn_config_makefile dlls/msdaps enable_msdaps
+wine_fn_config_makefile dlls/msdasql enable_msdasql
 wine_fn_config_makefile dlls/msdelta enable_msdelta
 wine_fn_config_makefile dlls/msdmo enable_msdmo
 wine_fn_config_makefile dlls/msdmo/tests enable_tests
diff --git a/configure.ac b/configure.ac
index 9cb41725041..f2ec9fad7f3 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3513,6 +3513,7 @@ WINE_CONFIG_MAKEFILE(dlls/msctf)
 WINE_CONFIG_MAKEFILE(dlls/msctf/tests)
 WINE_CONFIG_MAKEFILE(dlls/msctfp)
 WINE_CONFIG_MAKEFILE(dlls/msdaps)
+WINE_CONFIG_MAKEFILE(dlls/msdasql)
 WINE_CONFIG_MAKEFILE(dlls/msdelta)
 WINE_CONFIG_MAKEFILE(dlls/msdmo)
 WINE_CONFIG_MAKEFILE(dlls/msdmo/tests)
diff --git a/dlls/msdasql/Makefile.in b/dlls/msdasql/Makefile.in
new file mode 100644
index 00000000000..fad46483421
--- /dev/null
+++ b/dlls/msdasql/Makefile.in
@@ -0,0 +1,7 @@
+MODULE    = msdasql.dll
+IMPORTS   = uuid
+
+EXTRADLLFLAGS = -mno-cygwin
+
+C_SRCS = \
+	msdasql_main.c
diff --git a/dlls/msdasql/msdasql.spec b/dlls/msdasql/msdasql.spec
new file mode 100644
index 00000000000..37b010b3860
--- /dev/null
+++ b/dlls/msdasql/msdasql.spec
@@ -0,0 +1,5 @@
+@ stdcall -private DllCanUnloadNow()
+@ stdcall -private DllGetClassObject(ptr ptr ptr)
+@ stdcall -private DllRegisterServer()
+@ stdcall -private DllUnregisterServer()
+
diff --git a/dlls/msdasql/msdasql_main.c b/dlls/msdasql/msdasql_main.c
new file mode 100644
index 00000000000..607df7b77be
--- /dev/null
+++ b/dlls/msdasql/msdasql_main.c
@@ -0,0 +1,131 @@
+/*
+ * Copyright 2019 Alistair Leslie-Hughes
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#define COBJMACROS
+
+#include <stdarg.h>
+
+#include "windef.h"
+#include "winbase.h"
+#include "objbase.h"
+#include "rpcproxy.h"
+#include "wine/debug.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(msdasql);
+
+static HINSTANCE msdasql_instance;
+
+BOOL WINAPI DllMain(HINSTANCE instance, DWORD reason, void *reserved)
+{
+    TRACE("(%p, %u, %p)\n", instance, reason, reserved);
+
+    switch (reason)
+    {
+        case DLL_WINE_PREATTACH:
+            return FALSE;    /* prefer native version */
+        case DLL_PROCESS_ATTACH:
+            msdasql_instance = instance;
+            DisableThreadLibraryCalls(instance);
+            break;
+    }
+
+    return TRUE;
+}
+
+HRESULT WINAPI DllCanUnloadNow(void)
+{
+    return S_FALSE;
+}
+
+/***********************************************************************
+ *		DllRegisterServer (MSXML3.@)
+ */
+HRESULT WINAPI DllRegisterServer(void)
+{
+    return __wine_register_resources( msdasql_instance );
+}
+
+/***********************************************************************
+ *		DllUnregisterServer (MSXML3.@)
+ */
+HRESULT WINAPI DllUnregisterServer(void)
+{
+    return __wine_unregister_resources( msdasql_instance );
+}
+
+static HRESULT WINAPI ClassFactory_QueryInterface(IClassFactory *iface, REFIID riid, void **ppv)
+{
+    *ppv = NULL;
+
+    if(IsEqualGUID(&IID_IUnknown, riid)) {
+        TRACE("(%p)->(IID_IUnknown %p)\n", iface, ppv);
+        *ppv = iface;
+    }else if(IsEqualGUID(&IID_IClassFactory, riid)) {
+        TRACE("(%p)->(IID_IClassFactory %p)\n", iface, ppv);
+        *ppv = iface;
+    }
+
+    if(*ppv) {
+        IUnknown_AddRef((IUnknown*)*ppv);
+        return S_OK;
+    }
+
+    WARN("(%p)->(%s %p)\n", iface, debugstr_guid(riid), ppv);
+    return E_NOINTERFACE;
+}
+
+static ULONG WINAPI ClassFactory_AddRef(IClassFactory *iface)
+{
+    TRACE("(%p)\n", iface);
+    return 2;
+}
+
+static ULONG WINAPI ClassFactory_Release(IClassFactory *iface)
+{
+    TRACE("(%p)\n", iface);
+    return 1;
+}
+
+HRESULT WINAPI ClassFactory_CreateInstance(IClassFactory *iface, IUnknown *outer, REFIID riid, void **ppv)
+{
+    FIXME("(%p %s %p)\n", outer, debugstr_guid(riid), ppv);
+
+    return CLASS_E_CLASSNOTAVAILABLE;
+}
+
+static HRESULT WINAPI ClassFactory_LockServer(IClassFactory *iface, BOOL fLock)
+{
+    TRACE("(%p)->(%x)\n", iface, fLock);
+    return S_OK;
+}
+
+static const IClassFactoryVtbl cffactoryVtbl = {
+    ClassFactory_QueryInterface,
+    ClassFactory_AddRef,
+    ClassFactory_Release,
+    ClassFactory_CreateInstance,
+    ClassFactory_LockServer
+};
+
+static IClassFactory cffactory = { &cffactoryVtbl };
+
+HRESULT WINAPI DllGetClassObject( REFCLSID rclsid, REFIID riid, void **ppv )
+{
+    FIXME("%s %s %p\n", debugstr_guid(rclsid), debugstr_guid(riid), ppv);
+    return IClassFactory_QueryInterface(&cffactory, riid, ppv);
+}
diff --git a/loader/wine.inf.in b/loader/wine.inf.in
index 4c7f80321c9..21446819e69 100644
--- a/loader/wine.inf.in
+++ b/loader/wine.inf.in
@@ -2948,6 +2948,7 @@ HKLM,%CurrentVersion%\Telephony\Country List\998,"SameAreaRule",,"G"
 16422,Windows NT\Accessories,wordpad.exe
 16427,System\OLE DB,oledb32.dll
 16427,System\OLE DB,msdaps.dll
+16427,System\OLE DB,msdasql.dll
 16427,System\ADO,msado15.dll
 11,,*
 
@@ -3018,6 +3019,7 @@ HKLM,%CurrentVersion%\Telephony\Country List\998,"SameAreaRule",,"G"
 16427,Microsoft Shared\TextConv,
 16427,System\OLE DB,oledb32.dll
 16427,System\OLE DB,msdaps.dll
+16427,System\OLE DB,msdasql.dll
 16427,System\ADO,msado15.dll
 11,,*
 
-- 
2.29.2

