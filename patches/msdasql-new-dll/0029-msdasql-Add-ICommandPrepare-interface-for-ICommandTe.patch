From 350404e68f71a86d0635de51a5e8a9be75302a33 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 21 Dec 2020 11:53:36 +1100
Subject: [PATCH 29/42] msdasql: Add ICommandPrepare interface for ICommandText

---
 dlls/msdasql/session.c        | 50 +++++++++++++++++++++++++++++++++++
 dlls/msdasql/tests/provider.c |  6 ++---
 2 files changed, 53 insertions(+), 3 deletions(-)

diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index 29291930eaf..bac29bc87fd 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -321,6 +321,7 @@ struct command
     ICommandProperties ICommandProperties_iface;
     IColumnsInfo IColumnsInfo_iface;
     IConvertType IConvertType_iface;
+    ICommandPrepare ICommandPrepare_iface;
     LONG refs;
 };
 
@@ -344,6 +345,11 @@ static inline struct command *impl_from_IConvertType( IConvertType *iface )
     return CONTAINING_RECORD( iface, struct command, IConvertType_iface );
 }
 
+static inline struct command *impl_from_ICommandPrepare( ICommandPrepare *iface )
+{
+    return CONTAINING_RECORD( iface, struct command, ICommandPrepare_iface );
+}
+
 static HRESULT WINAPI command_QueryInterface(ICommandText *iface, REFIID riid, void **ppv)
 {
     struct command *command = impl_from_ICommandText( iface );
@@ -362,6 +368,8 @@ static HRESULT WINAPI command_QueryInterface(ICommandText *iface, REFIID riid, v
          *ppv = &command->IColumnsInfo_iface;
     else if(IsEqualGUID(&IID_IConvertType, riid))
          *ppv = &command->IConvertType_iface;
+    else if(IsEqualGUID(&IID_ICommandPrepare, riid))
+         *ppv = &command->ICommandPrepare_iface;
 
     if(*ppv) {
         IUnknown_AddRef((IUnknown*)*ppv);
@@ -893,6 +901,47 @@ static struct IConvertTypeVtbl converttypeVtbl =
     converttype_CanConvert
 };
 
+static HRESULT WINAPI commandprepare_QueryInterface(ICommandPrepare *iface, REFIID riid, void **out)
+{
+    struct command *command = impl_from_ICommandPrepare( iface );
+    return ICommandText_QueryInterface(&command->ICommandText_iface, riid, out);
+}
+
+static ULONG WINAPI commandprepare_AddRef(ICommandPrepare *iface)
+{
+    struct command *command = impl_from_ICommandPrepare( iface );
+    return ICommandText_AddRef(&command->ICommandText_iface);
+}
+
+static ULONG WINAPI commandprepare_Release(ICommandPrepare *iface)
+{
+    struct command *command = impl_from_ICommandPrepare( iface );
+    return ICommandText_Release(&command->ICommandText_iface);
+}
+
+static HRESULT WINAPI commandprepare_Prepare(ICommandPrepare *iface, ULONG runs)
+{
+    struct command *command = impl_from_ICommandPrepare( iface );
+    FIXME("%p, %u\n", command, runs);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI commandprepare_Unprepare(ICommandPrepare *iface)
+{
+    struct command *command = impl_from_ICommandPrepare( iface );
+    FIXME("%p\n", command);
+    return E_NOTIMPL;
+}
+
+struct ICommandPrepareVtbl commandprepareVtbl =
+{
+    commandprepare_QueryInterface,
+    commandprepare_AddRef,
+    commandprepare_Release,
+    commandprepare_Prepare,
+    commandprepare_Unprepare
+};
+
 static HRESULT WINAPI createcommand_CreateCommand(IDBCreateCommand *iface, IUnknown *outer, REFIID riid,
                                             IUnknown **out)
 {
@@ -910,6 +959,7 @@ static HRESULT WINAPI createcommand_CreateCommand(IDBCreateCommand *iface, IUnkn
     command->ICommandProperties_iface.lpVtbl = &commonpropsVtbl;
     command->IColumnsInfo_iface.lpVtbl = &columninfoVtbl;
     command->IConvertType_iface.lpVtbl = &converttypeVtbl;
+    command->ICommandPrepare_iface.lpVtbl = &commandprepareVtbl;
     command->refs = 1;
 
     hr = ICommandText_QueryInterface(&command->ICommandText_iface, riid, (void**)out);
diff --git a/dlls/msdasql/tests/provider.c b/dlls/msdasql/tests/provider.c
index 94d08272201..4a39b8758f9 100644
--- a/dlls/msdasql/tests/provider.c
+++ b/dlls/msdasql/tests/provider.c
@@ -104,17 +104,17 @@ static void test_command_interfaces(IUnknown *cmd)
     ICommandText_Release(comand_text);
 
     hr = IUnknown_QueryInterface(cmd, &IID_IConvertType, (void**)&convertype);
-    todo_wine ok(hr == S_OK, "got 0x%08x\n", hr);
+    ok(hr == S_OK, "got 0x%08x\n", hr);
     if (hr == S_OK)
         IConvertType_Release(convertype);
 
     hr = IUnknown_QueryInterface(cmd, &IID_ICommandPrepare, (void**)&commandprepare);
-    todo_wine ok(hr == S_OK, "got 0x%08x\n", hr);
+    ok(hr == S_OK, "got 0x%08x\n", hr);
     if (hr == S_OK)
         ICommandPrepare_Release(commandprepare);
 
     hr = IUnknown_QueryInterface(cmd, &IID_IColumnsInfo, (void**)&colinfo);
-    todo_wine ok(hr == S_OK, "got 0x%08x\n", hr);
+    ok(hr == S_OK, "got 0x%08x\n", hr);
     if (hr == S_OK)
         IColumnsInfo_Release(colinfo);
 
-- 
2.30.2

