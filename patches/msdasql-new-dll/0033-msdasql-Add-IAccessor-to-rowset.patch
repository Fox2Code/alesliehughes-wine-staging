From 0f5a86cfe006f79b5c4fec718b25a9a778188c32 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 30 Dec 2020 18:59:12 +1100
Subject: [PATCH] msdasql: Add IAccessor to rowset

---
 dlls/msdasql/session.c | 71 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 71 insertions(+)

diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index 7a382d89046..1f89dd9af08 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -424,6 +424,7 @@ struct msdasql_rowset
     IRowset IRowset_iface;
     IRowsetInfo IRowsetInfo_iface;
     IColumnsInfo IColumnsInfo_iface;
+    IAccessor IAccessor_iface;
     LONG refs;
 };
 
@@ -442,6 +443,11 @@ static inline struct msdasql_rowset *rowset_impl_from_IColumnsInfo( IColumnsInfo
     return CONTAINING_RECORD( iface, struct msdasql_rowset, IColumnsInfo_iface );
 }
 
+static inline struct msdasql_rowset *impl_from_IAccessor ( IAccessor *iface )
+{
+    return CONTAINING_RECORD( iface, struct msdasql_rowset, IAccessor_iface );
+}
+
 static HRESULT WINAPI msdasql_rowset_QueryInterface(IRowset *iface, REFIID riid,  void **ppv)
 {
     struct msdasql_rowset *rowset = impl_from_IRowset( iface );
@@ -461,6 +467,10 @@ static HRESULT WINAPI msdasql_rowset_QueryInterface(IRowset *iface, REFIID riid,
     {
         *ppv = &rowset->IColumnsInfo_iface;
     }
+    else if(IsEqualGUID(&IID_IAccessor, riid))
+    {
+         *ppv = &rowset->IAccessor_iface;
+    }
     else if (IsEqualGUID(&IID_IRowsetChange, riid))
     {
         TRACE("IID_IRowsetChange not supported\n");
@@ -754,6 +764,66 @@ static struct IColumnsInfoVtbl rowset_columninfo_vtbll =
     rowset_colsinfo_MapColumnIDs
 };
 
+static HRESULT WINAPI rowset_accessor_QueryInterface(IAccessor *iface, REFIID riid, void **out)
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    return IRowset_QueryInterface(&rowset->IRowset_iface, riid, out);
+}
+
+static ULONG WINAPI rowset_accessor_AddRef(IAccessor *iface)
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    return IRowset_AddRef(&rowset->IRowset_iface);
+}
+
+static ULONG  WINAPI rowset_accessor_Release(IAccessor *iface)
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    return IRowset_Release(&rowset->IRowset_iface);
+}
+
+static HRESULT WINAPI rowset_accessor_AddRefAccessor(IAccessor *iface, HACCESSOR accessor, DBREFCOUNT *count)
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    FIXME("%p, %lu, %p\n", rowset, accessor, count);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI rowset_accessor_CreateAccessor(IAccessor *iface, DBACCESSORFLAGS flags,
+        DBCOUNTITEM count, const DBBINDING bindings[], DBLENGTH row_size, HACCESSOR *accessor,
+        DBBINDSTATUS status[])
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    FIXME("%p 0x%08x, %lu, %p, %lu, %p, %p\n", rowset, flags, count, bindings, row_size, accessor, status);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI rowset_accessor_GetBindings(IAccessor *iface, HACCESSOR accessor,
+        DBACCESSORFLAGS *flags, DBCOUNTITEM *count, DBBINDING **bindings)
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    FIXME("%p %lu, %p, %p, %p\n", rowset, accessor, flags, count, bindings);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI rowset_accessor_ReleaseAccessor(IAccessor *iface, HACCESSOR accessor, DBREFCOUNT *count)
+{
+    struct msdasql_rowset *rowset = impl_from_IAccessor( iface );
+    FIXME("%p, %lu, %p\n", rowset, accessor, count);
+    return E_NOTIMPL;
+}
+
+struct IAccessorVtbl accessor_vtbl =
+{
+    rowset_accessor_QueryInterface,
+    rowset_accessor_AddRef,
+    rowset_accessor_Release,
+    rowset_accessor_AddRefAccessor,
+    rowset_accessor_CreateAccessor,
+    rowset_accessor_GetBindings,
+    rowset_accessor_ReleaseAccessor
+};
+
 static HRESULT WINAPI command_Execute(ICommandText *iface, IUnknown *outer, REFIID riid,
         DBPARAMS *params, DBROWCOUNT *affected, IUnknown **rowset)
 {
@@ -770,6 +840,7 @@ static HRESULT WINAPI command_Execute(ICommandText *iface, IUnknown *outer, REFI
     msrowset->IRowset_iface.lpVtbl = &msdasql_rowset_vtbl;
     msrowset->IRowsetInfo_iface.lpVtbl = &rowset_info_vtbl;
     msrowset->IColumnsInfo_iface.lpVtbl = &rowset_columninfo_vtbll;
+    msrowset->IAccessor_iface.lpVtbl = &accessor_vtbl;
     msrowset->refs = 1;
 
     if (affected) *affected = 1; /* FIXME */
-- 
2.29.2

