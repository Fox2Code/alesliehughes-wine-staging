From 0ad07bd09a556a455aac8a41832ff44fe2ca8c72 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 12 Oct 2020 15:05:19 +1100
Subject: [PATCH 12/42] msdasql: Add IPersist interface support

---
 dlls/msdasql/msdasql_main.c | 49 +++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/dlls/msdasql/msdasql_main.c b/dlls/msdasql/msdasql_main.c
index ad0ec49a213..daf31d0f76a 100644
--- a/dlls/msdasql/msdasql_main.c
+++ b/dlls/msdasql/msdasql_main.c
@@ -205,6 +205,7 @@ struct msdasql
     IDBProperties    IDBProperties_iface;
     IDBInitialize    IDBInitialize_iface;
     IDBCreateSession IDBCreateSession_iface;
+    IPersist         IPersist_iface;
 
     LONG     ref;
 };
@@ -229,6 +230,11 @@ static inline struct msdasql *impl_from_IDBCreateSession(IDBCreateSession *iface
     return CONTAINING_RECORD(iface, struct msdasql, IDBCreateSession_iface);
 }
 
+static inline struct msdasql *impl_from_IPersist( IPersist *iface )
+{
+    return CONTAINING_RECORD( iface, struct msdasql, IPersist_iface );
+}
+
 static HRESULT WINAPI msdsql_QueryInterface(IUnknown *iface, REFIID riid, void **out)
 {
     struct msdasql *provider = impl_from_IUnknown(iface);
@@ -252,6 +258,9 @@ static HRESULT WINAPI msdsql_QueryInterface(IUnknown *iface, REFIID riid, void *
     {
         *out = &provider->IDBCreateSession_iface;
     }
+    else if(IsEqualGUID(&IID_IPersist, riid)) {
+        *out = &provider->IPersist_iface;
+    }
     else
     {
         FIXME("(%s, %p)\n", debugstr_guid(riid), out);
@@ -541,6 +550,45 @@ static const struct IDBCreateSessionVtbl dbsess_vtbl =
     dbsess_CreateSession
 };
 
+static HRESULT WINAPI persist_QueryInterface(IPersist *iface, REFIID riid, void **ppv)
+{
+    struct msdasql *provider = impl_from_IPersist( iface );
+    return IUnknown_QueryInterface(&provider->MSDASQL_iface, riid, ppv);
+}
+
+static ULONG WINAPI persist_AddRef(IPersist *iface)
+{
+    struct msdasql *provider = impl_from_IPersist( iface );
+    return IUnknown_AddRef(&provider->MSDASQL_iface);
+}
+
+static ULONG WINAPI persist_Release(IPersist *iface)
+{
+    struct msdasql *provider = impl_from_IPersist( iface );
+    return IUnknown_Release(&provider->MSDASQL_iface);
+}
+
+static HRESULT WINAPI persist_GetClassID(IPersist *iface, CLSID *classid)
+{
+    struct msdasql *provider = impl_from_IPersist( iface );
+
+    TRACE("(%p)->(%p)\n", provider, classid);
+
+    if(!classid)
+        return E_INVALIDARG;
+
+    *classid = CLSID_MSDASQL;
+    return S_OK;
+
+}
+
+static const IPersistVtbl persistVtbl = {
+    persist_QueryInterface,
+    persist_AddRef,
+    persist_Release,
+    persist_GetClassID
+};
+
 static HRESULT create_msdasql_provider(REFIID riid, void **ppv)
 {
     struct msdasql *provider;
@@ -554,6 +602,7 @@ static HRESULT create_msdasql_provider(REFIID riid, void **ppv)
     provider->IDBProperties_iface.lpVtbl = &dbprops_vtbl;
     provider->IDBInitialize_iface.lpVtbl = &dbinit_vtbl;
     provider->IDBCreateSession_iface.lpVtbl = &dbsess_vtbl;
+    provider->IPersist_iface.lpVtbl = &persistVtbl;
     provider->ref = 1;
 
     hr = IUnknown_QueryInterface(&provider->MSDASQL_iface, riid, ppv);
-- 
2.30.2

