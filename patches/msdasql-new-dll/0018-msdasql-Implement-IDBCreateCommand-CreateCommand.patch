From 166851f924988ba5e9b87edd40190cf328fc0ccf Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Sat, 24 Oct 2020 21:17:05 +1100
Subject: [PATCH] msdasql: Implement IDBCreateCommand CreateCommand

---
 dlls/msdasql/session.c | 102 ++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 101 insertions(+), 1 deletion(-)

diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index 11ff05fb179..bce2cf125b9 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -314,13 +314,113 @@ static ULONG WINAPI createcommand_Release(IDBCreateCommand *iface)
     return IUnknown_Release(&session->session_iface);
 }
 
+struct command
+{
+    ICommand ICommand_iface;
+    LONG refs;
+};
+
+static inline struct command *impl_from_ICommand( ICommand *iface )
+{
+    return CONTAINING_RECORD( iface, struct command, ICommand_iface );
+}
+
+static HRESULT WINAPI command_QueryInterface(ICommand *iface, REFIID riid, void **ppv)
+{
+    struct command *command = impl_from_ICommand( iface );
+
+    TRACE( "%p, %s, %p\n", command, debugstr_guid(riid), ppv );
+    *ppv = NULL;
+
+    if(IsEqualGUID(&IID_IUnknown, riid) ||
+       IsEqualGUID(&IID_ICommand, riid)) {
+        *ppv = &command->ICommand_iface;
+    }
+    // ICommandStream must.
+
+    if(*ppv) {
+        IUnknown_AddRef((IUnknown*)*ppv);
+        return S_OK;
+    }
+
+    FIXME("(%p)->(%s %p)\n", iface, debugstr_guid(riid), ppv);
+    return E_NOINTERFACE;
+}
+
+static ULONG WINAPI command_AddRef(ICommand *iface)
+{
+    struct command *command = impl_from_ICommand( iface );
+    LONG refs = InterlockedIncrement( &command->refs );
+    TRACE( "%p new refcount %d\n", command, refs );
+    return refs;
+}
+
+static ULONG WINAPI command_Release(ICommand *iface)
+{
+    struct command *command = impl_from_ICommand( iface );
+    LONG refs = InterlockedDecrement( &command->refs );
+    TRACE( "%p new refcount %d\n", command, refs );
+    if (!refs)
+    {
+        TRACE( "destroying %p\n", command );
+        heap_free( command );
+    }
+    return refs;
+}
+
+static HRESULT WINAPI command_Cancel(ICommand *iface)
+{
+    struct command *command = impl_from_ICommand( iface );
+
+    FIXME("%p\n", command);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI command_Execute(ICommand *iface, IUnknown *outer, REFIID riid,
+        DBPARAMS *params, DBROWCOUNT *affected, IUnknown **rowset)
+{
+    struct command *command = impl_from_ICommand( iface );
+
+    FIXME("%p, %p, %s, %p %p %p\n", command, outer, debugstr_guid(riid), params, affected, rowset);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI command_GetDBSession(ICommand *iface, REFIID riid, IUnknown **session)
+{
+    struct command *command = impl_from_ICommand( iface );
+    FIXME("%p, %s, %p\n", command, debugstr_guid(riid), session);
+    return E_NOTIMPL;
+}
+
+static const ICommandVtbl commandVtbl = {
+    command_QueryInterface,
+    command_AddRef,
+    command_Release,
+    command_Cancel,
+    command_Execute,
+    command_GetDBSession
+};
+
 static HRESULT WINAPI createcommand_CreateCommand(IDBCreateCommand *iface, IUnknown *outer, REFIID riid,
                                             IUnknown **out)
 {
     struct msdasql_session *session = impl_from_IDBCreateCommand( iface );
+    struct command *command;
+    HRESULT hr;
 
     FIXME("%p, %p, %s, %p\n", session, outer, debugstr_guid(riid), out);
-    return E_NOTIMPL;
+
+    command = heap_alloc(sizeof(*session));
+    if (!command)
+        return E_OUTOFMEMORY;
+
+    command->ICommand_iface.lpVtbl = &commandVtbl;
+    command->refs = 1;
+
+    hr = ICommand_QueryInterface(&command->ICommand_iface, riid, (void**)out);
+    ICommand_Release(&command->ICommand_iface);
+    FIXME("ret 0x%08x, %p\n", hr, *out);
+    return hr;
 }
 
 static const IDBCreateCommandVtbl createcommandVtbl = {
-- 
2.28.0

