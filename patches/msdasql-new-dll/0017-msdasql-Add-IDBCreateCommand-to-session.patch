From d89201efe202eec3d64e75232ffa79a71bd56244 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Sat, 24 Oct 2020 18:16:50 +1100
Subject: [PATCH] msdasql: Add IDBCreateCommand to session

---
 dlls/msdasql/session.c | 45 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index 212b0373233..32b17cc38a2 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -38,6 +38,7 @@ struct msdasql_session
     IGetDataSource IGetDataSource_iface;
     IOpenRowset    IOpenRowset_iface;
     ISessionProperties ISessionProperties_iface;
+    IDBCreateCommand IDBCreateCommand_iface;
     LONG refs;
 };
 
@@ -61,6 +62,11 @@ static inline struct msdasql_session *impl_from_ISessionProperties( ISessionProp
     return CONTAINING_RECORD( iface, struct msdasql_session, ISessionProperties_iface );
 }
 
+static inline struct msdasql_session *impl_from_IDBCreateCommand( IDBCreateCommand *iface )
+{
+    return CONTAINING_RECORD( iface, struct msdasql_session, IDBCreateCommand_iface );
+}
+
 static HRESULT WINAPI session_QueryInterface(IUnknown *iface, REFIID riid, void **ppv)
 {
     struct msdasql_session *session = impl_from_IUnknown( iface );
@@ -84,6 +90,10 @@ static HRESULT WINAPI session_QueryInterface(IUnknown *iface, REFIID riid, void
         TRACE("(%p)->(IID_ISessionProperties %p)\n", iface, ppv);
         *ppv = &session->ISessionProperties_iface;
     }
+    else if(IsEqualGUID(&IID_IDBCreateCommand, riid)) {
+        TRACE("(%p)->(IDBCreateCommand_iface %p)\n", iface, ppv);
+        *ppv = &session->IDBCreateCommand_iface;
+    }
 
     if(*ppv) {
         IUnknown_AddRef((IUnknown*)*ppv);
@@ -286,6 +296,40 @@ static const ISessionPropertiesVtbl propertiesVtbl = {
     properties_SetProperties
 };
 
+static HRESULT WINAPI createcommand_QueryInterface(IDBCreateCommand *iface, REFIID riid, void **out)
+{
+    struct msdasql_session *session = impl_from_IDBCreateCommand( iface );
+    return IUnknown_QueryInterface(&session->session_iface, riid, out);
+}
+
+static ULONG WINAPI createcommand_AddRef(IDBCreateCommand *iface)
+{
+    struct msdasql_session *session = impl_from_IDBCreateCommand( iface );
+    return IUnknown_AddRef(&session->session_iface);
+}
+
+static ULONG WINAPI createcommand_Release(IDBCreateCommand *iface)
+{
+    struct msdasql_session *session = impl_from_IDBCreateCommand( iface );
+    return IUnknown_Release(&session->session_iface);
+}
+
+static HRESULT WINAPI createcommand_CreateCommand(IDBCreateCommand *iface, IUnknown *outer, REFIID riid,
+                                            IUnknown **out)
+{
+    struct msdasql_session *session = impl_from_IDBCreateCommand( iface );
+
+    FIXME("%p, %p, %s, %p\n", session, outer, debugstr_guid(riid), out);
+    return E_NOTIMPL;
+}
+
+static const IDBCreateCommandVtbl createcommandVtbl = {
+    createcommand_QueryInterface,
+    createcommand_AddRef,
+    createcommand_Release,
+    createcommand_CreateCommand
+};
+
 HRESULT create_db_session(REFIID riid, void **unk)
 {
     struct msdasql_session *session;
@@ -298,6 +342,7 @@ HRESULT create_db_session(REFIID riid, void **unk)
     session->IGetDataSource_iface.lpVtbl = &datasourceVtbl;
     session->IOpenRowset_iface.lpVtbl = &openrowsetVtbl;
     session->ISessionProperties_iface.lpVtbl = &propertiesVtbl;
+    session->IDBCreateCommand_iface.lpVtbl = &createcommandVtbl;
     session->refs = 1;
 
     return IUnknown_QueryInterface((IUnknown *)&session->session_iface, riid, unk);
-- 
2.29.2

