From 421eaf968ebb5a52db6680429b6d6cf72e44b965 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 9 Nov 2021 11:14:39 +1100
Subject: [PATCH 04/13] msdasql: ICommandText Execute use ODBC to fetch results

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/msdasql/msdasql_main.c    |  4 +--
 dlls/msdasql/msdasql_private.h |  3 +-
 dlls/msdasql/session.c         | 55 +++++++++++++++++++++++++++-------
 dlls/msdasql/tests/provider.c  |  2 +-
 4 files changed, 49 insertions(+), 15 deletions(-)

diff --git a/dlls/msdasql/msdasql_main.c b/dlls/msdasql/msdasql_main.c
index 9ef881be3b4..fd882f34f08 100644
--- a/dlls/msdasql/msdasql_main.c
+++ b/dlls/msdasql/msdasql_main.c
@@ -44,7 +44,7 @@ DEFINE_GUID(DBPROPSET_ROWSET,    0xc8b522be, 0x5cf3, 0x11ce, 0xad, 0xe5, 0x00, 0
 
 DEFINE_GUID(DBGUID_DEFAULT,      0xc8b521fb, 0x5cf3, 0x11ce, 0xad, 0xe5, 0x00, 0xaa, 0x00, 0x44, 0x77, 0x3d);
 
-static void dump_sql_diag_records(SQLSMALLINT type, SQLHANDLE handle)
+void dump_sql_diag_records(SQLSMALLINT type, SQLHANDLE handle)
 {
     SQLCHAR state[6], msg[SQL_MAX_MESSAGE_LENGTH];
     SQLINTEGER native;
@@ -612,7 +612,7 @@ static HRESULT WINAPI dbsess_CreateSession(IDBCreateSession *iface, IUnknown *ou
     if (outer)
         FIXME("outer currently not supported.\n");
 
-    hr = create_db_session(riid, &provider->MSDASQL_iface, (void**)session);
+    hr = create_db_session(riid, &provider->MSDASQL_iface, provider->hdbc, (void**)session);
 
     return hr;
 }
diff --git a/dlls/msdasql/msdasql_private.h b/dlls/msdasql/msdasql_private.h
index 7d7f67c2c78..42bb8697030 100644
--- a/dlls/msdasql/msdasql_private.h
+++ b/dlls/msdasql/msdasql_private.h
@@ -16,4 +16,5 @@
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  */
 
-HRESULT create_db_session(REFIID riid, IUnknown *datasource, void **unk) DECLSPEC_HIDDEN;
+HRESULT create_db_session(REFIID riid, IUnknown *datasource, HDBC hdbc, void **unk) DECLSPEC_HIDDEN;
+void dump_sql_diag_records(SQLSMALLINT type, SQLHANDLE handle) DECLSPEC_HIDDEN;
diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index f9538e5d4d9..b24d8c18463 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -25,6 +25,8 @@
 #include "objbase.h"
 #include "rpcproxy.h"
 #include "msdasc.h"
+#include "sqlext.h"
+#include "sqlucode.h"
 #include "wine/heap.h"
 #include "wine/debug.h"
 
@@ -68,6 +70,8 @@ struct msdasql_session
     LONG refs;
 
     IUnknown *datasource;
+
+    HDBC hdbc;
 };
 
 static inline struct msdasql_session *impl_from_IUnknown( IUnknown *iface )
@@ -337,6 +341,8 @@ struct command
     IUnknown *session;
 
     struct command_props properties[79];
+
+    HDBC hdbc;
 };
 
 static inline struct command *impl_from_ICommandText( ICommandText *iface )
@@ -478,6 +484,9 @@ struct msdasql_rowset
     IColumnsRowset IColumnsRowset_iface;
     IUnknown *caller;
     LONG refs;
+
+    /* ODBC support */
+    SQLHSTMT hstmt;
 };
 
 static inline struct msdasql_rowset *impl_from_IRowset( IRowset *iface )
@@ -574,6 +583,7 @@ static ULONG WINAPI msdasql_rowset_Release(IRowset *iface)
     TRACE( "%p new refcount %d\n", rowset, refs );
     if (!refs)
     {
+        SQLFreeHandle(SQL_HANDLE_STMT, rowset->hstmt);
         TRACE( "destroying %p\n", rowset );
 
         if (rowset->caller)
@@ -846,24 +856,45 @@ static HRESULT WINAPI command_Execute(ICommandText *iface, IUnknown *outer, REFI
 {
     struct command *command = impl_from_ICommandText( iface );
     struct msdasql_rowset *msrowset;
-    HRESULT hr;
+    HRESULT hr = S_OK;
+    RETCODE ret;
+    SQLHSTMT hstmt;
+    SQLLEN results = 0;
+
+    TRACE("%p, %p, %s, %p %p %p Semi Stub\n", command, outer, debugstr_guid(riid), params, affected, rowset);
 
-    FIXME("%p, %p, %s, %p %p %p Semi Stub\n", command, outer, debugstr_guid(riid), params, affected, rowset);
+    SQLAllocHandle(SQL_HANDLE_STMT, command->hdbc, &hstmt);
+
+    ret = SQLExecDirectW(hstmt, command->query, SQL_NTS);
+    if (ret != SQL_SUCCESS)
+    {
+        dump_sql_diag_records(SQL_HANDLE_STMT, hstmt);
+        return E_FAIL;
+    }
+
+    ret = SQLGetDiagField(SQL_HANDLE_STMT, hstmt, 0, SQL_DIAG_CURSOR_ROW_COUNT, &results, sizeof(results), NULL);
+    if (ret != SQL_SUCCESS)
+        ERR("SQLGetDiagField failed (%d)\n", ret);
 
     msrowset = heap_alloc(sizeof(*msrowset));
     if (!msrowset)
         return E_OUTOFMEMORY;
 
-    msrowset->IRowset_iface.lpVtbl = &msdasql_rowset_vtbl;
-    msrowset->IRowsetInfo_iface.lpVtbl = &rowset_info_vtbl;
-    msrowset->IColumnsInfo_iface.lpVtbl = &rowset_columninfo_vtbll;
-    msrowset->IAccessor_iface.lpVtbl = &accessor_vtbl;
-    msrowset->IColumnsRowset_iface.lpVtbl = &columnrs_rs_vtbl;
-    msrowset->refs = 1;
-    ICommandText_QueryInterface(iface, &IID_IUnknown, (void**)&msrowset->caller);
+    /* For SQL statements that don't generate results will not return a rowset, for example 'CREATE TABLE' */
+    if (results != -1)
+    {
+        msrowset->IRowset_iface.lpVtbl = &msdasql_rowset_vtbl;
+        msrowset->IRowsetInfo_iface.lpVtbl = &rowset_info_vtbl;
+        msrowset->IColumnsInfo_iface.lpVtbl = &rowset_columninfo_vtbll;
+        msrowset->IAccessor_iface.lpVtbl = &accessor_vtbl;
+        msrowset->IColumnsRowset_iface.lpVtbl = &columnrs_rs_vtbl;
+        msrowset->refs = 1;
+        ICommandText_QueryInterface(iface, &IID_IUnknown, (void**)&msrowset->caller);
+        msrowset->hstmt = hstmt;
+    }
 
     if (affected)
-        *affected = 0; /* FIXME */
+        *affected = results;
 
     hr = IRowset_QueryInterface(&msrowset->IRowset_iface, riid, (void**)rowset);
     IRowset_Release(&msrowset->IRowset_iface);
@@ -1327,6 +1358,7 @@ static HRESULT WINAPI createcommand_CreateCommand(IDBCreateCommand *iface, IUnkn
     command->ICommandWithParameters_iface.lpVtbl = &command_with_params_vtbl;
     command->refs = 1;
     command->query = NULL;
+    command->hdbc = session->hdbc;
 
     for(i = 0; i < ARRAY_SIZE(command->properties); i++)
     {
@@ -1423,7 +1455,7 @@ static const IDBCreateCommandVtbl createcommandVtbl =
     createcommand_CreateCommand
 };
 
-HRESULT create_db_session(REFIID riid, IUnknown *datasource, void **unk)
+HRESULT create_db_session(REFIID riid, IUnknown *datasource, HDBC hdbc, void **unk)
 {
     struct msdasql_session *session;
     HRESULT hr;
@@ -1439,6 +1471,7 @@ HRESULT create_db_session(REFIID riid, IUnknown *datasource, void **unk)
     session->IDBCreateCommand_iface.lpVtbl = &createcommandVtbl;
     IUnknown_QueryInterface(datasource, &IID_IUnknown, (void**)&session->datasource);
     session->refs = 1;
+    session->hdbc = hdbc;
 
     hr = IUnknown_QueryInterface(&session->session_iface, riid, unk);
     IUnknown_Release(&session->session_iface);
diff --git a/dlls/msdasql/tests/provider.c b/dlls/msdasql/tests/provider.c
index c40f92a273b..4bfdb7ae54c 100644
--- a/dlls/msdasql/tests/provider.c
+++ b/dlls/msdasql/tests/provider.c
@@ -516,7 +516,7 @@ static void test_command_rowset(IUnknown *cmd)
     ok(hr == S_OK, "got 0x%08x\n", hr);
     todo_wine ok(unk == NULL, "Unexepcted value\n");
     todo_wine ok(affected == -1, "got %ld\n", affected);
-    if (unk)
+    if (unk != NULL)
         IUnknown_Release(unk);
 
     hr = ICommandText_SetCommandText(comand_text, &DBGUID_DEFAULT, L"select * from testing");
-- 
2.33.0

