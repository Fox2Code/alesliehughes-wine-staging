From 712e7248c12b6bbbeb0ebe8144cf532add89b3b2 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 12 Oct 2020 16:37:30 +1100
Subject: [PATCH] msdasql: Add IGetDataSource support to session

---
 dlls/msdasql/session.c | 45 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/dlls/msdasql/session.c b/dlls/msdasql/session.c
index ee753c84b56..96e163b13d7 100644
--- a/dlls/msdasql/session.c
+++ b/dlls/msdasql/session.c
@@ -35,6 +35,7 @@ WINE_DEFAULT_DEBUG_CHANNEL(msdasql);
 struct msdasql_session
 {
     IUnknown session_iface;
+    IGetDataSource IGetDataSource_iface;
     LONG refs;
 };
 
@@ -43,6 +44,11 @@ static inline struct msdasql_session *impl_from_IUnknown( IUnknown *iface )
     return CONTAINING_RECORD( iface, struct msdasql_session, session_iface );
 }
 
+static inline struct msdasql_session *impl_from_IGetDataSource( IGetDataSource *iface )
+{
+    return CONTAINING_RECORD( iface, struct msdasql_session, IGetDataSource_iface );
+}
+
 static HRESULT WINAPI session_QueryInterface(IUnknown *iface, REFIID riid, void **ppv)
 {
     struct msdasql_session *session = impl_from_IUnknown( iface );
@@ -54,6 +60,10 @@ static HRESULT WINAPI session_QueryInterface(IUnknown *iface, REFIID riid, void
         TRACE("(%p)->(IID_IUnknown %p)\n", iface, ppv);
         *ppv = &session->session_iface;
     }
+    else if(IsEqualGUID(&IID_IGetDataSource, riid)) {
+        TRACE("(%p)->(IID_IGetDataSource %p)\n", iface, ppv);
+        *ppv = &session->IGetDataSource_iface;
+    }
 
     if(*ppv) {
         IUnknown_AddRef((IUnknown*)*ppv);
@@ -91,6 +101,40 @@ static const IUnknownVtbl unkfactoryVtbl = {
     session_Release,
 };
 
+
+HRESULT WINAPI datasource_QueryInterface(IGetDataSource *iface, REFIID riid, void **out)
+{
+    struct msdasql_session *session = impl_from_IGetDataSource( iface );
+    return IUnknown_QueryInterface(&session->session_iface, riid, out);
+}
+
+ULONG WINAPI datasource_AddRef(IGetDataSource *iface)
+{
+    struct msdasql_session *session = impl_from_IGetDataSource( iface );
+    return IUnknown_AddRef(&session->session_iface);
+}
+
+ULONG WINAPI datasource_Release(IGetDataSource *iface)
+{
+    struct msdasql_session *session = impl_from_IGetDataSource( iface );
+    return IUnknown_Release(&session->session_iface);
+}
+
+HRESULT WINAPI datasource_GetDataSource(IGetDataSource *iface, REFIID riid, IUnknown **datasource)
+{
+    struct msdasql_session *session = impl_from_IGetDataSource( iface );
+    FIXME("%p, %s, %p stub\n", session, debugstr_guid(riid), datasource);
+
+    return E_NOTIMPL;
+}
+
+static const IGetDataSourceVtbl datasourceVtbl = {
+    datasource_QueryInterface,
+    datasource_AddRef,
+    datasource_Release,
+    datasource_GetDataSource
+};
+
 HRESULT create_db_session(REFIID riid, void **unk)
 {
     struct msdasql_session *session;
@@ -100,6 +144,7 @@ HRESULT create_db_session(REFIID riid, void **unk)
         return E_OUTOFMEMORY;
 
     session->session_iface.lpVtbl = &unkfactoryVtbl;
+    session->IGetDataSource_iface.lpVtbl = &datasourceVtbl;
     session->refs = 1;
 
     return IUnknown_QueryInterface((IUnknown *)session, riid, unk);
-- 
2.28.0

