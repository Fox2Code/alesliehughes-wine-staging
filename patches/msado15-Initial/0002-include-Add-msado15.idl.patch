From 9a5c7063566bd7ef26c90dd94f292aeb5c4cd39b Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 15 Dec 2015 12:07:51 +1100
Subject: [PATCH 2/9] include: Add msado15.idl

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 include/Makefile.in |    1 +
 include/msado15.idl | 2024 +++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 2025 insertions(+)
 create mode 100644 include/msado15.idl

diff --git a/include/Makefile.in b/include/Makefile.in
index 129ff6d..fe66557 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -90,6 +90,7 @@ IDL_SRCS = \
 	mmc.idl \
 	mmdeviceapi.idl \
 	mmstream.idl \
+	msado15.idl \
 	mscoree.idl \
 	msctf.idl \
 	msdadc.idl \
diff --git a/include/msado15.idl b/include/msado15.idl
new file mode 100644
index 0000000..0eb6c97
--- /dev/null
+++ b/include/msado15.idl
@@ -0,0 +1,2024 @@
+/*
+ * Copyright 2015 Alistair Leslie-Hughes
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+import "oaidl.idl";
+import "ocidl.idl";
+
+interface _ADO;
+interface _Collection;
+interface _Command;
+interface _Connection;
+interface _DynaCollection;
+interface _Parameter;
+interface _Record;
+interface _Recordset;
+interface _Stream;
+interface ADOConnectionConstruction;
+interface ADOCommandConstruction;
+interface ADODebugging;
+interface ADORecordsetConstruction;
+interface Command25;
+interface Command15;
+interface Connection15;
+interface ConnectionEventsVt;
+interface Error;
+interface Errors;
+interface Field;
+interface Field20;
+interface Field15;
+interface Fields;
+interface Fields20;
+interface Fields15;
+interface Parameters;
+interface Properties;
+interface Property;
+interface Recordset21;
+interface Recordset20;
+interface Recordset15;
+interface RecordsetEventsVt;
+
+dispinterface ConnectionEvents;
+dispinterface RecordsetEvents;
+
+
+#define ADO_LONGPTR long
+
+typedef
+[
+    uuid(0000051b-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adOpenUnspecified = -1,
+    adOpenForwardOnly =  0,
+    adOpenKeyset      =  1,
+    adOpenDynamic     =  2,
+    adOpenStatic      =  3
+} CursorTypeEnum;
+
+typedef
+[
+    uuid(0000051c-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adHoldRecords    =      256,
+    adMovePrevious   =      512,
+    adBookmark       =     8192,
+    adApproxPosition =    16384,
+    adUpdateBatch    =    65536,
+    adResync         =   131072,
+    adNotify         =   262144,
+    adFind           =   524288,
+    adSeek           =  4194304,
+    adIndex          =  8388608,
+    adAddNew         = 16778240,
+    adDelete         = 16779264,
+    adUpdate         = 16809984
+
+} CursorOptionEnum;
+
+typedef
+[
+    uuid(0000051d-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adLockUnspecified     = -1,
+    adLockReadOnly        =  1,
+    adLockPessimistic     =  2,
+    adLockOptimistic      =  3,
+    adLockBatchOptimistic =  4
+} LockTypeEnum;
+
+typedef
+[
+    uuid(0000051e-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adOptionUnspecified     =   -1,
+    adAsyncExecute          =   16,
+    adAsyncFetch            =   32,
+    adAsyncFetchNonBlocking =   64,
+    adExecuteNoRecords      =  128,
+    adExecuteStream         = 1024,
+    adExecuteRecord         = 2048
+} ExecuteOptionEnum;
+
+typedef
+[
+    uuid(00000541-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adConnectUnspecified = -1,
+    adAsyncConnect       = 16
+} ConnectOptionEnum;
+
+typedef
+[
+    uuid(00000532-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adStateClosed     = 0,
+    adStateOpen       = 1,
+    adStateConnecting = 2,
+    adStateExecuting  = 4,
+    adStateFetching   = 8
+} ObjectStateEnum;
+
+typedef
+[
+    uuid(0000052f-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adUseNone        = 1,
+    adUseServer      = 2,
+    adUseClient      = 3,
+    adUseClientBatch = 3
+} CursorLocationEnum;
+
+typedef
+[
+    uuid(0000051f-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adEmpty            =   0,
+    adSmallInt         =   2,
+    adInteger          =   3,
+    adSingle           =   4,
+    adDouble           =   5,
+    adCurrency         =   6,
+    adDate             =   7,
+    adBSTR             =   8,
+    adIDispatch        =   9,
+    adError            =  10,
+    adBoolean          =  11,
+    adVariant          =  12,
+    adIUnknown         =  13,
+    adDecimal          =  14,
+    adTinyInt          =  16,
+    adUnsignedTinyInt  =  17,
+    adUnsignedSmallInt =  18,
+    adUnsignedInt      =  19,
+    adBigInt           =  20,
+    adUnsignedBigInt   =  21,
+
+    adFileTime         =  64,
+    adGUID             =  72,
+
+    adBinary           = 128,
+    adChar             = 129,
+    adWChar            = 130,
+    adNumeric          = 131,
+    adUserDefined      = 132,
+    adDBDate           = 133,
+    adDBTime           = 134,
+    adDBTimeStamp      = 135,
+    adChapter          = 136,
+    adPropVariant      = 138,
+    adVarNumeric       = 139,
+
+    adVarChar          = 200,
+    adLongVarChar      = 201,
+    adVarWChar         = 202,
+    adLongVarWChar     = 203,
+    adVarBinary        = 204,
+    adLongVarBinary    = 205,
+
+    adArray            = 0x2000
+} DataTypeEnum;
+
+typedef
+[
+    uuid(00000525-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adFldUnspecified      =         -1,
+    adFldMayDefer         = 0x00000002,
+    adFldUpdatable        = 0x00000004,
+    adFldUnknownUpdatable = 0x00000008,
+    adFldFixed            = 0x00000010,
+    adFldIsNullable       = 0x00000020,
+    adFldMayBeNull        = 0x00000040,
+    adFldLong             = 0x00000080,
+    adFldRowID            = 0x00000100,
+    adFldRowVersion       = 0x00000200,
+    adFldCacheDeferred    = 0x00001000,
+    adFldIsChapter        = 0x00002000,
+    adFldNegativeScale    = 0x00004000,
+    adFldKeyColumn        = 0x00008000,
+    adFldIsRowURL         = 0x00010000,
+    adFldIsDefaultStream  = 0x00020000,
+    adFldIsCollection     = 0x00040000
+} FieldAttributeEnum;
+
+typedef
+[
+    uuid(00000526-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adEditNone       = 0,
+    adEditInProgress = 1,
+    adEditAdd        = 2,
+    adEditDelete     = 4
+} EditModeEnum;
+
+typedef
+[
+    uuid(00000527-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adRecOK                   =      0,
+    adRecNew                  =      1,
+    adRecModified             =      2,
+    adRecDeleted              =      4,
+    adRecUnmodified           =      8,
+    adRecInvalid              =     16,
+    adRecMultipleChanges      =     64,
+    adRecPendingChanges       =    128,
+    adRecCanceled             =    256,
+    adRecCantRelease          =   1024,
+    adRecConcurrencyViolation =   2048,
+    adRecIntegrityViolation   =   4096,
+    adRecMaxChangesExceeded   =   8192,
+    adRecObjectOpen           =  16384,
+    adRecOutOfMemory          =  32768,
+    adRecPermissionDenied     =  65536,
+    adRecSchemaViolation      = 131072,
+    adRecDBDeleted            = 262144
+} RecordStatusEnum;
+
+typedef
+[
+    uuid(00000542-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adGetRowsRest = -1
+} GetRowsOptionEnum;
+
+typedef
+[
+    uuid(00000528-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adPosUnknown = -1,
+    adPosBOF     = -2,
+    adPosEOF     = -3
+} PositionEnum;
+
+
+
+typedef
+    [
+        public,
+        uuid(a56187c5-d690-4037-ae32-a00edc376ac3),
+    ]
+    PositionEnum PositionEnum_Param;
+
+typedef enum
+{
+    adBookmarkCurrent = 0,
+    adBookmarkFirst   = 1,
+    adBookmarkLast    = 2
+} BookmarkEnum;
+
+typedef
+[
+    uuid(00000540-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adMarshalAll          = 0,
+    adMarshalModifiedOnly = 1
+} MarshalOptionsEnum;
+
+typedef
+[
+    uuid(00000543-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adAffectCurrent     = 1,
+    adAffectGroup       = 2,
+    adAffectAll         = 3,
+    adAffectAllChapters = 4
+} AffectEnum;
+
+typedef
+[
+    uuid(00000544-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adResyncUnderlyingValues = 1,
+    adResyncAllValues        = 2
+} ResyncEnum;
+
+typedef
+[
+    uuid(00000545-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adCompareLessThan      = 0,
+    adCompareEqual         = 1,
+    adCompareGreaterThan   = 2,
+    adCompareNotEqual      = 3,
+    adCompareNotComparable = 4
+} CompareEnum;
+
+typedef
+[
+    uuid(00000546-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adFilterNone               = 0,
+    adFilterPendingRecords     = 1,
+    adFilterAffectedRecords    = 2,
+    adFilterFetchedRecords     = 3,
+    adFilterPredicate          = 4,
+    adFilterConflictingRecords = 5
+} FilterGroupEnum;
+
+typedef
+[
+    uuid(00000547-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adSearchForward  =  1,
+    adSearchBackward = -1
+} SearchDirectionEnum;
+
+typedef [public] SearchDirectionEnum SearchDirection;
+
+typedef
+[
+    uuid(00000548-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adPersistADTG = 0,
+    adPersistXML  = 1
+} PersistFormatEnum;
+
+typedef
+[
+    uuid(00000549-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adClipString = 2
+} StringFormatEnum;
+
+
+typedef
+[
+    uuid(00000520-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adPromptAlways           = 1,
+    adPromptComplete         = 2,
+    adPromptCompleteRequired = 3,
+    adPromptNever            = 4
+} ConnectPromptEnum;
+
+typedef
+[
+    uuid(00000521-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adModeUnknown        =       0,
+    adModeRead           =       1,
+    adModeWrite          =       2,
+    adModeReadWrite      =       3,
+    adModeShareDenyRead  =       4,
+    adModeShareDenyWrite =       8,
+    adModeShareExclusive =      12,
+    adModeShareDenyNone  =      16,
+    adModeRecursive      = 4194304
+} ConnectModeEnum;
+
+typedef
+[
+    uuid(00000523-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adXactUnspecified     =      -1,
+    adXactChaos           =      16,
+    adXactReadUncommitted =     256,
+    adXactBrowse          =     256,
+    adXactCursorStability =    4096,
+    adXactReadCommitted   =    4096,
+    adXactRepeatableRead  =   65536,
+    adXactSerializable    = 1048576,
+    adXactIsolated        = 1048576
+} IsolationLevelEnum;
+
+typedef
+[
+    uuid(00000524-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adXactCommitRetaining =  131072,
+    adXactAbortRetaining  =  262144,
+    adXactAsyncPhaseOne   =  524288,
+    adXactSyncPhaseOne    = 1048576
+} XactAttributeEnum;
+
+typedef
+[
+    uuid(00000529-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adPropNotSupported =    0,
+    adPropRequired     =    1,
+    adPropOptional     =    2,
+    adPropRead         =  512,
+    adPropWrite        = 1024
+} PropertyAttributesEnum;
+
+typedef
+[
+    uuid(0000052a-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adErrInvalidArgument       = 3001,
+    adErrOpeningFile           = 3002,
+    adErrReadFile              = 3003,
+    adErrWriteFile             = 3004,
+    adErrNoCurrentRecord       = 3021,
+    adErrIllegalOperation      = 3219,
+    adErrCantChangeProvider    = 3220,
+    adErrInTransaction         = 3246,
+    adErrFeatureNotAvailable   = 3251,
+    adErrItemNotFound          = 3265,
+    adErrObjectInCollection    = 3367,
+    adErrObjectNotSet          = 3420,
+    adErrDataConversion        = 3421,
+    adErrObjectClosed          = 3704,
+    adErrObjectOpen            = 3705,
+    adErrProviderNotFound      = 3706,
+    adErrBoundToCommand        = 3707,
+    adErrInvalidParamInfo      = 3708,
+    adErrInvalidConnection     = 3709,
+    adErrNotReentrant          = 3710,
+    adErrStillExecuting        = 3711,
+    adErrOperationCancelled    = 3712,
+    adErrStillConnecting       = 3713,
+    adErrInvalidTransaction    = 3714,
+    adErrNotExecuting          = 3715,
+    adErrUnsafeOperation       = 3716,
+    adWrnSecurityDialog        = 3717,
+    adWrnSecurityDialogHeader  = 3718,
+    adErrIntegrityViolation    = 3719,
+    adErrPermissionDenied      = 3720,
+    adErrDataOverflow          = 3721,
+    adErrSchemaViolation       = 3722,
+    adErrSignMismatch          = 3723,
+    adErrCantConvertvalue      = 3724,
+    adErrCantCreate            = 3725,
+    adErrColumnNotOnThisRow    = 3726,
+    adErrURLDoesNotExist       = 3727,
+    adErrTreePermissionDenied  = 3728,
+    adErrInvalidURL            = 3729,
+    adErrResourceLocked        = 3730,
+    adErrResourceExists        = 3731,
+    adErrCannotComplete        = 3732,
+    adErrVolumeNotFound        = 3733,
+    adErrOutOfSpace            = 3734,
+    adErrResourceOutOfScope    = 3735,
+    adErrUnavailable           = 3736,
+    adErrURLNamedRowDoesNotExist = 3737,
+    adErrDelResOutOfScope      = 3738,
+    adErrPropInvalidColumn     = 3739,
+    adErrPropInvalidOption     = 3740,
+    adErrPropInvalidValue      = 3741,
+    adErrPropConflicting       = 3742,
+    adErrPropNotAllSettable    = 3743,
+    adErrPropNotSet            = 3744,
+    adErrPropNotSettable       = 3745,
+    adErrPropNotSupported      = 3746,
+    adErrCatalogNotSet         = 3747,
+    adErrCantChangeConnection  = 3748,
+    adErrFieldsUpdateFailed    = 3749,
+    adErrDenyNotSupported      = 3750,
+    adErrDenyTypeNotSupported  = 3751,
+    adErrProviderNotSpecified  = 3753,
+    adErrConnectionStringTooLong = 3754
+} ErrorValueEnum;
+
+typedef
+[
+    uuid(0000052b-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adParamSigned   =  16,
+    adParamNullable =  64,
+    adParamLong     = 128
+} ParameterAttributesEnum;
+
+typedef
+[
+    uuid(0000052c-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adParamUnknown     = 0,
+    adParamInput       = 1,
+    adParamOutput      = 2,
+    adParamInputOutput = 3,
+    adParamReturnValue = 4
+} ParameterDirectionEnum;
+
+typedef
+[
+    uuid(0000052e-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adCmdUnspecified =  -1,
+    adCmdText        =   1,
+    adCmdTable       =   2,
+    adCmdStoredProc  =   4,
+    adCmdUnknown     =   8,
+    adCmdFile        = 256,
+    adCmdTableDirect = 512
+} CommandTypeEnum;
+
+typedef
+[
+    uuid(00000530-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adStatusOK             = 1,
+    adStatusErrorsOccurred = 2,
+    adStatusCantDeny       = 3,
+    adStatusCancel         = 4,
+    adStatusUnwantedEvent  = 5
+} EventStatusEnum;
+
+typedef
+[
+    uuid(00000531-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adRsnAddNew       =  1,
+    adRsnDelete       =  2,
+    adRsnUpdate       =  3,
+    adRsnUndoUpdate   =  4,
+    adRsnUndoAddNew   =  5,
+    adRsnUndoDelete   =  6,
+    adRsnRequery      =  7,
+    adRsnResynch      =  8,
+    adRsnClose        =  9,
+    adRsnMove         = 10,
+    adRsnFirstChange  = 11,
+    adRsnMoveFirst    = 12,
+    adRsnMoveNext     = 13,
+    adRsnMovePrevious = 14,
+    adRsnMoveLast     = 15
+} EventReasonEnum;
+
+typedef
+[
+    uuid(00000533-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adSchemaProviderSpecific        = -1,
+    adSchemaAsserts                 =  0,
+    adSchemaCatalogs                =  1,
+    adSchemaCharacterSets           =  2,
+    adSchemaCollations              =  3,
+    adSchemaColumns                 =  4,
+    adSchemaCheckConstraints        =  5,
+    adSchemaConstraintColumnUsage   =  6,
+    adSchemaConstraintTableUsage    =  7,
+    adSchemaKeyColumnUsage          =  8,
+    adSchemaReferentialContraints   =  9,
+    adSchemaReferentialConstraints  =  9,
+    adSchemaTableConstraints        = 10,
+    adSchemaColumnsDomainUsage      = 11,
+    adSchemaIndexes                 = 12,
+    adSchemaColumnPrivileges        = 13,
+    adSchemaTablePrivileges         = 14,
+    adSchemaUsagePrivileges         = 15,
+    adSchemaProcedures              = 16,
+    adSchemaSchemata                = 17,
+    adSchemaSQLLanguages            = 18,
+    adSchemaStatistics              = 19,
+    adSchemaTables                  = 20,
+    adSchemaTranslations            = 21,
+    adSchemaProviderTypes           = 22,
+    adSchemaViews                   = 23,
+    adSchemaViewColumnUsage         = 24,
+    adSchemaViewTableUsage          = 25,
+    adSchemaProcedureParameters     = 26,
+    adSchemaForeignKeys             = 27,
+    adSchemaPrimaryKeys             = 28,
+    adSchemaProcedureColumns        = 29,
+    adSchemaDBInfoKeywords          = 30,
+    adSchemaDBInfoLiterals          = 31,
+    adSchemaCubes                   = 32,
+    adSchemaDimensions              = 33,
+    adSchemaHierarchies             = 34,
+    adSchemaLevels                  = 35,
+    adSchemaMeasures                = 36,
+    adSchemaProperties              = 37,
+    adSchemaMembers                 = 38,
+    adSchemaTrustees                = 39,
+    adSchemaFunctions               = 40,
+    adSchemaActions                 = 41,
+    adSchemaCommands                = 42,
+    adSchemaSets                    = 43
+} SchemaEnum;
+
+typedef
+[
+    uuid(00000552-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adSeekFirstEQ  =  1,
+    adSeekLastEQ   =  2,
+    adSeekAfterEQ  =  4,
+    adSeekAfter    =  8,
+    adSeekBeforeEQ = 16,
+    adSeekBefore   = 32
+} SeekEnum;
+
+typedef
+[
+    uuid(0000054a-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adCriteriaKey       = 0,
+    adCriteriaAllCols   = 1,
+    adCriteriaUpdCols   = 2,
+    adCriteriaTimeStamp = 3
+} ADCPROP_UPDATECRITERIA_ENUM;
+
+typedef
+[
+    uuid(0000054b-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adPriorityLowest      = 1,
+    adPriorityBelowNormal = 2,
+    adPriorityNormal      = 3,
+    adPriorityAboveNormal = 4,
+    adPriorityHighest     = 5
+} ADCPROP_ASYNCTHREADPRIORITY_ENUM;
+
+typedef
+[
+    uuid(00000553-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adResyncNone          =  0,
+    adResyncAutoIncrement =  1,
+    adResyncConflicts     =  2,
+    adResyncUpdates       =  4,
+    adResyncInserts       =  8,
+    adResyncAll           = 15
+} CEResyncEnum;
+
+typedef
+[
+    uuid(00000554-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adRecalcUpFront = 0,
+    adRecalcAlways  = 1
+} ADCPROP_AUTORECALC_ENUM;
+
+typedef
+[
+    uuid(0000057e-0000-0010-8000-00aa006d2ea4)
+]
+enum FieldStatusEnum
+{
+    adFieldOK                 =  0,
+    adFieldCantConvertValue   =  2,
+    adFieldIsNull             =  3,
+    adFieldTruncated          =  4,
+    adFieldSignMismatch       =  5,
+    adFieldDataOverflow       =  6,
+    adFieldCantCreate         =  7,
+    adFieldUnavailable        =  8,
+    adFieldPermissionDenied   =  9,
+    adFieldIntegrityViolation = 10,
+    adFieldSchemaViolation    = 11,
+    adFieldBadStatus          = 12,
+    adFieldDefault            = 13,
+    adFieldIgnore             = 15,
+    adFieldDoesNotExist       = 16,
+    adFieldInvalidURL         = 17,
+    adFieldResourceLocked     = 18,
+    adFieldResourceExists     = 19,
+    adFieldCannotComplete     = 20,
+    adFieldVolumeNotFound     = 21,
+    adFieldOutOfSpace         = 22,
+    adFieldCannotDeleteSource = 23,
+    adFieldReadOnly           = 24,
+    adFieldResourceOutOfScope = 25,
+    adFieldAlreadyExists      = 26,
+
+    adFieldPendingInsert           = 0x010000,
+    adFieldPendingDelete           = 0x020000,
+    adFieldPendingChange           = 0x040000,
+    adFieldPendingUnknown          = 0x080000,
+    adFieldPendingUnknownDelete    = 0x100000
+} FieldStatusEnum;
+
+
+typedef
+[
+    uuid(00000570-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adCreateNonCollection    = 0x00000000,
+    adCreateCollection       = 0x00002000,
+    adOpenIfExists           = 0x02000000,
+    adCreateOverwrite        = 0x04000000,
+    adCreateStructDoc        = 0x80000000,
+    adFailIfNotExists        = -1
+} RecordCreateOptionsEnum;
+
+typedef
+[
+    uuid(00000571-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adOpenAsync                 = 0x00001000,
+    adDelayFetchStream          = 0x00004000,
+    adDelayFetchFields          = 0x00008000,
+    adOpenExecuteCommand        = 0x00010000,
+    adOpenSource                = 0x00800000,
+    adOpenOutput                = 0x00800000,
+    adOpenRecordUnspecified     = -1
+} RecordOpenOptionsEnum;
+
+typedef
+[
+    uuid(00000573-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adMoveUnspecified     = -1,
+    adMoveOverWrite       =  1,
+    adMoveDontUpdateLinks =  2,
+    adMoveAllowEmulation  =  4
+} MoveRecordOptionsEnum;
+
+typedef
+[
+    uuid(00000574-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adCopyUnspecified    = -1,
+    adCopyOverWrite      =  1,
+    adCopyNonRecursive   =  2,
+    adCopyAllowEmulation =  4
+} CopyRecordOptionsEnum;
+
+typedef
+[
+    uuid(00000576-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adTypeBinary    = 1,
+    adTypeText      = 2
+} StreamTypeEnum;
+
+typedef
+[
+    uuid(00000577-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adLF        = 10,
+    adCR        = 13,
+    adCRLF      = -1
+} LineSeparatorEnum;
+
+typedef
+[
+    uuid(0000057a-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adOpenStreamUnspecified        = -1,
+    adOpenStreamAsync              =  1,
+    adOpenStreamFromRecord         =  4,
+    adOpenStreamFromCommand        =  8
+} StreamOpenOptionsEnum;
+
+typedef
+[
+    uuid(0000057b-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adWriteChar            = 0,
+    adWriteLine            = 1
+} StreamWriteEnum;
+
+typedef
+[
+    uuid(0000057c-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adSaveCreateNotExist    = 1,
+    adSaveCreateOverWrite   = 2
+} SaveOptionsEnum;
+
+typedef enum
+{
+    adDefaultStream        = -1,
+    adRecordURL            = -2
+} FieldEnum;
+
+typedef enum
+{
+    adReadAll             = -1,
+    adReadLine            = -2
+} StreamReadEnum;
+
+typedef
+[
+    uuid(0000057d-0000-0010-8000-00aa006d2ea4)
+]
+enum
+{
+    adSimpleRecord        = 0,
+    adCollectionRecord    = 1,
+    adStructDoc           = 2
+} RecordTypeEnum;
+
+[
+    odl,
+    uuid(00000512-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _Collection : IDispatch
+{
+    [id(0x60020000), propget]
+    HRESULT Count([out, retval] long *cnt);
+    [id(DISPID_NEWENUM), restricted]
+    HRESULT _NewEnum([out, retval] IUnknown **object);
+    [id(0x60020002)]
+    HRESULT Refresh();
+};
+
+[
+    odl,
+    uuid(00000513-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _DynaCollection : _Collection
+{
+    [id(0x60030000)]
+    HRESULT Append([in] IDispatch *object);
+    [id(0x60030001)]
+    HRESULT Delete([in] VARIANT index);
+};
+
+[
+    odl,
+    uuid(00000534-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _ADO : IDispatch
+{
+    [id(0x000001f4), propget]
+    HRESULT Properties([out, retval] Properties **props);
+};
+
+[
+    odl,
+    uuid(00000504-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Properties : _Collection
+{
+    [id(00000000), propget]
+    HRESULT Item([in] VARIANT index, [out, retval] Property **property);
+};
+
+[
+    odl,
+    uuid(00000503-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Property : IDispatch {
+    [id(00000000), propget]
+    HRESULT Value([out, retval] VARIANT *value);
+    [id(00000000), propput]
+    HRESULT Value([in] VARIANT value);
+    [id(0x60020002), propget]
+    HRESULT Name([out, retval] BSTR *name);
+    [id(0x60020003), propget]
+    HRESULT Type([out, retval] DataTypeEnum *type);
+    [id(0x60020004), propget]
+    HRESULT Attributes([out, retval] long *attributes);
+    [id(0x60020004), propput]
+    HRESULT Attributes([in] long attributes);
+};
+
+[
+    odl,
+    uuid(00000500-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Error : IDispatch {
+    [id(0x60020000), propget]
+    HRESULT Number([out, retval] long *num);
+    [id(0x60020001), propget]
+    HRESULT Source([out, retval] BSTR *source);
+    [id(00000000), propget]
+    HRESULT Description([out, retval] BSTR *desc);
+    [id(0x60020003), propget]
+    HRESULT HelpFile([out, retval] BSTR *help);
+    [id(0x60020004), propget]
+    HRESULT HelpContext([out, retval] long *helpcontext);
+    [id(0x60020005), propget]
+    HRESULT SQLState([out, retval] BSTR *state);
+    [id(0x60020006), propget]
+    HRESULT NativeError([out, retval] long *error);
+};
+
+[
+    odl,
+    uuid(00000501-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Errors : _Collection
+{
+    [id(00000000), propget]
+    HRESULT Item([in] VARIANT index, [out, retval] Error **error);
+    [id(0x60030001)]
+    HRESULT Clear();
+};
+
+[
+    odl,
+    uuid(00000508-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Command15 : _ADO
+{
+    [id(0x60030000), propget]
+    HRESULT ActiveConnection([out, retval] _Connection **connection);
+    [id(0x60030000), propputref]
+    HRESULT ActiveConnection([in] _Connection *connection);
+    [id(0x60030000), propput]
+    HRESULT ActiveConnection([in] VARIANT connection);
+    [id(0x60030003), propget]
+    HRESULT CommandText([out, retval] BSTR *text);
+    [id(0x60030003), propput]
+    HRESULT CommandText([in] BSTR text);
+    [id(0x60030005), propget]
+    HRESULT CommandTimeout([out, retval] long *timeout);
+    [id(0x60030005), propput]
+    HRESULT CommandTimeout([in] long timeout);
+    [id(0x60030007), propget]
+    HRESULT Prepared([out, retval] VARIANT_BOOL *prepared);
+    [id(0x60030007), propput]
+    HRESULT Prepared([in] VARIANT_BOOL prepared);
+    [id(0x60030009)]
+    HRESULT Execute([out, optional] VARIANT *recordsaffected, [in, optional] VARIANT *parameters,
+                    [in, defaultvalue(-1)] long options, [out, retval] _Recordset **recordset);
+    [id(0x6003000a)]
+    HRESULT CreateParameter(
+                    [in,  defaultvalue("")] BSTR name, [in, defaultvalue(adEmpty)] DataTypeEnum type,
+                    [in, defaultvalue(adParamInput)] ParameterDirectionEnum direction,
+                    [in, defaultvalue(0)] ADO_LONGPTR size, [in, optional] VARIANT value,
+                    [out, retval] _Parameter **parameter);
+    [id(00000000), propget]
+    HRESULT Parameters([out, retval] Parameters **parameters);
+    [id(0x6003000c), propput]
+    HRESULT CommandType([in] CommandTypeEnum cmdtype);
+    [id(0x6003000c), propget]
+    HRESULT CommandType([out, retval] CommandTypeEnum *cmdtype);
+    [id(0x6003000e), propget]
+    HRESULT Name([out, retval] BSTR *Name);
+    [id(0x6003000e), propput]
+    HRESULT Name([in] BSTR Name);
+};
+
+[
+    odl,
+    uuid(0000054e-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Command25 : Command15
+{
+    [id(0x60030010), propget]
+    HRESULT State([out, retval] long *state);
+    [id(0x60030011)]
+    HRESULT Cancel();
+};
+
+[
+    odl,
+    uuid(b08400bd-f9d1-4d02-b856-71d5dba123e9),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _Command : Command25
+{
+    [id(0x60030012), propputref]
+    HRESULT CommandStream([in] IUnknown *stream);
+    [id(0x60030012), propget]
+    HRESULT CommandStream([out, retval] VARIANT *stream);
+    [id(0x60030013), propput]
+    HRESULT Dialect([in] BSTR dialect);
+    [id(0x60030013), propget]
+    HRESULT Dialect([out, retval] BSTR  *dialect);
+    [id(0x60030014), propput]
+    HRESULT NamedParameters([in] VARIANT_BOOL namedparameters);
+    [id(0x60030014), propget]
+    HRESULT NamedParameters([out, retval] VARIANT_BOOL *namedparameters);
+};
+
+[
+    odl,
+    uuid(00000515-0000-0010-8000-00aa006d2ea4),
+    dual,
+    oleautomation
+]
+interface Connection15 : _ADO {
+    [id(00000000), propget]
+    HRESULT ConnectionString([out, retval] BSTR *connectionstring);
+    [id(00000000), propput]
+    HRESULT ConnectionString([in] BSTR connectionstring);
+    [id(0x00000002), propget]
+    HRESULT CommandTimeout([out, retval] long *timeout);
+    [id(0x00000002), propput]
+    HRESULT CommandTimeout([in] long timeout);
+    [id(0x00000003), propget]
+    HRESULT ConnectionTimeout([out, retval] long *timeout);
+    [id(0x00000003), propput]
+    HRESULT ConnectionTimeout([in] long timeout);
+    [id(0x00000004), propget]
+    HRESULT Version([out, retval] BSTR *version);
+    [id(0x00000005)]
+    HRESULT Close();
+    [id(0x00000006)]
+    HRESULT Execute([in] BSTR commandtext, [out, optional] VARIANT *recordsaffected,
+                    [in, defaultvalue(-1)] long options, [out, retval] _Recordset **recordset);
+    [id(0x00000007)]
+    HRESULT BeginTrans([out, retval] long *transactionlevel);
+    [id(0x00000008)]
+    HRESULT CommitTrans();
+    [id(0x00000009)]
+    HRESULT RollbackTrans();
+    [id(0x0000000a)]
+    HRESULT Open([in, defaultvalue("")] BSTR connectionstring,[in, defaultvalue("")] BSTR userid,
+                    [in, defaultvalue("")] BSTR password, [in, defaultvalue(-1)] long options);
+    [id(0x0000000b), propget]
+    HRESULT Errors([out, retval] Errors **errors);
+    [id(0x0000000c), propget]
+    HRESULT DefaultDatabase([out, retval] BSTR *defaultdb);
+    [id(0x0000000c), propput]
+    HRESULT DefaultDatabase([in] BSTR defaultdb);
+    [id(0x0000000d), propget]
+    HRESULT IsolationLevel([out, retval] IsolationLevelEnum *level);
+    [id(0x0000000d), propput]
+    HRESULT IsolationLevel([in] IsolationLevelEnum level);
+    [id(0x0000000e), propget]
+    HRESULT Attributes([out, retval] long *attributes);
+    [id(0x0000000e), propput]
+    HRESULT Attributes([in] long attributes);
+    [id(0x0000000f), propget]
+    HRESULT CursorLocation([out, retval] CursorLocationEnum *cursorloc);
+    [id(0x0000000f), propput]
+    HRESULT CursorLocation([in] CursorLocationEnum cursorloc);
+    [id(0x00000010), propget]
+    HRESULT Mode([out, retval] ConnectModeEnum *mode);
+    [id(0x00000010), propput]
+    HRESULT Mode([in] ConnectModeEnum mode);
+    [id(0x00000011), propget]
+    HRESULT Provider([out, retval] BSTR *provider);
+    [id(0x00000011), propput]
+    HRESULT Provider([in] BSTR provider);
+    [id(0x00000012), propget]
+    HRESULT State([out, retval] long *statee);
+    [id(0x00000013)]
+    HRESULT OpenSchema([in] SchemaEnum schema, [in, optional] VARIANT restrictions,
+                    [in, optional] VARIANT schemaid, [out, retval] _Recordset **recordset);
+};
+
+[
+    odl,
+    uuid(00000550-0000-0010-8000-00aa006d2ea4),
+    dual,
+    oleautomation
+]
+interface _Connection : Connection15
+{
+    [id(0x00000015)]
+    HRESULT Cancel();
+};
+
+
+
+[
+    odl,
+    uuid(0000050e-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Recordset15 : _ADO
+{
+    [id(0x000003e8), propget]
+    HRESULT AbsolutePosition([out, retval] PositionEnum_Param *position);
+    [id(0x000003e8), propput]
+    HRESULT AbsolutePosition([in] PositionEnum_Param position);
+    [id(0x000003e9), propputref]
+    HRESULT ActiveConnection([in] IDispatch *connection);
+    [id(0x000003e9), propput]
+    HRESULT ActiveConnection([in] VARIANT connection);
+    [id(0x000003e9), propget]
+    HRESULT ActiveConnection([out, retval] VARIANT *connection);
+    [id(0x000003ea), propget]
+    HRESULT BOF([out, retval] VARIANT_BOOL *bof);
+    [id(0x000003eb), propget]
+    HRESULT Bookmark([out, retval] VARIANT *bookmark);
+    [id(0x000003eb), propput]
+    HRESULT Bookmark([in] VARIANT bookmark);
+    [id(0x000003ec), propget]
+    HRESULT CacheSize([out, retval] long *cache);
+    [id(0x000003ec), propput]
+    HRESULT CacheSize([in] long cache);
+    [id(0x000003ed), propget]
+    HRESULT CursorType([out, retval] CursorTypeEnum *cursortype);
+    [id(0x000003ed), propput]
+    HRESULT CursorType([in] CursorTypeEnum cursortype);
+    [id(0x000003ee), propget]
+    HRESULT EOF([out, retval] VARIANT_BOOL *eof);
+    [id(00000000), propget]
+    HRESULT Fields([out, retval] Fields **fields);
+    [id(0x000003f0), propget]
+    HRESULT LockType([out, retval] LockTypeEnum *locktype);
+    [id(0x000003f0), propput]
+    HRESULT LockType([in] LockTypeEnum locktype);
+    [id(0x000003f1), propget]
+    HRESULT MaxRecords([out, retval] ADO_LONGPTR* maxrecords);
+    [id(0x000003f1), propput]
+    HRESULT MaxRecords([in] ADO_LONGPTR maxrecords);
+    [id(0x000003f2), propget]
+    HRESULT RecordCount([out, retval] ADO_LONGPTR *recordcnt);
+    [id(0x000003f3), propputref]
+    HRESULT Source([in] IDispatch *source);
+    [id(0x000003f3), propput]
+    HRESULT Source([in] BSTR source);
+    [id(0x000003f3), propget]
+    HRESULT Source([out, retval] VARIANT *source);
+    [id(0x000003f4)]
+    HRESULT AddNew([in, optional] VARIANT fieldlist, [in, optional] VARIANT values);
+    [id(0x000003f5)]
+    HRESULT CancelUpdate();
+    [id(0x000003f6)]
+    HRESULT Close();
+    [id(0x000003f7)]
+    HRESULT Delete([in, defaultvalue(adAffectCurrent)] AffectEnum affectrecords);
+    [id(0x000003f8)]
+    HRESULT GetRows([in, defaultvalue(-1)] long rows, [in, optional] VARIANT start,
+                    [in, optional] VARIANT fields, [out, retval] VARIANT *var);
+    [id(0x000003f9)]
+    HRESULT Move([in] ADO_LONGPTR numrecords, [in, optional] VARIANT start);
+    [id(0x000003fa)]
+    HRESULT MoveNext();
+    [id(0x000003fb)]
+    HRESULT MovePrevious();
+    [id(0x000003fc)]
+    HRESULT MoveFirst();
+    [id(0x000003fd)]
+    HRESULT MoveLast();
+    [id(0x000003fe)]
+    HRESULT Open([in, optional] VARIANT source, [in, optional] VARIANT activeconnection,
+                    [in, defaultvalue(adOpenUnspecified)] CursorTypeEnum cursortype,
+                    [in, defaultvalue(adLockUnspecified)] LockTypeEnum locktype,
+                    [in, defaultvalue(-1)] long options);
+    [id(0x000003ff)]
+    HRESULT Requery([in, defaultvalue(-1)] long options);
+    [id(0x60030022), hidden]
+    HRESULT _xResync([in, defaultvalue(adAffectAll)] AffectEnum affectrecords);
+    [id(0x00000401)]
+    HRESULT Update([in, optional] VARIANT fields, [in, optional] VARIANT values);
+    [id(0x00000417), propget]
+    HRESULT AbsolutePage([out, retval] PositionEnum_Param *pos);
+    [id(0x00000417), propput]
+    HRESULT AbsolutePage([in] PositionEnum_Param pos);
+    [id(0x00000402), propget]
+    HRESULT EditMode([out, retval] EditModeEnum *pos);
+    [id(0x00000406), propget]
+    HRESULT Filter([out, retval] VARIANT* criteria);
+    [id(0x00000406), propput]
+    HRESULT Filter([in] VARIANT Criteria);
+    [id(0x0000041a), propget]
+    HRESULT PageCount([out, retval] ADO_LONGPTR *cnt);
+    [id(0x00000418), propget]
+    HRESULT PageSize([out, retval] long *size);
+    [id(0x00000418), propput]
+    HRESULT PageSize([in] long pl);
+    [id(0x00000407), propget]
+    HRESULT Sort([out, retval] BSTR *criteria);
+    [id(0x00000407), propput]
+    HRESULT Sort([in] BSTR criteria);
+    [id(0x00000405), propget]
+    HRESULT Status([out, retval] long *status);
+    [id(0x0000041e), propget]
+    HRESULT State([out, retval] long *state);
+    [id(0x60030030), hidden]
+    HRESULT _xClone([out, retval] _Recordset **clone);
+    [id(0x0000040b)]
+    HRESULT UpdateBatch([in, defaultvalue(adAffectAll)] AffectEnum affectrecords);
+    [id(0x00000419)]
+    HRESULT CancelBatch([in, defaultvalue(adAffectAll)] AffectEnum affectrecords);
+    [id(0x0000041b), propget]
+    HRESULT CursorLocation([out, retval] CursorLocationEnum *location);
+    [id(0x0000041b), propput]
+    HRESULT CursorLocation([in] CursorLocationEnum location);
+    [id(0x0000041c)]
+    HRESULT NextRecordset([out, optional] VARIANT *recordsaffected, [out, retval] _Recordset **out);
+    [id(0x0000040c)]
+    HRESULT Supports([in] CursorOptionEnum cursoroptions, [out, retval] VARIANT_BOOL *out);
+    [id(0xfffffff8), propget, hidden]
+    HRESULT Collect([in] VARIANT index, [out, retval] VARIANT *var);
+    [id(0xfffffff8), propput, hidden]
+    HRESULT Collect([in] VARIANT index, [in] VARIANT var);
+    [id(0x0000041d), propget]
+    HRESULT MarshalOptions([out, retval] MarshalOptionsEnum *marshal);
+    [id(0x0000041d), propput]
+    HRESULT MarshalOptions([in] MarshalOptionsEnum marshal);
+    [id(0x00000422)]
+    HRESULT Find([in] BSTR criteria, [in, defaultvalue(0)] ADO_LONGPTR skiprecords,
+                        [in, defaultvalue(adSearchForward)] SearchDirectionEnum direction,
+                        [in, optional] VARIANT start);
+    };
+
+[
+    odl,
+    uuid(0000054f-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Recordset20 : Recordset15
+{
+    [id(0x0000041f)]
+    HRESULT Cancel();
+    [id(0x00000420), propget]
+    HRESULT DataSource([out, retval] IUnknown **datasource);
+    [id(0x00000420), propputref]
+    HRESULT DataSource([in] IUnknown *datasource);
+    [hidden]
+    HRESULT _xSave([in, optional] BSTR filename, [in, defaultvalue(adPersistADTG)] PersistFormatEnum format);
+    [id(0x00000425), propget]
+    HRESULT ActiveCommand([out, retval] IDispatch **cmd);
+    [id(0x00000427), propput]
+    HRESULT StayInSync([in] VARIANT_BOOL insync);
+    [id(0x00000427), propget]
+    HRESULT StayInSync([out, retval] VARIANT_BOOL *insync);
+    [id(0x00000426)]
+    HRESULT GetString( [in, defaultvalue(adClipString)] StringFormatEnum stringformat,
+                    [in, defaultvalue(-1)] long row_cnt, [in, optional] BSTR columndelimeter,
+                    [in, optional] BSTR rowdelimeter, [in, optional] BSTR nullexpr, [out, retval] BSTR *string);
+    [id(0x00000428), propget]
+    HRESULT DataMember([out, retval] BSTR *datamember);
+    [id(0x00000428), propput]
+    HRESULT DataMember([in] BSTR datamember);
+    [id(0x00000429)]
+    HRESULT CompareBookmarks([in] VARIANT bookmark1, [in] VARIANT bookmark2, [out, retval] CompareEnum *compare);
+    [id(0x0000040a)]
+    HRESULT Clone([in, defaultvalue(adLockUnspecified)] LockTypeEnum locktype, [out, retval] _Recordset **recordset);
+    [id(0x00000400)]
+    HRESULT Resync([in, defaultvalue(adAffectAll)] AffectEnum affectrecords,
+                    [in, defaultvalue(adResyncAllValues)] ResyncEnum resync);
+};
+
+
+[
+    odl,
+    uuid(00000555-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Recordset21 : Recordset20
+{
+    [id(0x0000042a)]
+    HRESULT Seek([in] VARIANT keysvalues, [in, defaultvalue(adSeekFirstEQ)] SeekEnum option);
+    [id(0x0000042b), propput]
+    HRESULT Index([in] BSTR index);
+    [id(0x0000042b), propget]
+    HRESULT Index([out, retval] BSTR *index);
+};
+
+[
+    odl,
+    uuid(00000556-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _Recordset : Recordset21
+{
+    [id(0x00000421)]
+    HRESULT Save([in, optional] VARIANT destination,[in, defaultvalue(adPersistADTG)] PersistFormatEnum format);
+}
+
+[
+    odl,
+    uuid(00000506-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Fields15 : _Collection
+{
+    [id(00000000), propget]
+    HRESULT Item([in] VARIANT index, [out, retval] Field **object);
+};
+
+[
+    odl,
+    uuid(0000054d-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Fields20 : Fields15
+{
+    [id(0x60030001)]
+    HRESULT _Append([in] BSTR name,[in] DataTypeEnum type, [in, defaultvalue(0)] ADO_LONGPTR size,
+                    [in, defaultvalue(adFldUnspecified)] FieldAttributeEnum attrib);
+    [id(0x60030002)]
+    HRESULT Delete([in] VARIANT Index);
+};
+
+[
+    odl,
+    uuid(00000564-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Fields : Fields20
+{
+    [id(0x60040001)]
+    HRESULT Append([in] BSTR Name, [in] DataTypeEnum type, [in, defaultvalue(0)] ADO_LONGPTR definedsize,
+                    [in, defaultvalue(adFldUnspecified)] FieldAttributeEnum attrib, [in, optional] VARIANT value);
+    [id(0x60040002)]
+    HRESULT Update();
+    [id(0x60040003)]
+    HRESULT Resync([in, defaultvalue(adResyncAllValues)] ResyncEnum resync);
+    [id(0x60040004)]
+    HRESULT CancelUpdate();
+};
+
+[
+    odl,
+    uuid(00000505-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Field15 : _ADO
+{
+    [id(0x00000455), propget]
+    HRESULT ActualSize([out, retval] ADO_LONGPTR *size);
+    [id(0x0000040c), propget]
+    HRESULT Attributes([out, retval] long *size);
+    [id(0x0000044f), propget]
+    HRESULT DefinedSize([out, retval] ADO_LONGPTR *size);
+    [id(0x0000044c), propget]
+    HRESULT Name([out, retval] BSTR *name);
+    [id(0x0000044e), propget]
+    HRESULT Type([out, retval] DataTypeEnum *datatype);
+    [id(00000000), propget]
+    HRESULT Value([out, retval] VARIANT *value);
+    [id(00000000), propput]
+    HRESULT Value([in] VARIANT value);
+    [id(0x60030007), propget]
+    HRESULT Precision([out, retval] unsigned char* precision);
+    [id(0x60030008), propget]
+    HRESULT NumericScale([out, retval] unsigned char* numericscale);
+    [id(0x00000453)]
+    HRESULT AppendChunk([in] VARIANT data);
+    [id(0x00000454)]
+    HRESULT GetChunk( [in] long Length, [out, retval] VARIANT *data);
+    [id(0x00000450), propget]
+    HRESULT OriginalValue([out, retval] VARIANT *value);
+    [id(0x00000451), propget]
+    HRESULT UnderlyingValue([out, retval] VARIANT *data);
+};
+
+[
+    odl,
+    uuid(0000054c-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation,
+    hidden
+]
+interface Field20 : _ADO
+{
+    [id(0x00000455), propget]
+    HRESULT ActualSize([out, retval] ADO_LONGPTR *size);
+    [id(0x0000040c), propget]
+    HRESULT Attributes([out, retval] long *attributes);
+    [id(0x0000044f), propget]
+    HRESULT DefinedSize([out, retval] ADO_LONGPTR *size);
+    [id(0x0000044c), propget]
+    HRESULT Name([out, retval] BSTR *name);
+    [id(0x0000044e), propget]
+    HRESULT Type([out, retval] DataTypeEnum *datatype);
+    [id(00000000), propget]
+    HRESULT Value([out, retval] VARIANT *value);
+    [id(00000000), propput]
+    HRESULT Value([in] VARIANT value);
+    [id(0x60030007), propget]
+    HRESULT Precision([out, retval] unsigned char *precision);
+    [id(0x60030008), propget]
+    HRESULT NumericScale([out, retval] unsigned char *numericscale);
+    [id(0x00000453)]
+    HRESULT AppendChunk([in] VARIANT data);
+    [id(0x00000454)]
+    HRESULT GetChunk([in] long Length, [out, retval] VARIANT *data);
+    [id(0x00000450), propget]
+    HRESULT OriginalValue([out, retval] VARIANT *value);
+    [id(0x00000451), propget]
+    HRESULT UnderlyingValue([out, retval] VARIANT *value);
+    [id(0x6003000d), propget]
+    HRESULT DataFormat([out, retval] IUnknown **dataformat);
+    [id(0x6003000d), propputref]
+    HRESULT DataFormat([in] IUnknown * dataformat);
+    [id(0x60030007), propput]
+    HRESULT Precision([in] unsigned char precision);
+    [id(0x60030008), propput]
+    HRESULT NumericScale([in] unsigned char numericscale);
+    [id(0x0000044e), propput]
+    HRESULT Type([in] DataTypeEnum datatype);
+    [id(0x0000044f), propput]
+    HRESULT DefinedSize([in] ADO_LONGPTR size);
+    [id(0x0000040c), propput]
+    HRESULT Attributes([in] long cnt);
+};
+
+[
+    odl,
+    uuid(00000569-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Field : Field20
+{
+    [ id(0x0000045c),propget]
+    HRESULT Status([out, retval] long *status);
+};
+
+[
+    odl,
+    uuid(0000050c-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _Parameter : _ADO
+{
+    [id(0x60030000), propget]
+    HRESULT Name([out, retval] BSTR *name);
+    [id(0x60030000), propput]
+    HRESULT Name([in] BSTR name);
+    [id(00000000), propget]
+    HRESULT Value([out, retval] VARIANT *value);
+    [id(00000000), propput]
+    HRESULT Value([in] VARIANT value);
+    [id(0x60030004), propget]
+    HRESULT Type([out, retval] DataTypeEnum *datatype);
+    [id(0x60030004), propput]
+    HRESULT Type([in] DataTypeEnum datatype);
+    [id(0x60030006), propput]
+    HRESULT Direction([in] ParameterDirectionEnum direction);
+    [id(0x60030006), propget]
+    HRESULT Direction([out, retval] ParameterDirectionEnum *direction);
+    [id(0x60030008), propput]
+    HRESULT Precision([in] unsigned char precision);
+    [id(0x60030008), propget]
+    HRESULT Precision([out, retval] unsigned char *precision);
+    [id(0x6003000a), propput]
+    HRESULT NumericScale([in] unsigned char scale);
+    [id(0x6003000a), propget]
+    HRESULT NumericScale([out, retval] unsigned char *scale);
+    [id(0x6003000c), propput]
+    HRESULT Size([in] ADO_LONGPTR size);
+    [id(0x6003000c), propget]
+    HRESULT Size([out, retval] ADO_LONGPTR *size);
+    [id(0x6003000e)]
+    HRESULT AppendChunk([in] VARIANT chunk);
+    [id(0x6003000f), propget]
+    HRESULT Attributes([out, retval] long *attributes);
+    [id(0x6003000f), propput]
+    HRESULT Attributes([in] long attributes);
+};
+
+[
+    odl,
+    uuid(0000050d-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface Parameters : _DynaCollection
+{
+    [id(00000000), propget]
+    HRESULT Item([in] VARIANT index, [out, retval] _Parameter **parameter);
+};
+
+[
+    odl,
+    uuid(00000562-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _Record : _ADO
+{
+    [id(1), propget]
+    HRESULT ActiveConnection([out, retval] VARIANT *var);
+    [id(1), propput]
+    HRESULT ActiveConnection([in] BSTR connection);
+    [id(1), propputref]
+    HRESULT ActiveConnection([in] _Connection *connection);
+    [id(2), propget]
+    HRESULT State([out, retval] ObjectStateEnum *state);
+    [id(3), propget]
+    HRESULT Source([out, retval] VARIANT *source);
+    [id(3), propput]
+    HRESULT Source([in] BSTR source);
+    [id(3), propputref]
+    HRESULT Source([in] IDispatch *Source);
+    [id(4), propget]
+    HRESULT Mode([out, retval] ConnectModeEnum *mode);
+    [id(4), propput]
+    HRESULT Mode([in] ConnectModeEnum mode);
+    [id(5), propget]
+    HRESULT ParentURL([out, retval] BSTR *parent_url);
+    [id(6)]
+    HRESULT MoveRecord([in, defaultvalue("")] BSTR source,[in, defaultvalue("")] BSTR destination,
+                    [in, optional] BSTR username, [in, optional] BSTR password,
+                    [in, defaultvalue(adMoveUnspecified)] MoveRecordOptionsEnum options,
+                    [in, optional] VARIANT_BOOL async, [out, retval] BSTR *new_url);
+    [id(7)]
+    HRESULT CopyRecord([in, defaultvalue("")] BSTR source, [in, defaultvalue("")] BSTR destination,
+                    [in, optional] BSTR username, [in, optional] BSTR password,
+                    [in, defaultvalue(adCopyUnspecified)] CopyRecordOptionsEnum options,
+                    [in, optional] VARIANT_BOOL async, [out, retval] BSTR *new_url);
+    [id(8)]
+    HRESULT DeleteRecord([in] BSTR source, [in, optional] VARIANT_BOOL async);
+    [id(9)]
+    HRESULT Open([in, optional] VARIANT source, [in, optional] VARIANT activeconnection,
+                    [in, optional] ConnectModeEnum mode,
+                    [in, defaultvalue(adFailIfNotExists)] RecordCreateOptionsEnum createoptions,
+                    [in, defaultvalue(adOpenRecordUnspecified)] RecordOpenOptionsEnum options,
+                    [in, optional] BSTR username, [in, optional] BSTR password);
+    [id(10)]
+    HRESULT Close();
+    [id(0), propget]
+    HRESULT Fields([out, retval] Fields **fields);
+    [id(11), propget]
+    HRESULT RecordType([out, retval] RecordTypeEnum *type);
+    [id(12)]
+    HRESULT GetChildren([out, retval] _Recordset **recordset);
+    [id(13)]
+    HRESULT Cancel();
+};
+
+[
+    odl,
+    uuid(00000565-0000-0010-8000-00aa006d2ea4),
+    dual,
+    nonextensible,
+    oleautomation
+]
+interface _Stream : IDispatch
+{
+    [id(1), propget]
+    HRESULT Size([out, retval] ADO_LONGPTR *size);
+    [id(2), propget]
+    HRESULT EOS([out, retval] VARIANT_BOOL *eos);
+    [id(3), propget]
+    HRESULT Position([out, retval] ADO_LONGPTR *pos);
+    [id(3), propput]
+    HRESULT Position([in] ADO_LONGPTR position);
+    [id(4), propget]
+    HRESULT Type([out, retval] StreamTypeEnum *type);
+    [id(4), propput]
+    HRESULT Type([in] StreamTypeEnum type);
+    [id(5), propget]
+    HRESULT LineSeparator([out, retval] LineSeparatorEnum *lineseparator);
+    [id(5), propput]
+    HRESULT LineSeparator([in] LineSeparatorEnum lineseparator);
+    [id(6), propget]
+    HRESULT State([out, retval] ObjectStateEnum *state);
+    [id(7), propget]
+    HRESULT Mode([out, retval] ConnectModeEnum *mode);
+    [id(7), propput]
+    HRESULT Mode([in] ConnectModeEnum mode);
+    [id(8), propget]
+    HRESULT Charset([out, retval] BSTR *charset );
+    [id(8), propput]
+    HRESULT Charset([in] BSTR charset );
+    [id(9)]
+    HRESULT Read([in, defaultvalue(adReadAll)] long numbytes, [out, retval] VARIANT *val);
+    [id(10)]
+    HRESULT Open([in, optional] VARIANT source, [in, defaultvalue(adModeUnknown)] ConnectModeEnum mode,
+                    [in, defaultvalue(adOpenStreamUnspecified)] StreamOpenOptionsEnum options,
+                    [in, optional] BSTR username, [in, optional] BSTR password);
+    [id(11)]
+    HRESULT Close(void);
+    [id(12)]
+    HRESULT SkipLine(void);
+    [id(13)]
+    HRESULT Write([in] VARIANT Buffer);
+    [id(14)]
+    HRESULT SetEOS(void);
+    [id(15)]
+    HRESULT CopyTo( [in] _Stream *stream, [in, defaultvalue(-1)] ADO_LONGPTR charnumber);
+    [id(16)]
+    HRESULT Flush(void);
+    [id(17)]
+    HRESULT SaveToFile([in] BSTR filename, [in, defaultvalue(adSaveCreateNotExist)] SaveOptionsEnum options);
+    [id(18)]
+    HRESULT LoadFromFile( [in] BSTR filename);
+    [id(19)]
+    HRESULT ReadText([in, defaultvalue(adReadAll)] long numchars, [out, retval] BSTR *bstr);
+    [id(20)]
+    HRESULT WriteText([in] BSTR data, [in, defaultvalue(adWriteChar)] StreamWriteEnum options);
+    [id(21)]
+    HRESULT Cancel(void);
+};
+
+[
+    odl,
+    uuid(00000538-0000-0010-8000-00aa006d2ea4),
+    hidden
+]
+interface ADODebugging : IUnknown
+{
+    HRESULT IsGlobalDebugMode(VARIANT_BOOL *debugging);
+    HRESULT SetGlobalDebugMode(IUnknown *debugger, VARIANT_BOOL debugging);
+};
+
+[
+    odl,
+    uuid(00000402-0000-0010-8000-00aa006d2ea4),
+    hidden
+]
+interface ConnectionEventsVt : IUnknown
+{
+    HRESULT InfoMessage([in] Error *error, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+    HRESULT BeginTransComplete([in] long TransactionLevel, [in] Error *error,
+                    [in, out] EventStatusEnum *status, [in] _Connection *connection);
+    HRESULT CommitTransComplete([in] Error *error, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+    HRESULT RollbackTransComplete( [in] Error *error, [in, out] EventStatusEnum *status,
+                    [in] _Connection *connection);
+    HRESULT WillExecute( [in, out] BSTR  *source, [in, out] CursorTypeEnum *cursortype,
+                    [in, out] LockTypeEnum *locktype, [in, out] long *options, [in, out] EventStatusEnum *status,
+                    [in] _Command *command, [in] _Recordset *recordset, [in] _Connection *connection);
+    HRESULT ExecuteComplete([in] long recordsaffected, [in] Error *error, [in, out] EventStatusEnum *status,
+                    [in] _Command *command, [in] _Recordset *recordset, [in] _Connection *connection);
+    HRESULT WillConnect([in, out] BSTR *connectionstring, [in, out] BSTR *userid,
+                    [in, out] BSTR *password, [in, out] long *options, [in, out] EventStatusEnum *status,
+                    [in] _Connection *connection);
+    HRESULT ConnectComplete([in] Error *error, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+    HRESULT Disconnect([in, out] EventStatusEnum *status, [in] _Connection *connection);
+};
+
+[
+    odl,
+    uuid(00000403-0000-0010-8000-00aa006d2ea4),
+    hidden
+]
+interface RecordsetEventsVt : IUnknown
+{
+    HRESULT WillChangeField([in] long field_cnt,[in] VARIANT Fields, [in, out] EventStatusEnum *status,
+                    [in] _Recordset *recordset);
+    HRESULT FieldChangeComplete( [in] long field_cnt, [in] VARIANT fields,[in] Error *error,
+                    [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+    HRESULT WillChangeRecord([in] EventReasonEnum reason, [in] long record_cnt,
+                    [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+    HRESULT RecordChangeComplete([in] EventReasonEnum reason, [in] long record_cnt,
+                    [in] Error *error, [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+    HRESULT WillChangeRecordset([in] EventReasonEnum reason, [in, out] EventStatusEnum *status,
+                    [in] _Recordset *recordset);
+    HRESULT RecordsetChangeComplete( [in] EventReasonEnum reason, [in] Error *error,
+                    [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+    HRESULT WillMove([in] EventReasonEnum reason,[in, out] EventStatusEnum *status,
+                    [in] _Recordset *recordset);
+    HRESULT MoveComplete([in] EventReasonEnum reason, [in] Error *error, [in, out] EventStatusEnum *status,
+                    [in] _Recordset *recordset);
+    HRESULT EndOfRecordset([in, out] VARIANT_BOOL *moredata, [in, out] EventStatusEnum *status,
+                    [in] _Recordset *recordset);
+    HRESULT FetchProgress([in] long progress, [in] long maxprogress, [in, out] EventStatusEnum *status,
+                    [in] _Recordset *recordset);
+    HRESULT FetchComplete([in] Error *error, [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+};
+
+[
+  uuid(00000400-0000-0010-8000-00aa006d2ea4)
+]
+dispinterface ConnectionEvents
+{
+    properties:
+    methods:
+        [id(00000000)]
+        HRESULT InfoMessage([in] Error *error, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+        [id(0x00000001)]
+        HRESULT BeginTransComplete([in] long transactionlevel, [in] Error *error, [in, out] EventStatusEnum *status,
+                        [in] _Connection *connection);
+        [id(0x00000003)]
+        HRESULT CommitTransComplete([in] Error *error, [in, out] EventStatusEnum *status,[in] _Connection *connection);
+        [id(0x00000002)]
+        HRESULT RollbackTransComplete([in] Error *error, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+        [id(0x00000004)]
+        HRESULT WillExecute([in, out] BSTR *source, [in, out] CursorTypeEnum *cursortype,
+		                [in, out] LockTypeEnum *locktype, [in, out] long *options, [in, out] EventStatusEnum *status,
+						[in] _Command *command, [in] _Recordset *recordset, [in] _Connection *connection);
+        [id(0x00000005)]
+        HRESULT ExecuteComplete([in] long recordsaffected, [in] Error *error, [in, out] EventStatusEnum *status,
+                        [in] _Command *command, [in] _Recordset *recordset, [in] _Connection *connection);
+        [id(0x00000006)]
+        HRESULT WillConnect([in, out] BSTR *connectionstring, [in, out] BSTR *userid, [in, out] BSTR *password,
+                        [in, out] long *options, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+        [id(0x00000007)]
+        HRESULT ConnectComplete([in] Error *error, [in, out] EventStatusEnum *status, [in] _Connection *connection);
+        [id(0x00000008)]
+        HRESULT Disconnect([in, out] EventStatusEnum *status, [in] _Connection *connection);
+};
+
+[
+    uuid(00000266-0000-0010-8000-00aa006d2ea4)
+]
+dispinterface RecordsetEvents
+{
+    properties:
+    methods:
+        [id(0x00000009)]
+        HRESULT WillChangeField([in] long field_cnt, [in] VARIANT fields, [in, out] EventStatusEnum *status,
+                [in] _Recordset *recordset);
+        [id(0x0000000a)]
+        HRESULT FieldChangeComplete([in] long field_cnt, [in] VARIANT fields, [in] Error *errror,
+                [in, out] EventStatusEnum *status, [in] _Recordset* recordset);
+        [id(0x0000000b)]
+        HRESULT WillChangeRecord([in] EventReasonEnum reason, [in] long records_cnt, [in, out] EventStatusEnum *status,
+                [in] _Recordset *recordset);
+        [id(0x0000000c)]
+        HRESULT RecordChangeComplete([in] EventReasonEnum reason, [in] long records_cnt, [in] Error *error,
+                [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+        [id(0x0000000d)]
+        HRESULT WillChangeRecordset([in] EventReasonEnum reason, [in, out] EventStatusEnum *status,
+                [in] _Recordset *recordset);
+        [id(0x0000000e)]
+        HRESULT RecordsetChangeComplete([in] EventReasonEnum reason, [in] Error *error,
+                [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+        [id(0x0000000f)]
+        HRESULT WillMove([in] EventReasonEnum reason, [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+        [id(0x00000010)]
+        HRESULT MoveComplete([in] EventReasonEnum reason, [in] Error *error, [in, out] EventStatusEnum *status,
+                [in] _Recordset *recordset);
+        [id(0x00000011)]
+        HRESULT EndOfRecordset( [in, out] VARIANT_BOOL *moredata, [in, out] EventStatusEnum *status,
+                [in] _Recordset *recordset);
+        [id(0x00000012)]
+        HRESULT FetchProgress( [in] long progress, [in] long maxprogress, [in, out] EventStatusEnum *status,
+                [in] _Recordset *recordset);
+        [id(0x00000013)]
+        HRESULT FetchComplete([in] Error *error, [in, out] EventStatusEnum *status, [in] _Recordset *recordset);
+};
+
+[
+    odl,
+    uuid(00000516-0000-0010-8000-00aa006d2ea4),
+    restricted
+]
+interface ADOConnectionConstruction15 : IUnknown
+{
+    [propget]
+    HRESULT DSO([out, retval] IUnknown **dso);
+
+    [propget]
+    HRESULT Session([out, retval] IUnknown **session);
+
+    HRESULT WrapDSOandSession([in] IUnknown *dso, [in] IUnknown *session);
+};
+
+[
+    odl,
+    uuid(00000551-0000-0010-8000-00aa006d2ea4),
+    restricted
+]
+interface ADOConnectionConstruction : ADOConnectionConstruction15
+{
+};
+
+[
+  odl,
+  uuid(00000283-0000-0010-8000-00aa006d2ea4),
+  restricted
+]
+interface ADORecordsetConstruction : IDispatch
+{
+    [propget]
+    HRESULT Rowset([out, retval] IUnknown **rowset);
+    [propput]
+    HRESULT Rowset([in] IUnknown *rowset);
+    [propget]
+    HRESULT Chapter([out, retval] ADO_LONGPTR *chapter);
+    [propput]
+    HRESULT Chapter([in] ADO_LONGPTR chapter);
+    [propget]
+    HRESULT RowPosition([out, retval] IUnknown* *rowpos);
+    [propput]
+    HRESULT RowPosition([in] IUnknown *rowpos);
+};
+
+[
+    odl,
+    uuid(00000517-0000-0010-8000-00aa006d2ea4),
+    restricted
+]
+interface ADOCommandConstruction : IUnknown
+{
+    [propget]
+    HRESULT OLEDBCommand([out, retval] IUnknown **command);
+
+    [propput]
+    HRESULT OLEDBCommand([in] IUnknown *command);
+};
+
+[
+    odl,
+    uuid(00000567-0000-0010-8000-00aa006d2ea4),
+    restricted
+]
+interface ADORecordConstruction : IDispatch
+{
+    [propget]
+    HRESULT Row([out, retval] IUnknown **row);
+
+    [propput]
+    HRESULT Row([in] IUnknown *row);
+
+    [propput]
+    HRESULT ParentRow([in] IUnknown *row);
+};
+
+[
+  odl,
+  uuid(00000568-0000-0010-8000-00aa006d2ea4),
+  restricted
+]
+interface ADOStreamConstruction : IDispatch
+{
+    [propget]
+    HRESULT Stream([out, retval] IUnknown **stream);
+
+    [propput]
+    HRESULT Stream([in] IUnknown *stream);
+};
+
+[
+    uuid(2a75196c-d9eb-4129-b803-931327f72d5c),
+    version(2.8)
+]
+library ADODB
+{
+    importlib("stdole2.tlb");
+
+    [
+      uuid(00000514-0000-0010-8000-00aa006d2ea4),
+      licensed
+    ]
+    coclass Connection
+    {
+        [default] interface _Connection;
+        [default, source] dispinterface ConnectionEvents;
+    };
+
+    [
+        uuid(00000507-0000-0010-8000-00aa006d2ea4),
+        licensed
+    ]
+    coclass Command
+    {
+        [default] interface _Command;
+    };
+
+    [
+        uuid(00000535-0000-0010-8000-00aa006d2ea4),
+        licensed
+    ]
+    coclass Recordset
+    {
+        [default] interface _Recordset;
+        [default, source] dispinterface RecordsetEvents;
+    };
+
+    [
+      uuid(0000050b-0000-0010-8000-00aa006d2ea4),
+      licensed
+    ]
+    coclass Parameter
+    {
+        [default] interface _Parameter;
+    };
+
+    [
+        uuid(00000560-0000-0010-8000-00aa006d2ea4),
+        licensed
+    ]
+    coclass Record
+    {
+        [default] interface _Record;
+    };
+
+    [
+        uuid(00000566-0000-0010-8000-00aa006d2ea4),
+        licensed
+    ]
+    coclass Stream
+    {
+        [default] interface _Stream;
+    };
+};
-- 
1.9.1

