From 026459576a25ff7c61686e5939e77757032594c8 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 3 Sep 2018 15:01:46 +1000
Subject: [PATCH] unsecapp: Handle UnsecuredApartment interface

---
 programs/unsecapp/Makefile.in |  2 +-
 programs/unsecapp/main.c      | 95 ++++++++++++++++++++++++++++++++++++++++---
 2 files changed, 91 insertions(+), 6 deletions(-)

diff --git a/programs/unsecapp/Makefile.in b/programs/unsecapp/Makefile.in
index 46cda65..9c97238 100644
--- a/programs/unsecapp/Makefile.in
+++ b/programs/unsecapp/Makefile.in
@@ -1,6 +1,6 @@
 MODULE    = unsecapp.exe
 APPMODE   = -mwindows -municode
-IMPORTS   = ole32
+IMPORTS   = ole32 uuid user32
 
 C_SRCS = \
 	main.c
diff --git a/programs/unsecapp/main.c b/programs/unsecapp/main.c
index a10f685..5bd5d18 100644
--- a/programs/unsecapp/main.c
+++ b/programs/unsecapp/main.c
@@ -15,21 +15,106 @@
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
  */
+#define COBJMACROS
 
 #include <windows.h>
-#include <shellapi.h>
-#include <setupapi.h>
-#include <shlwapi.h>
-#include <shlobj.h>
+#include "ole2.h"
+#include "objbase.h"
+#include <wbemdisp.h>
 
+#include "initguid.h"
+#include <wbemcli.h>
+
+#include "wine/heap.h"
 #include "wine/unicode.h"
 #include "wine/debug.h"
 
 WINE_DEFAULT_DEBUG_CHANNEL(unsecapp);
 
+static HRESULT WINAPI unsecappcf_QueryInterface(IClassFactory *iface, REFIID riid, void **object)
+{
+    if (object == NULL) return E_POINTER;
+
+    if (IsEqualGUID(riid, &IID_IUnknown) ||
+        IsEqualGUID(riid, &IID_IClassFactory))
+    {
+        *object = iface;
+        IClassFactory_AddRef(iface);
+        return S_OK;
+    }
+
+    *object = NULL;
+    return E_NOINTERFACE;
+}
+
+static ULONG WINAPI unsecappcf_AddRef(IClassFactory *iface)
+{
+    return 2;
+}
+
+static ULONG WINAPI unsecappcf_Release(IClassFactory *iface)
+{
+    return 1;
+}
+
+static HRESULT WINAPI unsecappcf_CreateInstance(IClassFactory *iface, IUnknown *outer, REFIID riid, LPVOID *object)
+{
+    *object = NULL;
+    FIXME("%p, %p, %s, %p\n", iface, outer, debugstr_guid(riid), object);
+
+    if (outer) return CLASS_E_NOAGGREGATION;
+    return E_NOINTERFACE;
+}
+
+static HRESULT WINAPI unsecappcf_LockServer(IClassFactory *iface, BOOL fLock)
+{
+    return S_OK;
+}
+
+static const IClassFactoryVtbl unsecappcf_vtbl =
+{
+    unsecappcf_QueryInterface,
+    unsecappcf_AddRef,
+    unsecappcf_Release,
+    unsecappcf_CreateInstance,
+    unsecappcf_LockServer
+};
+
+static IClassFactory UnsecuredApartmentCF = { &unsecappcf_vtbl };
+
 int PASCAL wWinMain(HINSTANCE hInstance, HINSTANCE prev, LPWSTR cmdline, int show)
 {
+    HRESULT hr;
+    DWORD cookie;
+
     FIXME("%p, %p, %s, %d\n", hInstance, prev, debugstr_w(cmdline), show);
-   
+
+    hr = CoInitialize( NULL );
+    if (hr != S_OK)
+    {
+        ExitProcess(1);
+        return 1;
+    }
+
+    hr = CoRegisterClassObject (&CLSID_UnsecuredApartment, (IUnknown*)&UnsecuredApartmentCF, CLSCTX_SERVER, REGCLS_SINGLEUSE, &cookie);
+    if(hr == S_OK)
+    {
+        MSG msg;
+
+        /* run the message loop for this thread */
+        while (GetMessageW(&msg, 0, 0, 0))
+        {
+            TranslateMessage(&msg);
+            DispatchMessageW(&msg);
+        }
+
+        CoRevokeClassObject(cookie);
+    }
+    else
+        ERR("Failed to regsiter CLSID_UnsecuredApartment (0x%08x)\n", hr);
+
+    CoUninitialize();
+
+    ExitProcess(0);
     return 0;
 }
-- 
1.9.1

