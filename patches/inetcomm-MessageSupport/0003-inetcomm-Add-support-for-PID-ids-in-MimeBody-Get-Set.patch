From 86ca0d4359173c82c498462eebdf2e35b2e6d3df Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 27 May 2016 10:47:52 +1000
Subject: [PATCH 3/3] inetcomm: Add support for PID ids in MimeBody Get/SetProp

TODO:
Add FindDefaultProp Function.
Update SetProp using FindDefaultProp
Add Range Check to SetProp.

Another Patch
Update Default Array

---
 dlls/inetcomm/mimeole.c       | 51 ++++++++++++++++++++++++++++++++++++++-----
 dlls/inetcomm/tests/mimeole.c | 41 ++++++++++++++++++++++++++++++++++
 include/mimeole.idl           |  4 ++++
 3 files changed, 91 insertions(+), 5 deletions(-)

diff --git a/dlls/inetcomm/mimeole.c b/dlls/inetcomm/mimeole.c
index 71dc712..54d4d34 100644
--- a/dlls/inetcomm/mimeole.c
+++ b/dlls/inetcomm/mimeole.c
@@ -496,7 +496,15 @@ static HRESULT find_prop(MimeBody *body, const char *name, header_t **prop)
 
     LIST_FOR_EACH_ENTRY(header, &body->headers, header_t, entry)
     {
-        if(!lstrcmpiA(name, header->prop->name))
+        if(ISPIDSTR(name))
+        {
+            if(STRTOPID(name) == header->prop->id)
+            {
+                *prop = header;
+                return S_OK;
+            }
+        }
+        else if(!ISPIDSTR(header->prop->name) && !lstrcmpiA(name, header->prop->name))
         {
             *prop = header;
             return S_OK;
@@ -650,7 +658,7 @@ static HRESULT WINAPI MimeBody_GetProp(
     if(!pszName || !pValue)
         return E_INVALIDARG;
 
-    if(!lstrcmpiA(pszName, "att:pri-content-type"))
+    if(!ISPIDSTR(pszName) && !lstrcmpiA(pszName, "att:pri-content-type"))
     {
         PropVariantClear(pValue);
         pValue->vt = VT_LPSTR;
@@ -690,7 +698,16 @@ static HRESULT WINAPI MimeBody_SetProp(
 
         LIST_FOR_EACH_ENTRY(prop_entry, &This->new_props, property_list_entry_t, entry)
         {
-            if(!lstrcmpiA(pszName, prop_entry->prop.name))
+            if(ISPIDSTR(pszName))
+            {
+                if(STRTOPID(pszName) == prop_entry->prop.id)
+                {
+                    TRACE("Found match with already added new property id %d\n", prop_entry->prop.id);
+                    prop = &prop_entry->prop;
+                    break;
+                }
+            }
+            else if(!lstrcmpiA(pszName, prop_entry->prop.name))
             {
                 TRACE("Found match with already added new property id %d\n", prop_entry->prop.id);
                 prop = &prop_entry->prop;
@@ -710,8 +727,32 @@ static HRESULT WINAPI MimeBody_SetProp(
                 HeapFree(GetProcessHeap(), 0, header);
                 return E_OUTOFMEMORY;
             }
-            prop_entry->prop.name = strdupA(pszName);
-            prop_entry->prop.id = This->next_prop_id++;
+
+            if(ISPIDSTR(pszName))
+            {
+/* Need to Apply this to Name as well. */
+                const property_t *prop_def = NULL;
+                for(prop_def = default_props; prop_def->name; prop_def++)
+                {
+                    if(STRTOPID(pszName) == prop_def->id)
+                    {
+                        TRACE("%s: found match with default property id %d\n", prop_def->name, prop_def->id);
+                        prop_entry->prop.name = strdupA(prop_def->name);
+                        prop_entry->prop.id =  prop_def->id;
+                        break;
+                    }
+                }
+                if(!prop_entry->prop.id)
+                {
+                    prop_entry->prop.name = pszName;
+                    prop_entry->prop.id = This->next_prop_id++;
+                }
+            }
+            else
+            {
+                prop_entry->prop.name = strdupA(pszName);
+                prop_entry->prop.id = This->next_prop_id++;
+            }
             prop_entry->prop.flags = 0;
             prop_entry->prop.default_vt = pValue->vt;
             list_add_tail(&This->new_props, &prop_entry->entry);
diff --git a/dlls/inetcomm/tests/mimeole.c b/dlls/inetcomm/tests/mimeole.c
index f0fac08..d44bb25 100644
--- a/dlls/inetcomm/tests/mimeole.c
+++ b/dlls/inetcomm/tests/mimeole.c
@@ -379,6 +379,47 @@ static void test_MessageSetProp(void)
         PropVariantClear(&prop);
     }
 
+    prop.vt = VT_LPSTR;
+    prop.u.pszVal = CoTaskMemAlloc(strlen(topic)+1);
+    strcpy(prop.u.pszVal, topic);
+    hr = IMimeBody_SetProp(body, PIDTOSTR(PID_HDR_SUBJECT), 0, &prop);
+    ok(hr == S_OK, "ret %08x\n", hr);
+    PropVariantClear(&prop);
+
+    hr = IMimeBody_GetProp(body, PIDTOSTR(PID_HDR_SUBJECT), 0, &prop);
+    ok(hr == S_OK, "ret %08x\n", hr);
+    if(hr == S_OK)
+    {
+        ok(prop.vt == VT_LPSTR, "type %d\n", prop.vt);
+        ok(!strcmp(prop.u.pszVal, topic), "got  %s\n", prop.u.pszVal);
+        PropVariantClear(&prop);
+    }
+
+    /* Using the name or PID return the same result. */
+    hr = IMimeBody_GetProp(body, "Subject", 0, &prop);
+    ok(hr == S_OK, "ret %08x\n", hr);
+    if(hr == S_OK)
+    {
+        ok(prop.vt == VT_LPSTR, "type %d\n", prop.vt);
+        ok(!strcmp(prop.u.pszVal, topic), "got  %s\n", prop.u.pszVal);
+        PropVariantClear(&prop);
+    }
+
+    prop.vt = VT_LPSTR;
+    prop.u.pszVal = CoTaskMemAlloc(strlen(topic)+1);
+    strcpy(prop.u.pszVal, topic);
+    hr = IMimeBody_SetProp(body, PIDTOSTR(PID_HDR_TO), 0, &prop);
+    ok(hr == S_OK, "ret %08x\n", hr);
+    PropVariantClear(&prop);
+
+    /* Out of Range PID */
+    prop.vt = VT_LPSTR;
+    prop.u.pszVal = CoTaskMemAlloc(strlen(topic)+1);
+    strcpy(prop.u.pszVal, topic);
+    hr = IMimeBody_SetProp(body, PIDTOSTR(124), 0, &prop);
+    todo_wine ok(hr == MIME_E_NOT_FOUND, "ret %08x\n", hr);
+    PropVariantClear(&prop);
+
     IMimeBody_Release(body);
     IMimeMessage_Release(msg);
 }
diff --git a/include/mimeole.idl b/include/mimeole.idl
index 4a0d86c..aa43d21 100644
--- a/include/mimeole.idl
+++ b/include/mimeole.idl
@@ -157,6 +157,10 @@ cpp_quote("#define TYPEDID_ID(_typedid)          (((ULONG)(_typedid))>>16)")
 cpp_quote("#define TYPEDID_MASK                  ((ULONG)0xffff)")
 cpp_quote("#define TYPEDID_TYPE(t)               ((VARTYPE)((t) & TYPEDID_MASK))")
 
+cpp_quote("#define ISPIDSTR(_name)               ((HIWORD((DWORD_PTR)(_name)) == 0))")
+cpp_quote("#define STRTOPID(_name)               ((DWORD)((DWORD_PTR)((LPCSTR)(_name))))")
+cpp_quote("#define PIDTOSTR(_id)                 ((LPCSTR)((DWORD_PTR)(_id)))")
+
 cpp_quote("#define OID_ALLOW_8BIT_HEADER         (0x00010000 | VT_BOOL)")
 cpp_quote("#define OID_CBMAX_HEADER_LINE         (0x00020000 | VT_UI4)")
 cpp_quote("#define OID_SAVE_FORMAT               (0x00030000 | VT_UI4)")
-- 
1.9.1

