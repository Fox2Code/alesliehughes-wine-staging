From 8f42b089031447e820a52b707b1fbee12381b778 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 27 Apr 2016 12:17:37 +1000
Subject: [PATCH 7/7] inetcomm: temp code and other

---
 dlls/inetcomm/mimeole.c | 79 ++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 72 insertions(+), 7 deletions(-)

diff --git a/dlls/inetcomm/mimeole.c b/dlls/inetcomm/mimeole.c
index 448da5c..f622d04 100644
--- a/dlls/inetcomm/mimeole.c
+++ b/dlls/inetcomm/mimeole.c
@@ -506,6 +506,24 @@ static HRESULT find_prop(MimeBody *body, const char *name, header_t **prop)
     return MIME_E_NOT_FOUND;
 }
 
+static HRESULT find_prop_by_id(MimeBody *body, DWORD id, header_t **prop)
+{
+    header_t *header;
+
+    *prop = NULL;
+
+    LIST_FOR_EACH_ENTRY(header, &body->headers, header_t, entry)
+    {
+        if(id == header->prop->id)
+        {
+            *prop = header;
+            return S_OK;
+        }
+    }
+
+    return MIME_E_NOT_FOUND;
+}
+
 static HRESULT WINAPI MimeBody_QueryInterface(IMimeBody* iface,
                                      REFIID riid,
                                      void** ppvObject)
@@ -615,14 +633,50 @@ static HRESULT WINAPI MimeBody_InitNew(
     return S_OK;
 }
 
+/* Move these to mimeole.idl */
+#define ISPIDSTR(_name)   ((HIWORD((DWORD_PTR)(_name)) == 0))
+#define STRTOPID(_name)   ((DWORD)((DWORD_PTR)((LPCSTR)(_name))))
+
 static HRESULT WINAPI MimeBody_GetPropInfo(
                                   IMimeBody* iface,
                                   LPCSTR pszName,
                                   LPMIMEPROPINFO pInfo)
 {
     MimeBody *This = impl_from_IMimeBody(iface);
+    header_t *header;
+    HRESULT hr;
+
     FIXME("(%p)->(%s, %p) stub\n", This, debugstr_a(pszName), pInfo);
-    return E_NOTIMPL;
+
+    if(!pszName || !pInfo)
+        return E_INVALIDARG;
+
+    if(ISPIDSTR(pszName))
+        hr = find_prop_by_id(This, STRTOPID(pszName), &header);
+    else
+        hr = find_prop(This, pszName, &header);
+
+    if(hr == S_OK)
+    {
+        TRACE("mask 0x%04x\n", pInfo->dwMask);
+        if(pInfo->dwMask | PIM_CHARSET)
+            pInfo->hCharset = 0;
+        if(pInfo->dwMask | PIM_FLAGS)
+            pInfo->dwFlags = 0x00000000;
+        if(pInfo->dwMask | PIM_ROWNUMBER)
+            pInfo->dwRowNumber = 0;
+        if(pInfo->dwMask | PIM_ENCODINGTYPE)
+            pInfo->ietEncoding = This->encoding;
+        if(pInfo->dwMask | PIM_VALUES)
+            pInfo->cValues = 0;
+        if(pInfo->dwMask | PIM_VTDEFAULT)
+            pInfo->vtDefault = 0;
+        if(pInfo->dwMask | PIM_VTCURRENT)
+            pInfo->vtCurrent = 0;
+
+    }
+
+    return hr;
 }
 
 static HRESULT WINAPI MimeBody_SetPropInfo(
@@ -677,12 +731,16 @@ static HRESULT WINAPI MimeBody_SetProp(
     header_t *header;
     HRESULT hr;
 
-    TRACE("(%p)->(%s, 0x%x, %p)\n", This, debugstr_a(pszName), dwFlags, pValue);
+    TRACE("(%p)->(%s, 0x%04x, %p)\n", This, debugstr_a(pszName), dwFlags, pValue);
 
     if(!pszName || !pValue)
         return E_INVALIDARG;
 
-    hr = find_prop(This, pszName, &header);
+    if(ISPIDSTR(pszName))
+        hr = find_prop_by_id(This, STRTOPID(pszName), &header);
+    else
+        hr = find_prop(This, pszName, &header);
+
     if(hr != S_OK)
     {
         property_list_entry_t *prop_entry;
@@ -710,9 +768,10 @@ static HRESULT WINAPI MimeBody_SetProp(
                 HeapFree(GetProcessHeap(), 0, header);
                 return E_OUTOFMEMORY;
             }
+
             prop_entry->prop.name = strdupA(pszName);
             prop_entry->prop.id = This->next_prop_id++;
-            prop_entry->prop.flags = 0;
+            prop_entry->prop.flags = dwFlags;
             prop_entry->prop.default_vt = pValue->vt;
             list_add_tail(&This->new_props, &prop_entry->entry);
             prop = &prop_entry->prop;
@@ -723,8 +782,10 @@ static HRESULT WINAPI MimeBody_SetProp(
         PropVariantInit(&header->value);
         list_init(&header->params);
         list_add_tail(&This->headers, &header->entry);
-    }
 
+    }
+    else
+        TRACE("Found prop\n");
     PropVariantCopy(&header->value, pValue);
 
     return S_OK;
@@ -811,7 +872,7 @@ static HRESULT WINAPI MimeBody_SetCharset(
 {
     MimeBody *This = impl_from_IMimeBody(iface);
     FIXME("(%p)->(%p, %d) stub\n", This, hCharset, applytype);
-    return E_NOTIMPL;
+    return S_OK;
 }
 
 static HRESULT WINAPI MimeBody_GetParameters(
@@ -871,7 +932,11 @@ static HRESULT WINAPI MimeBody_IsContentType(
     {
         const char *pri = This->content_pri_type;
         if(!pri) pri = "text";
-        if(strcasecmp(pri, pszPriType)) return S_FALSE;
+        if(strcasecmp(pri, pszPriType))
+            {
+                TRACE("pri %s\n", pri);
+                return S_FALSE;
+            }
     }
 
     if(pszSubType)
-- 
2.8.0.rc3

