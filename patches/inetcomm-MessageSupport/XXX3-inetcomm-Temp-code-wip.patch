From 1e13a3dabae992403ca500c912685de15ac95b9f Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 3 May 2016 08:59:08 +1000
Subject: [PATCH 3/3] inetcomm: Temp code wip

---
 dlls/inetcomm/mimeole.c | 61 ++++++++++++++++++++++++++++++++++++++++++-------
 include/mimeole.idl     |  4 ++++
 2 files changed, 57 insertions(+), 8 deletions(-)

diff --git a/dlls/inetcomm/mimeole.c b/dlls/inetcomm/mimeole.c
index 71dc712..ee8328e 100644
--- a/dlls/inetcomm/mimeole.c
+++ b/dlls/inetcomm/mimeole.c
@@ -473,7 +473,8 @@ static void empty_new_prop_list(struct list *list)
     LIST_FOR_EACH_ENTRY_SAFE(prop, cursor2, list, property_list_entry_t, entry)
     {
         list_remove(&prop->entry);
-        HeapFree(GetProcessHeap(), 0, (char *)prop->prop.name);
+        if(!ISPIDSTR(prop->prop.name))
+            HeapFree(GetProcessHeap(), 0, (char *)prop->prop.name);
         HeapFree(GetProcessHeap(), 0, prop);
     }
 }
@@ -621,8 +622,38 @@ static HRESULT WINAPI MimeBody_GetPropInfo(
                                   LPMIMEPROPINFO pInfo)
 {
     MimeBody *This = impl_from_IMimeBody(iface);
+    header_t *header;
+    HRESULT hr;
+
     FIXME("(%p)->(%s, %p) stub\n", This, debugstr_a(pszName), pInfo);
-    return E_NOTIMPL;
+
+    if(!pszName || !pInfo)
+        return E_INVALIDARG;
+
+    hr = find_prop(This, pszName, &header);
+    if(hr == S_OK)
+    {
+        TRACE("mask 0x%04x\n", pInfo->dwMask);
+        if(pInfo->dwMask | PIM_CHARSET)
+            pInfo->hCharset = 0;
+        if(pInfo->dwMask | PIM_FLAGS)
+            pInfo->dwFlags = 0x00000000;
+        if(pInfo->dwMask | PIM_ROWNUMBER)
+            pInfo->dwRowNumber = 0;
+        if(pInfo->dwMask | PIM_ENCODINGTYPE)
+            pInfo->ietEncoding = 0;
+        if(pInfo->dwMask | PIM_VALUES)
+            pInfo->cValues = 0;
+        if(pInfo->dwMask | PIM_VTDEFAULT)
+            pInfo->vtDefault = 0;
+        if(pInfo->dwMask | PIM_VTCURRENT)
+            pInfo->vtCurrent = 0;
+
+    }
+
+FIXME("5: %08x\n", hr);
+
+    return hr;
 }
 
 static HRESULT WINAPI MimeBody_SetPropInfo(
@@ -659,6 +690,7 @@ static HRESULT WINAPI MimeBody_GetProp(
     }
 
     hr = find_prop(This, pszName, &header);
+FIXME("3: 0x%08x\n", hr);
     if(hr == S_OK)
     {
         PropVariantCopy(pValue, &header->value);
@@ -677,12 +709,14 @@ static HRESULT WINAPI MimeBody_SetProp(
     header_t *header;
     HRESULT hr;
 
-    TRACE("(%p)->(%s, 0x%x, %p)\n", This, debugstr_a(pszName), dwFlags, pValue);
+    TRACE("(%p)->(%s, 0x%04x, %p)\n", This, debugstr_a(pszName), dwFlags, pValue);
 
     if(!pszName || !pValue)
         return E_INVALIDARG;
 
     hr = find_prop(This, pszName, &header);
+
+FIXME("3: hr %08x\n", hr);
     if(hr != S_OK)
     {
         property_list_entry_t *prop_entry;
@@ -710,9 +744,17 @@ static HRESULT WINAPI MimeBody_SetProp(
                 HeapFree(GetProcessHeap(), 0, header);
                 return E_OUTOFMEMORY;
             }
-            prop_entry->prop.name = strdupA(pszName);
+
+FIXME("ID crash?\n");
+
+            if(ISPIDSTR(pszName))
+            {
+                prop_entry->prop.name = PIDTOSTR(STRTOPID(pszName));
+            }
+            else
+                prop_entry->prop.name = strdupA(pszName);
             prop_entry->prop.id = This->next_prop_id++;
-            prop_entry->prop.flags = 0;
+            prop_entry->prop.flags = dwFlags;
             prop_entry->prop.default_vt = pValue->vt;
             list_add_tail(&This->new_props, &prop_entry->entry);
             prop = &prop_entry->prop;
@@ -723,8 +765,11 @@ static HRESULT WINAPI MimeBody_SetProp(
         PropVariantInit(&header->value);
         list_init(&header->params);
         list_add_tail(&This->headers, &header->entry);
-    }
 
+        TRACE("count %d\n", list_count(&This->headers) );
+    }
+    else
+        TRACE("Found prop\n");
     PropVariantCopy(&header->value, pValue);
 
     return S_OK;
@@ -747,7 +792,7 @@ static HRESULT WINAPI MimeBody_DeleteProp(
 {
     MimeBody *This = impl_from_IMimeBody(iface);
     FIXME("(%p)->(%s) stub\n", This, debugstr_a(pszName));
-    return E_NOTIMPL;
+    return S_OK;
 }
 
 static HRESULT WINAPI MimeBody_CopyProps(
@@ -811,7 +856,7 @@ static HRESULT WINAPI MimeBody_SetCharset(
 {
     MimeBody *This = impl_from_IMimeBody(iface);
     FIXME("(%p)->(%p, %d) stub\n", This, hCharset, applytype);
-    return E_NOTIMPL;
+    return S_OK;
 }
 
 static HRESULT WINAPI MimeBody_GetParameters(
diff --git a/include/mimeole.idl b/include/mimeole.idl
index 4a0d86c..30d05a1 100644
--- a/include/mimeole.idl
+++ b/include/mimeole.idl
@@ -153,6 +153,10 @@ cpp_quote("    PID_ATT_ACCOUNTNAME   = 78,")
 cpp_quote("    PID_LAST              = 79,")
 cpp_quote("} MIMEPROPID;")
 
+cpp_quote("#define ISPIDSTR(_name)   ((HIWORD((DWORD_PTR)(_name)) == 0))")
+cpp_quote("#define STRTOPID(_name)   ((DWORD)((DWORD_PTR)((LPCSTR)(_name))))")
+cpp_quote("#define PIDTOSTR(_id)     ((LPCSTR)((DWORD_PTR)(_id)))")
+
 cpp_quote("#define TYPEDID_ID(_typedid)          (((ULONG)(_typedid))>>16)")
 cpp_quote("#define TYPEDID_MASK                  ((ULONG)0xffff)")
 cpp_quote("#define TYPEDID_TYPE(t)               ((VARTYPE)((t) & TYPEDID_MASK))")
-- 
1.9.1

