From e574457872ffa66af1c4bc75db043b32bed98fcb Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 20 Nov 2015 09:58:08 +1100
Subject: [PATCH 06/10] include: Add d3dx10tex.h

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 include/Makefile.in |  1 +
 include/d3dx10.h    |  1 +
 include/d3dx10tex.h | 95 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 97 insertions(+)
 create mode 100644 include/d3dx10tex.h

diff --git a/include/Makefile.in b/include/Makefile.in
index ac5e9ea..442e5e7 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -249,6 +249,7 @@ HEADER_SRCS = \
 	d3dx10async.h \
 	d3dx10math.h \
 	d3dx10math.inl \
+	d3dx10tex.h \
 	d3dx9.h \
 	d3dx9anim.h \
 	d3dx9core.h \
diff --git a/include/d3dx10.h b/include/d3dx10.h
index b3825b3..fb48723 100644
--- a/include/d3dx10.h
+++ b/include/d3dx10.h
@@ -30,5 +30,6 @@
 #include "d3dx10math.h"
 #include "d3dx10core.h"
 #include "d3dx10async.h"
+#include "d3dx10tex.h"
 
 #endif
diff --git a/include/d3dx10tex.h b/include/d3dx10tex.h
new file mode 100644
index 0000000..e61288c3
--- /dev/null
+++ b/include/d3dx10tex.h
@@ -0,0 +1,95 @@
+/*
+ * Copyright 2015 Alistair Leslie-Hughes
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#ifndef __D3DX10TEX_H__
+#define __D3DX10TEX_H__
+
+typedef enum D3DX10_IMAGE_FILE_FORMAT
+{
+    D3DX10_IFF_BMP         = 0,
+    D3DX10_IFF_JPG         = 1,
+    D3DX10_IFF_PNG         = 3,
+    D3DX10_IFF_DDS         = 4,
+    D3DX10_IFF_TIFF        = 10,
+    D3DX10_IFF_GIF         = 11,
+    D3DX10_IFF_WMP         = 12,
+    D3DX10_IFF_FORCE_DWORD = 0x7fffffff
+} D3DX10_IMAGE_FILE_FORMAT;
+
+typedef struct D3DX10_IMAGE_INFO
+{
+    UINT                     Width;
+    UINT                     Height;
+    UINT                     Depth;
+    UINT                     ArraySize;
+    UINT                     MipLevels;
+    UINT                     MiscFlags;
+    DXGI_FORMAT              Format;
+    D3D10_RESOURCE_DIMENSION ResourceDimension;
+    D3DX10_IMAGE_FILE_FORMAT ImageFileFormat;
+} D3DX10_IMAGE_INFO;
+
+typedef struct D3DX10_IMAGE_LOAD_INFO
+{
+    UINT              Width;
+    UINT              Height;
+    UINT              Depth;
+    UINT              FirstMipLevel;
+    UINT              MipLevels;
+    D3D10_USAGE       Usage;
+    UINT              BindFlags;
+    UINT              CpuAccessFlags;
+    UINT              MiscFlags;
+    DXGI_FORMAT       Format;
+    UINT              Filter;
+    UINT              MipFilter;
+    D3DX10_IMAGE_INFO *pSrcInfo;
+
+#ifdef __cplusplus
+    D3DX10_IMAGE_LOAD_INFO()
+    {
+        Width          = D3DX10_DEFAULT;
+        Height         = D3DX10_DEFAULT;
+        Depth          = D3DX10_DEFAULT;
+        FirstMipLevel  = D3DX10_DEFAULT;
+        MipLevels      = D3DX10_DEFAULT;
+        Usage          = (D3D10_USAGE)D3DX10_DEFAULT;
+        BindFlags      = D3DX10_DEFAULT;
+        CpuAccessFlags = D3DX10_DEFAULT;
+        MiscFlags      = D3DX10_DEFAULT;
+        Format         = DXGI_FORMAT_FROM_FILE;
+        Filter         = D3DX10_DEFAULT;
+        MipFilter      = D3DX10_DEFAULT;
+        pSrcInfo       = NULL;
+    }
+#endif
+} D3DX10_IMAGE_LOAD_INFO;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+HRESULT WINAPI D3DX10CreateTextureFromMemory(ID3D10Device *device, const void *src_data, SIZE_T src_data_size,
+        D3DX10_IMAGE_LOAD_INFO *loadinfo, ID3DX10ThreadPump *pump, ID3D10Resource **texture, HRESULT *hresult);
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
-- 
2.6.2

