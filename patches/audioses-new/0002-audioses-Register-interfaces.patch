From f1eaecf91a1f878b526dc054a26d433ef89d1509 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 7 Dec 2017 12:12:56 +1100
Subject: [PATCH 2/3] audioses: Register interfaces

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/audioses/Makefile.in          |   3 +
 dlls/audioses/audioses_classes.idl | 110 +++++++++++++++++++++++++++++++++++++
 dlls/audioses/audioses_main.c      |   1 +
 3 files changed, 114 insertions(+)
 create mode 100644 dlls/audioses/audioses_classes.idl

diff --git a/dlls/audioses/Makefile.in b/dlls/audioses/Makefile.in
index 024ebb483c..9cf0f6ab06 100644
--- a/dlls/audioses/Makefile.in
+++ b/dlls/audioses/Makefile.in
@@ -3,3 +3,6 @@ MODULE    = audioses.dll
 
 C_SRCS = \
 	audioses_main.c
+
+IDL_SRCS = \
+	audioses_classes.idl
diff --git a/dlls/audioses/audioses_classes.idl b/dlls/audioses/audioses_classes.idl
new file mode 100644
index 0000000000..737b5be191
--- /dev/null
+++ b/dlls/audioses/audioses_classes.idl
@@ -0,0 +1,110 @@
+/*
+ *
+ * Copyright 2017 Alistair Leslie-Hughes
+ *
+ * The algorithm for conversion from Julian days to day/month/year is based on
+ * that devised by Henry Fliegel, as implemented in PostgreSQL, which is
+ * Copyright 1994-7 Regents of the University of California
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+#pragma makedep register
+
+import "audioclient.idl";
+import "mmdeviceapi.idl";
+
+typedef [hidden, restricted] struct dummyDeviceShareMode
+{
+    int dummy_;
+} DeviceShareMode;
+
+[
+    uuid(f8679f50-850a-41cf-9c72-430f290290c8)
+]
+interface IPolicyConfig : IUnknown {
+
+    HRESULT GetMixFormat([in] LPCWSTR deviceid, [out] WAVEFORMATEX** format);
+
+    HRESULT GetDeviceFormat([in] LPCWSTR deviceid, [in] BOOL bDefault, [out] WAVEFORMATEX** format);
+
+    HRESULT ResetDeviceFormat([in] LPCWSTR deviceid);
+
+    HRESULT SetDeviceFormat([in] LPCWSTR deviceid, [in] WAVEFORMATEX* end_format, [in] WAVEFORMATEX* mix_format);
+
+    HRESULT GetProcessingPeriod([in] LPCWSTR deviceid, [in] BOOL isdefault, [out] REFERENCE_TIME* period,
+        [out] REFERENCE_TIME* min_period);
+
+    HRESULT SetProcessingPeriod([in] LPCWSTR deviceid, [in] REFERENCE_TIME* period);
+
+    HRESULT GetShareMode([in] LPCWSTR deviceid, [out] DeviceShareMode* mode);
+
+    HRESULT SetShareMode([in] LPCWSTR deviceid, [in] DeviceShareMode* mode);
+
+    HRESULT GetPropertyValue([in] LPCWSTR deviceid, [in] PROPERTYKEY* key, [out] PROPVARIANT* value);
+
+    HRESULT SetPropertyValue([in] LPCWSTR deviceid, [in] PROPERTYKEY* key, [in] PROPVARIANT* value);
+
+    HRESULT SetDefaultEndpoint([in] LPCWSTR deviceid, [in] ERole role);
+
+    HRESULT SetEndpointVisibility([in] LPCWSTR deviceid, [in] BOOL visible);
+};
+
+[
+    uuid(568b9108-44bf-40b4-9006-86afe5b5a620)
+]
+interface IPolicyConfigVista : IUnknown {
+
+    HRESULT GetMixFormat([in] LPCWSTR deviceid, [out] WAVEFORMATEX** format);
+
+    HRESULT GetDeviceFormat([in] LPCWSTR deviceid, [in] BOOL isdefault, [out] WAVEFORMATEX** format);
+
+    HRESULT SetDeviceFormat([in] LPCWSTR deviceid, [in] WAVEFORMATEX* end_format, [in] WAVEFORMATEX* mix_format);
+
+    HRESULT GetProcessingPeriod([in] LPCWSTR deviceid, [in] BOOL isdefault, [out] REFERENCE_TIME* default_period,
+      [out] REFERENCE_TIME* min_period);
+
+    HRESULT SetProcessingPeriod([in] LPCWSTR deviceid, [in] REFERENCE_TIME* period);
+
+    HRESULT GetShareMode([in] LPCWSTR deviceid, [out] DeviceShareMode* mode);
+
+    HRESULT SetShareMode([in] LPCWSTR deviceid, [in] DeviceShareMode* mode);
+
+    HRESULT GetPropertyValue([in] LPCWSTR deviceid, [in] PROPERTYKEY* key, [out] PROPVARIANT* value);
+
+    HRESULT SetPropertyValue([in] LPCWSTR deviceid, [in] PROPERTYKEY* key, [in] PROPVARIANT* value);
+
+    HRESULT SetDefaultEndpoint([in] LPCWSTR deviceid, [in] ERole role);
+
+    HRESULT SetEndpointVisibility([in] LPCWSTR deviceid, [in] BOOL visible);
+};
+
+
+[
+    uuid(870af99c-171d-4f9e-af0d-e63df40c2bc9)
+]
+coclass CPolicyConfigClient
+{
+    [default] interface IPolicyConfig;
+}
+
+[
+    uuid(294935ce-f637-4e7c-a41b-ab255460b862)
+]
+coclass CPolicyConfigVistaClient
+{
+    [default] interface IPolicyConfigVista;
+}
+
+
diff --git a/dlls/audioses/audioses_main.c b/dlls/audioses/audioses_main.c
index 809ad108ca..dba6767606 100644
--- a/dlls/audioses/audioses_main.c
+++ b/dlls/audioses/audioses_main.c
@@ -29,6 +29,7 @@
 #include "winbase.h"
 #include "objsafe.h"
 #include "rpcproxy.h"
+#include "audioses_classes.h"
 #include "wine/debug.h"
 
 WINE_DEFAULT_DEBUG_CHANNEL(audioses);
-- 
2.15.0

