From a158804ed24c4897694449bbbd38e08744add177 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Mon, 26 Oct 2020 15:39:26 +1100
Subject: [PATCH 4/4] include: Add ICommandWithParameters interface

---
 dlls/msdaps/usrmarshal.c | 42 ++++++++++++++++++++
 include/cmdwpr.idl       | 84 ++++++++++++++++++++++++++++++++++++++++
 include/oledb.idl        |  1 +
 3 files changed, 127 insertions(+)
 create mode 100644 include/cmdwpr.idl

diff --git a/dlls/msdaps/usrmarshal.c b/dlls/msdaps/usrmarshal.c
index 917395b37bd..090b1edcc94 100644
--- a/dlls/msdaps/usrmarshal.c
+++ b/dlls/msdaps/usrmarshal.c
@@ -1653,3 +1653,45 @@ HRESULT __RPC_STUB ICommandPrepare_Unprepare_Stub(ICommandPrepare* This, IErrorI
     FIXME("(%p)->(%p): stub\n", This, error);
     return E_NOTIMPL;
 }
+
+HRESULT CALLBACK ICommandWithParameters_MapParameterNames_Proxy(
+    ICommandWithParameters* This,
+    DB_UPARAMS cParamNames,
+    LPCWSTR rgParamNames[],
+    DB_LPARAMS rgParamOrdinals[])
+{
+    FIXME("(%p)->(%d %p %p): stub\n", This, cParamNames, rgParamNames, rgParamOrdinals);
+    return E_NOTIMPL;
+}
+
+HRESULT __RPC_STUB ICommandWithParameters_MapParameterNames_Stub(
+    ICommandWithParameters* This,
+    DB_UPARAMS cParamNames,
+    LPCOLESTR *rgParamNames,
+    DB_LPARAMS *rgParamOrdinals,
+    IErrorInfo **ppErrorInfoRem)
+{
+    FIXME("(%p)->(%d %p %p %p): stub\n", This, cParamNames, rgParamNames, rgParamOrdinals, ppErrorInfoRem);
+    return E_NOTIMPL;
+}
+
+HRESULT CALLBACK ICommandWithParameters_SetParameterInfo_Proxy(
+    ICommandWithParameters* This,
+    DB_UPARAMS cParams,
+    const DB_UPARAMS rgParamOrdinals[],
+    const DBPARAMBINDINFO rgParamBindInfo[])
+{
+    FIXME("(%p)->(%d %p %p): stub\n", This, cParams, rgParamOrdinals, rgParamBindInfo);
+    return E_NOTIMPL;
+}
+
+HRESULT __RPC_STUB ICommandWithParameters_SetParameterInfo_Stub(
+    ICommandWithParameters* This,
+    DB_UPARAMS cParams,
+    const DB_UPARAMS *rgParamOrdinals,
+    const DBPARAMBINDINFO *rgParamBindInfo,
+    IErrorInfo **ppErrorInfoRem)
+{
+    FIXME("(%p)->(%d %p %p %p): stub\n", This, cParams, rgParamOrdinals, rgParamBindInfo, ppErrorInfoRem);
+    return E_NOTIMPL;
+}
diff --git a/include/cmdwpr.idl b/include/cmdwpr.idl
new file mode 100644
index 00000000000..5227efb8709
--- /dev/null
+++ b/include/cmdwpr.idl
@@ -0,0 +1,84 @@
+/*
+ * Copyright (C) 2020 Alistair Leslie-Hughes
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#if 0
+#pragma makedep install
+#endif
+
+[
+    object,
+    uuid(0c733a64-2a1c-11ce-ade5-00aa0044773d),
+    pointer_default(unique)
+]
+interface ICommandWithParameters : IUnknown
+{
+
+    typedef struct tagDBPARAMBINDINFO
+    {
+        LPOLESTR pwszDataSourceType;
+        LPOLESTR pwszName;
+        DBLENGTH ulParamSize;
+        DBPARAMFLAGS dwFlags;
+        BYTE bPrecision;
+        BYTE bScale;
+    } DBPARAMBINDINFO;
+
+    [local]
+    HRESULT GetParameterInfo([in, out] DB_UPARAMS *uparams, [out, size_is(,*uparams)] DBPARAMINFO **info, [out] OLECHAR **buffer);
+
+#ifdef _WIN64
+    [call_as(GetParameterInfo)]
+    HRESULT RemoteGetParameterInfo([in, out] DB_UPARAMS *uparams, [out, size_is(,(ULONG)*uparams)] DBPARAMINFO **param_info,
+            [out, size_is(,(ULONG)*uparams)] DBBYTEOFFSET **offsets, [in, out] DBLENGTH *buff_len,
+            [in, out, unique, size_is(,(ULONG)*buff_len)] OLECHAR **buffer, [out] IErrorInfo **error);
+
+    [local]
+    HRESULT MapParameterNames([in] DB_UPARAMS uparams, [in, size_is((ULONG)uparams)] LPCWSTR names[],
+            [out, size_is((ULONG)uparams)] DB_LPARAMS ordinals[]);
+
+    [call_as(MapParameterNames)]
+        HRESULT RemoteMapParameterNames([in] DB_UPARAMS uparams, [in, size_is((ULONG)uparams)] LPCOLESTR *names,
+                [out, size_is((ULONG)uparams)] DB_LPARAMS *ordinals, [out] IErrorInfo **error);
+
+    [local]
+    HRESULT SetParameterInfo([in] DB_UPARAMS uparams, [in, unique, size_is((ULONG)uparams)] const DB_UPARAMS ordinals[],
+            [in, unique, size_is((ULONG)uparams)] const DBPARAMBINDINFO bindinfo[]);
+
+    [call_as(SetParameterInfo)]
+    HRESULT RemoteSetParameterInfo([in] DB_UPARAMS uparams, [in, unique, size_is((ULONG)uparams)] const DB_UPARAMS *ordinals,
+            [in, unique, size_is((ULONG)uparams)] const DBPARAMBINDINFO *bindinfo, [out] IErrorInfo **error);
+
+#else
+    [local]
+    HRESULT MapParameterNames([in] DB_UPARAMS uparams, [in, size_is(uparams)] LPCWSTR names[],
+            [out, size_is(uparams)] DB_LPARAMS ordinals[]);
+
+    [call_as(MapParameterNames)]
+    HRESULT RemoteMapParameterNames([in] DB_UPARAMS uparams, [in, size_is(uparams)] LPCOLESTR *names,
+            [out, size_is(uparams)] DB_LPARAMS *ordinals, [out] IErrorInfo **error);
+
+    [local]
+    HRESULT SetParameterInfo([in] DB_UPARAMS uparams, [in, unique, size_is(uparams)] const DB_UPARAMS ordinals[],
+            [in, unique, size_is(uparams)] const DBPARAMBINDINFO bindinfo[]);
+
+    [call_as(SetParameterInfo)]
+    HRESULT RemoteSetParameterInfo([in] DB_UPARAMS uparams, [in, unique, size_is(uparams)] const DB_UPARAMS *ordinals,
+            [in, unique, size_is(uparams)] const DBPARAMBINDINFO *bindinfo, [out] IErrorInfo **error);
+
+#endif
+}
diff --git a/include/oledb.idl b/include/oledb.idl
index 475eb85642e..080b338412b 100644
--- a/include/oledb.idl
+++ b/include/oledb.idl
@@ -78,6 +78,7 @@ typedef LONG_PTR DB_LRESERVE;
 #include "rstchg.idl"
 #include "rstupd.idl"
 #include "mulres.idl"
+#include "cmdwpr.idl"
 
 cpp_quote("#include <accctrl.h>")
 
-- 
2.29.2

