From 11c64fbc2c92262e1672fd369a135a0757ee44c5 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 23 Feb 2017 09:42:30 +1100
Subject: [PATCH v3] oledb32: Correct length calculation in DataConvert for
 DBTYPE_STR

v2 - Correct failing test under wine
v3 - Removed sizeof(char) references
   - Add tests
   - Pass SysStringLen(b) into WideCharToMultiByte

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/oledb32/convert.c       | 16 ++++++++--------
 dlls/oledb32/tests/convert.c | 41 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+), 8 deletions(-)

diff --git a/dlls/oledb32/convert.c b/dlls/oledb32/convert.c
index ac462f2..402311d 100644
--- a/dlls/oledb32/convert.c
+++ b/dlls/oledb32/convert.c
@@ -816,23 +816,23 @@ static HRESULT WINAPI convert_DataConvert(IDataConvert* iface,
     case DBTYPE_STR:
     {
         BSTR b;
-        DBLENGTH bstr_len;
+        DBLENGTH length;
         INT bytes_to_copy;
-        hr = IDataConvert_DataConvert(iface, src_type, DBTYPE_BSTR, src_len, &bstr_len,
+        hr = IDataConvert_DataConvert(iface, src_type, DBTYPE_BSTR, src_len, &length,
                                       src, &b, sizeof(BSTR), src_status, dst_status,
                                       precision, scale, flags);
         if(hr != S_OK) return hr;
-        bstr_len = SysStringLen(b);
-        *dst_len = bstr_len * sizeof(char); /* Doesn't include size for '\0' */
+        *dst_len =  SysStringLen(b); /* Doesn't include size for '\0' */
+        length = WideCharToMultiByte(CP_ACP, 0, b, *dst_len + 1, NULL, 0, NULL, NULL);
         *dst_status = DBSTATUS_S_OK;
-        bytes_to_copy = min(*dst_len + sizeof(char), dst_max_len);
+        bytes_to_copy = min(length, dst_max_len);
         if(dst)
         {
             if(bytes_to_copy >= sizeof(char))
             {
-                WideCharToMultiByte(CP_ACP, 0, b, bytes_to_copy - sizeof(char), dst, dst_max_len, NULL, NULL);
-                *((char *)dst + bytes_to_copy / sizeof(char) - 1) = 0;
-                if(bytes_to_copy < *dst_len + sizeof(char))
+                WideCharToMultiByte(CP_ACP, 0, b, bytes_to_copy, dst, dst_max_len, NULL, NULL);
+                *((char *)dst + bytes_to_copy - 1) = 0;
+                if(bytes_to_copy < length)
                     *dst_status = DBSTATUS_S_TRUNCATED;
             }
             else
diff --git a/dlls/oledb32/tests/convert.c b/dlls/oledb32/tests/convert.c
index 405e728..cc504aa 100644
--- a/dlls/oledb32/tests/convert.c
+++ b/dlls/oledb32/tests/convert.c
@@ -1516,6 +1516,9 @@ static void test_converttostr(void)
     DBSTATUS dst_status;
     DBLENGTH dst_len;
     static const WCHAR ten[] = {'1','0',0};
+    static const WCHAR idW[] = {'0','C','7','3','3','A','8','D','-','2','A','1','C',0 };
+    static const char idA[] = "0C733A8D";
+    static const char withnull[] = "test\0ed";
     static const char ten_a[] = "10";
     static const char fourthreetwoone[] = "4321";
     static const char guid_str[] = "{0C733A8D-2A1C-11CE-ADE5-00AA0044773D}";
@@ -1877,6 +1880,44 @@ static void test_converttostr(void)
     ok(!lstrcmpA(ten_a, dst), "got %s\n", dst);
     SysFreeString(b);
 
+    b = SysAllocString(idW);
+    *(BSTR *)src = b;
+    memset(dst, 0xcc, sizeof(dst));
+    dst_len = 0x1234;
+    hr = IDataConvert_DataConvert(convert, DBTYPE_BSTR, DBTYPE_STR, 0, &dst_len, src, dst, 9, 0, &dst_status, 0, 0, 0);
+    ok(hr == S_OK, "got %08x\n", hr);
+    ok(dst_status == DBSTATUS_S_TRUNCATED, "got %08x\n", dst_status);
+    ok(dst_len == 13, "got %ld\n", dst_len);
+    ok(!lstrcmpA(idA, dst), "got %s\n", dst);
+    SysFreeString(b);
+
+    memcpy(src, withnull, sizeof(withnull));
+    memset(dst, 0xcc, sizeof(dst));
+    dst_len = 0x1234;
+    hr = IDataConvert_DataConvert(convert, DBTYPE_STR, DBTYPE_STR, sizeof(withnull), &dst_len, src, dst, sizeof(dst), 0, &dst_status, 0, 0, 0);
+    ok(hr == S_OK, "got %08x\n", hr);
+    ok(dst_status == DBSTATUS_S_OK, "got %08x\n", dst_status);
+    ok(dst_len == 8, "got %ld\n", dst_len);
+    ok(!memcmp(withnull, dst, 8), "got %s\n", dst);
+
+    memcpy(src, withnull, sizeof(withnull));
+    memset(dst, 0xcc, sizeof(dst));
+    dst_len = 0x1234;
+    hr = IDataConvert_DataConvert(convert, DBTYPE_STR, DBTYPE_STR, 7, &dst_len, src, dst, sizeof(dst), 0, &dst_status, 0, 0, 0);
+    ok(hr == S_OK, "got %08x\n", hr);
+    ok(dst_status == DBSTATUS_S_OK, "got %08x\n", dst_status);
+    ok(dst_len == 7, "got %ld\n", dst_len);
+    ok(!memcmp(withnull, dst, 7), "got %s\n", dst);
+
+    memcpy(src, withnull, sizeof(withnull));
+    memset(dst, 0xcc, sizeof(dst));
+    dst_len = 0x1234;
+    hr = IDataConvert_DataConvert(convert, DBTYPE_STR, DBTYPE_STR, 6, &dst_len, src, dst, sizeof(dst), 0, &dst_status, 0, 0, 0);
+    ok(hr == S_OK, "got %08x\n", hr);
+    ok(dst_status == DBSTATUS_S_OK, "got %08x\n", dst_status);
+    ok(dst_len == 6, "got %ld\n", dst_len);
+    ok(!memcmp(withnull, dst, 6), "got %s\n", dst);
+
     memcpy(src, ten, sizeof(ten));
     memset(dst, 0xcc, sizeof(dst));
     dst_len = 0x1234;
-- 
1.9.1

