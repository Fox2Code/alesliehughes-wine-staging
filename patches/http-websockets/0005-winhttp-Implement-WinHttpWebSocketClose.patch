From 4d68fe822760630cec9694be101baf3840feb2c9 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 16 Jun 2020 12:15:45 +1000
Subject: [PATCH 5/5] winhttp: Implement WinHttpWebSocketClose

WIP
---
 dlls/winhttp/request.c | 64 +++++++++++++++++++++++++++++++++++++++---
 1 file changed, 60 insertions(+), 4 deletions(-)

diff --git a/dlls/winhttp/request.c b/dlls/winhttp/request.c
index d768b964eea..83b478c5e00 100644
--- a/dlls/winhttp/request.c
+++ b/dlls/winhttp/request.c
@@ -3348,15 +3348,71 @@ DWORD WINAPI WinHttpWebSocketShutdown( HINTERNET hsocket, USHORT status, void *r
 
 DWORD WINAPI WinHttpWebSocketClose( HINTERNET hsocket, USHORT status, void *reason, DWORD len )
 {
-    FIXME("%p, %u, %p, %u\n", hsocket, status, reason, len);
-    return ERROR_INVALID_PARAMETER;
+    struct socket *sock;
+    DWORD ret;
+    int i;
+    /* FIN and Close (0x88), Mask bit (0x80), 4 bits blank mask. */
+    unsigned char simple[6] = {0x88, 0x80, 0x00, 0x00, 0x00, 0x00};
+
+    TRACE("%p, %u, %p, %u Semi-stub\n", hsocket, status, reason, len);
+
+    if (len > 123 || (!len && reason))
+        return ERROR_INVALID_PARAMETER;
+
+    if (!(sock = (struct socket *)grab_object( hsocket )))
+    {
+        return ERROR_INVALID_OPERATION;
+    }
+
+    if (sock->hdr.type != WINHTTP_HANDLE_TYPE_SOCKET)
+    {
+        ERR("Incorrect handle\n");
+        release_object( &sock->hdr );
+        return ERROR_WINHTTP_INCORRECT_HANDLE_TYPE;
+    }
+
+    if (len || status != WINHTTP_WEB_SOCKET_SUCCESS_CLOSE_STATUS)
+    {
+        WARN("User supplied error message %d currently not supported.\n", status);
+    }
+
+    i = 0;
+    /* Just send the simplest close message we have to */
+    ret = netconn_send(sock->request->netconn, simple, ARRAY_SIZE(simple), &i);
+
+    /* TODO - Wait for Server to respond - until time out. */
+
+    release_object( &sock->request->hdr );
+    return ret;
 }
 
 DWORD WINAPI WinHttpWebSocketQueryCloseStatus( HINTERNET hsocket, USHORT *status, void *reason, DWORD len,
                                                DWORD *consumed )
 {
-    FIXME("%p, %p, %p, %u, %p\n", hsocket, status, reason, len, consumed);
-    return ERROR_INVALID_PARAMETER;
+    struct socket *sock;
+
+    FIXME("%p, %p, %p, %u, %p Semi-stub\n", hsocket, status, reason, len, consumed);
+
+    if (!(sock = (struct socket *)grab_object( hsocket )))
+    {
+        return 11;
+    }
+
+    if (sock->hdr.type != WINHTTP_HANDLE_TYPE_SOCKET)
+    {
+        ERR("Incorrect handle\n");
+        release_object( &sock->hdr );
+        return ERROR_WINHTTP_INCORRECT_HANDLE_TYPE;
+    }
+
+    if (reason)
+        *(char*)reason = 0;
+    *consumed = 0;
+    *status = WINHTTP_WEB_SOCKET_SUCCESS_CLOSE_STATUS;
+
+    release_object( &sock->hdr );
+
+    return NO_ERROR;
 }
 
 enum request_state
-- 
2.27.0

