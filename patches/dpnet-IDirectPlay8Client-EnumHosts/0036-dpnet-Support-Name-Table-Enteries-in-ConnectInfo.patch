From 0b8f25a980ac74fcfb0676b360207d49e3c999f6 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 7 Feb 2017 09:06:53 +1100
Subject: [PATCH 36/43] dpnet: Support Name Table Enteries in ConnectInfo

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/dpnet/client.c   | 13 ++++++++++++-
 dlls/dpnet/dppacket.h | 33 +++++++++++++++++++++++++++++++++
 2 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/dlls/dpnet/client.c b/dlls/dpnet/client.c
index b2ab637..66a0ff1 100644
--- a/dlls/dpnet/client.c
+++ b/dlls/dpnet/client.c
@@ -924,9 +924,20 @@ HRESULT dplay_connect(SOCKET sock, void *serveraddr, size_t addrsize, DWORD sess
                 {
                     case DN_MSG_INTERNAL_SEND_CONNECT_INFO:
                     {
-                        struct DN_SEND_CONNECT_INFO *info = (struct DN_SEND_CONNECT_INFO *)temp;
+                        struct DN_SEND_CONNECT_INFO *info = (struct DN_SEND_CONNECT_INFO *)&dframe->type;
+                        int i;
 
                         TRACE("DN_MSG_INTERNAL_SEND_CONNECT_INFO\n");
+
+                        TRACE("entry_count %d, membership_count %d\n", info->entry_count, info->membership_count);
+                        for(i = 0; i < info->entry_count; i++)
+                        {
+                            struct DN_NAMETABLE_ENTRY_INFO *entry = (struct DN_NAMETABLE_ENTRY_INFO*)(((char*)info) + sizeof(struct DN_SEND_CONNECT_INFO) +
+                                            (sizeof(struct DN_NAMETABLE_ENTRY_INFO) * i));
+                            FIXME("dpnid 0x%08x, flags 0x%08x, name %s\n", entry->dpnid, entry->flags,
+                                debugstr_an( ((char*)&dframe->type) + entry->name_offset, entry->name_size) );
+                        }
+
                         if(dframe_packet_session_ack(sock, serveraddr, addrsize, packet->nseq) == -1)
                         {
                             ERR("dframe_packet_session_ack\n");
diff --git a/dlls/dpnet/dppacket.h b/dlls/dpnet/dppacket.h
index 525d75b..c01960a 100644
--- a/dlls/dpnet/dppacket.h
+++ b/dlls/dpnet/dppacket.h
@@ -175,6 +175,23 @@ struct DFRAME_PACKET_KEEPALIVE
     DWORD session;
 };
 
+/* 2.2.1.5 DN_NAMETABLE_ENTRY_INFO */
+struct DN_NAMETABLE_ENTRY_INFO
+{
+    DWORD dpnid;
+    DWORD owner;
+    DWORD flags;
+    DWORD version;
+    DWORD ver_not_used;
+    DWORD dnet_version;
+    DWORD name_offset;
+    DWORD name_size;
+    DWORD data_offset;
+    DWORD data_size;
+    DWORD url_offset;
+    DWORD url_size;
+};
+
 struct SACK_PACKET
 {
     BYTE command;
@@ -256,6 +273,22 @@ struct CFRAME_PACKET
 #define SACK_FLAGS_SEND_MASK1                 0x08
 #define SACK_FLAGS_SEND_MASK2                 0x10
 
+#define NAMETABLE_ENTRY_FLAG_LOCAL              0x00000001
+#define NAMETABLE_ENTRY_FLAG_HOST               0x00000002
+#define NAMETABLE_ENTRY_FLAG_ALL_PLAYERS_GROUP  0x00000004
+#define NAMETABLE_ENTRY_FLAG_GROUP              0x00000010
+#define NAMETABLE_ENTRY_FLAG_GROUP_AUTODESTRUCT 0x00000040
+#define NAMETABLE_ENTRY_FLAG_PEER               0x00000100
+#define NAMETABLE_ENTRY_FLAG_CLIENT             0x00000200
+#define NAMETABLE_ENTRY_FLAG_SERVER             0x00000400
+#define NAMETABLE_ENTRY_FLAG_CONNECTING         0x00001000
+#define NAMETABLE_ENTRY_FLAG_AVAILABLE          0x00002000
+#define NAMETABLE_ENTRY_FLAG_DISCONNECTING      0x00004000
+#define NAMETABLE_ENTRY_FLAG_INDICATED          0x00010000
+#define NAMETABLE_ENTRY_FLAG_CREATED            0x00020000
+#define NAMETABLE_ENTRY_FLAG_NEED_TO_DESTROY    0x00040000
+#define NAMETABLE_ENTRY_FLAG_IN_USE             0x00080000
+
 #include "poppack.h"
 
 #endif
-- 
1.9.1

