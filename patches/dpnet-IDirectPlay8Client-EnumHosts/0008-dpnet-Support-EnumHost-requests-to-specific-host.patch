From 4852e0eabfb0e1dac874146f1496f82a95d0aa80 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Fri, 9 Dec 2016 11:48:37 +1100
Subject: [PATCH 08/43] dpnet: Support EnumHost requests to specific host

---
 dlls/dpnet/client.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/dlls/dpnet/client.c b/dlls/dpnet/client.c
index 7e1fb8bbdc7..d57e8b6214f 100644
--- a/dlls/dpnet/client.c
+++ b/dlls/dpnet/client.c
@@ -427,7 +427,7 @@ static int send_packet_enum_query(SOCKET sock, GUID application, struct sockaddr
     return err;
 }
 
-static void process_enumhost(SOCKET sock, IDirectPlay8Address *device, PFNDPNMESSAGEHANDLER msghandler, GUID application,
+static void process_enumhost(SOCKET sock, struct sockaddr_in host, IDirectPlay8Address *device, PFNDPNMESSAGEHANDLER msghandler, GUID application,
         DWORD retrycnt, DWORD retrytime, DWORD timeout, HANDLE cancelevent)
 {
     char buffer[1024];
@@ -455,11 +455,7 @@ static void process_enumhost(SOCKET sock, IDirectPlay8Address *device, PFNDPNMES
         {
             TRACE("Sending Request.\n");
 
-            from.sin_family = AF_INET;
-            from.sin_port = htons(DPNA_DPNSVR_PORT);
-            from.sin_addr.s_addr = INADDR_BROADCAST;
-
-            if(send_packet_enum_query(sock, application, &from) == -1)
+            if(send_packet_enum_query(sock, application, &host) == -1)
                 break;
 
             starttime = GetTickCount();
@@ -568,6 +564,7 @@ static void process_enumhost(SOCKET sock, IDirectPlay8Address *device, PFNDPNMES
 struct dpthread_data
 {
     SOCKET sock;
+    struct sockaddr_in host;
     IDirectPlay8Address *device;
     DWORD retrycnt;
     DWORD retrytime;
@@ -582,7 +579,7 @@ static DWORD WINAPI enumhost_thread(void *threaddata)
 {
     struct dpthread_data *tdata = (struct dpthread_data *)threaddata;
 
-    process_enumhost(tdata->sock, tdata->device, tdata->msghandler, tdata->app_guid,
+    process_enumhost(tdata->sock, tdata->host, tdata->device, tdata->msghandler, tdata->app_guid,
                         tdata->retrycnt, tdata->retrytime, tdata->timeout, tdata->cancelevent);
 
     heap_free(threaddata);
@@ -600,6 +597,7 @@ static HRESULT WINAPI IDirectPlay8ClientImpl_EnumHosts(IDirectPlay8Client *iface
     IDirectPlay8ClientImpl *This = impl_from_IDirectPlay8Client(iface);
     IDirectPlay8Address *device = NULL;
     HRESULT hr;
+    struct sockaddr_in host;
 
     TRACE("(%p):(%p,%p,%p,%p,%u,%u,%u,%u,%p,%p,%x)\n", This, pApplicationDesc, pAddrHost, pDeviceInfo,
         pUserEnumData, dwUserEnumDataSize, dwEnumCount, dwRetryInterval, dwTimeOut, pvUserContext, pAsyncHandle,
@@ -632,13 +630,15 @@ static HRESULT WINAPI IDirectPlay8ClientImpl_EnumHosts(IDirectPlay8Client *iface
         return E_OUTOFMEMORY;
     }
 
+    dpaddress_to_sockaddr(pAddrHost, &host);
+
     if(dwFlags & DPNENUMHOSTS_SYNC)
     {
         DWORD retrycnt  = !dwEnumCount ? This->spcaps.dwDefaultEnumCount : dwEnumCount;
         DWORD retrytime = !dwRetryInterval ? This->spcaps.dwDefaultEnumRetryInterval : dwRetryInterval;
         DWORD timeout   = dwTimeOut == INFINITE ? This->spcaps.dwDefaultEnumTimeout : dwTimeOut;
 
-        process_enumhost(This->sock, device, This->msghandler, pApplicationDesc->guidApplication,
+        process_enumhost(This->sock, host, device, This->msghandler, pApplicationDesc->guidApplication,
                         retrycnt, retrytime, timeout, NULL);
 
         IDirectPlay8Address_Release(device);
@@ -663,6 +663,7 @@ static HRESULT WINAPI IDirectPlay8ClientImpl_EnumHosts(IDirectPlay8Client *iface
         tdata->timeout     = dwTimeOut == INFINITE  ? This->spcaps.dwDefaultEnumTimeout : dwTimeOut;
         tdata->msghandler  = This->msghandler;
         tdata->device      = device;
+        tdata->host        = host;
         tdata->app_guid    = pApplicationDesc->guidApplication;
         tdata->cancelevent = This->cancelevent = CreateEventA( NULL, TRUE, FALSE, NULL);
 
-- 
2.23.0

