From 4e31239d48313f63febb45b42410a4e40e310054 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Tue, 15 Sep 2020 19:44:38 +1000
Subject: [PATCH] ws2_32: Return a valid value for WSAIoctl
 SIO_IDEAL_SEND_BACKLOG_QUERY.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/ws2_32/socket.c     | 30 ++++++++++++++++++++++++++++++
 dlls/ws2_32/tests/sock.c | 14 +++++++++++++-
 2 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
index 3feb902196f..76141216fbd 100644
--- a/dlls/ws2_32/socket.c
+++ b/dlls/ws2_32/socket.c
@@ -3387,6 +3387,36 @@ INT WINAPI WSAIoctl(SOCKET s, DWORD code, LPVOID in_buff, DWORD in_size, LPVOID
         return ret ? -1 : 0;
     }
 
+    case WS_SIO_IDEAL_SEND_BACKLOG_QUERY:
+    {
+        int ret, proto;
+        unsigned protolen = sizeof(protolen);
+
+        if (!out_buff)
+        {
+            SetLastError(WSAEFAULT);
+            return SOCKET_ERROR;
+        }
+
+        if ( (fd = get_sock_fd( s, 0, NULL )) == -1)
+            return SOCKET_ERROR;
+
+        ret = getsockopt(fd, SOL_SOCKET, SO_PROTOCOL, &proto, &protolen);
+        if(ret || proto != IPPROTO_TCP)
+        {
+            TRACE("ret %d, proto %d\n", ret, proto);
+            release_sock_fd( s, fd );
+            SetLastError(WSAEOPNOTSUPP);
+            return SOCKET_ERROR;
+        }
+
+        total = sizeof(DWORD);
+        *(DWORD*)out_buff = 0x10000; /* 64k */
+
+        release_sock_fd( s, fd );
+        break;
+    }
+
     case WS_SIOCATMARK:
     {
         DWORD ret;
diff --git a/dlls/ws2_32/tests/sock.c b/dlls/ws2_32/tests/sock.c
index 0a83f0f0ffc..058372bd66a 100644
--- a/dlls/ws2_32/tests/sock.c
+++ b/dlls/ws2_32/tests/sock.c
@@ -5491,8 +5491,10 @@ static void test_WSASendTo(void)
     struct sockaddr_in addr;
     char buf[12] = "hello world";
     WSABUF data_buf;
-    DWORD bytesSent;
+    DWORD bytesSent, size;
     int ret;
+    ULONG backlog = 0;
+    int iret;
 
     addr.sin_family = AF_INET;
     addr.sin_port = htons(139);
@@ -5517,6 +5519,11 @@ static void test_WSASendTo(void)
     ret = WSASendTo(s, &data_buf, 1, &bytesSent, 0, (struct sockaddr *)&addr, sizeof(addr), NULL, NULL);
     ok(!ret, "expected success\n");
     ok(!WSAGetLastError(), "got error %u\n", WSAGetLastError());
+
+    iret = WSAIoctl(s, SIO_IDEAL_SEND_BACKLOG_QUERY, NULL, 0, &backlog, sizeof(backlog), &size, NULL, NULL);
+    ok(iret == SOCKET_ERROR && WSAGetLastError() == WSAEOPNOTSUPP,
+       "WSAIoctl() failed: %d/%d\n", iret, WSAGetLastError());
+    closesocket(s);
 }
 
 static DWORD WINAPI recv_thread(LPVOID arg)
@@ -5557,6 +5564,7 @@ static void test_WSARecv(void)
     DWORD dwret;
     BOOL bret;
     HANDLE thread, event = NULL, io_port;
+    ULONG backlog = 0, size;
 
     tcp_socketpair(&src, &dest);
 
@@ -5705,6 +5713,10 @@ static void test_WSARecv(void)
 
     CloseHandle(io_port);
 
+    iret = WSAIoctl(src, SIO_IDEAL_SEND_BACKLOG_QUERY, NULL, 0, &backlog, sizeof(backlog), &size, NULL, NULL);
+    ok(!iret, "WSAIoctl() failed: %d/%d\n", iret, WSAGetLastError());
+    ok(backlog == 0x10000, "got %08x\n", backlog);
+
 end:
     if (server != INVALID_SOCKET)
         closesocket(server);
-- 
2.30.2

