From a65326d51aee2555dc6ecd89413f2d8947ad678f Mon Sep 17 00:00:00 2001
From: Zhenbo Li <litimetal@gmail.com>
Date: Thu, 17 Sep 2015 16:11:06 +0800
Subject: [v2 PATCH 2/2] authz: Stub functions AuthzAccessCheck, AuthzFreeContext,
 AuthzInitializeContextFromSid, AuthzInitializeContextFromToken

Changed to use authz.h for datatypes.
Cleanup of parameter names.

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/authz/authz.c    | 74 +++++++++++++++++++++++++++++++++++++++++++++------
 dlls/authz/authz.spec |  8 +++---
 2 files changed, 70 insertions(+), 12 deletions(-)

diff --git a/dlls/authz/authz.c b/dlls/authz/authz.c
index 08ca8c3..5502e79 100644
--- a/dlls/authz/authz.c
+++ b/dlls/authz/authz.c
@@ -23,6 +23,8 @@
 #include "winbase.h"
 #include "wine/debug.h"
 
+#include "authz.h"
+
 WINE_DEFAULT_DEBUG_CHANNEL(authz);
 
 BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
@@ -46,13 +48,13 @@ BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
 /***********************************************************************
  *              AuthzInitializeResourceManager (AUTHZ.@)
  */
-BOOL WINAPI AuthzInitializeResourceManager(DWORD flags, LPVOID pfnAccessChecker,
-    LPVOID pfnComputeDynGroups, LPVOID pfnFreeDynGroups,
-    LPCWSTR managerName, LPVOID lpManagerHandle )
+BOOL WINAPI AuthzInitializeResourceManager(DWORD flags, PFN_AUTHZ_DYNAMIC_ACCESS_CHECK access_checker,
+        PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS compute_dyn_groups, PFN_AUTHZ_FREE_DYNAMIC_GROUPS free_dyn_groups,
+        const WCHAR *managername, AUTHZ_RESOURCE_MANAGER_HANDLE *handle )
 {
-    FIXME("(0x%X,%p,%p,%p,%s,%p): stub\n", flags, pfnAccessChecker,
-        pfnComputeDynGroups, pfnFreeDynGroups,
-        debugstr_w(managerName), lpManagerHandle);
+    FIXME("(0x%x,%p,%p,%p,%s,%p): stub\n", flags, access_checker,
+        compute_dyn_groups, free_dyn_groups,
+        debugstr_w(managername), handle);
     SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
     return FALSE;
 }
@@ -61,9 +63,65 @@ BOOL WINAPI AuthzInitializeResourceManager(DWORD flags, LPVOID pfnAccessChecker,
 /***********************************************************************
  *              AuthzInstallSecurityEventSource (AUTHZ.@)
  */
-BOOL WINAPI AuthzInstallSecurityEventSource(DWORD dwFlags, LPVOID pRegistration)
+BOOL WINAPI AuthzInstallSecurityEventSource(DWORD flags, AUTHZ_SOURCE_SCHEMA_REGISTRATION *registration)
+{
+    FIXME("(0x%x,%p): stub\n", flags, registration);
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+
+/***********************************************************************
+ *              AuthzAccessCheck (AUTHZ.@)
+ */
+BOOL WINAPI AuthzAccessCheck(DWORD flags, AUTHZ_CLIENT_CONTEXT_HANDLE client_context,
+        AUTHZ_ACCESS_REQUEST *request, AUTHZ_AUDIT_EVENT_HANDLE audit_event,
+        PSECURITY_DESCRIPTOR security, PSECURITY_DESCRIPTOR *optional_security,
+        DWORD optional_security_count, AUTHZ_ACCESS_REPLY *reply,
+        AUTHZ_ACCESS_CHECK_RESULTS_HANDLE *access_check_result)
+{
+    FIXME("(0x%x,%p,%p,%p,%p,%p,0x%x,%p,%p): stub\n", flags, client_context,
+            request, audit_event, security, optional_security,
+            optional_security_count, reply, access_check_result);
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+
+/***********************************************************************
+ *              AuthzFreeContext (AUTHZ.@)
+ */
+BOOL WINAPI AuthzFreeContext(AUTHZ_CLIENT_CONTEXT_HANDLE client_context)
+{
+    FIXME("(%p): stub\n", client_context);
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+
+/***********************************************************************
+ *              AuthzInitializeContextFromSid (AUTHZ.@)
+ */
+BOOL WINAPI AuthzInitializeContextFromSid(DWORD flags, PSID sid,
+        AUTHZ_RESOURCE_MANAGER_HANDLE resource_manager, LARGE_INTEGER *expire_time,
+        LUID id, void *dynamic_group, AUTHZ_CLIENT_CONTEXT_HANDLE *client_context)
+{
+    FIXME("(0x%x,%p,%p,%p,%08x:%08x,%p,%p): stub\n", flags, sid, resource_manager,
+            expire_time, id.HighPart, id.LowPart, dynamic_group, client_context);
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+
+/***********************************************************************
+ *              AuthzInitializeContextFromToken (AUTHZ.@)
+ */
+BOOL WINAPI AuthzInitializeContextFromToken(DWORD flags, HANDLE token_handle,
+        AUTHZ_RESOURCE_MANAGER_HANDLE resource_manager, LARGE_INTEGER *expire_time,
+        LUID id, void *dynamic_group, AUTHZ_CLIENT_CONTEXT_HANDLE *client_context)
 {
-    FIXME("(0x%X,%p): stub\n", dwFlags, pRegistration);
+    FIXME("(0x%x,%p,%p,%p,%08x:%08x,%p,%p): stub\n", flags, token_handle, resource_manager,
+            expire_time, id.HighPart, id.LowPart, dynamic_group, client_context);
     SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
     return FALSE;
 }
diff --git a/dlls/authz/authz.spec b/dlls/authz/authz.spec
index acf3228..eb9e044 100644
--- a/dlls/authz/authz.spec
+++ b/dlls/authz/authz.spec
@@ -1,16 +1,16 @@
-@ stub AuthzAccessCheck
+@ stdcall AuthzAccessCheck(long long ptr long ptr ptr long ptr ptr)
 @ stub AuthzAddSidsToContext
 @ stub AuthzCachedAccessCheck
 @ stub AuthzEnumerateSecurityEventSources
 @ stub AuthzEvaluateSacl
 @ stub AuthzFreeAuditEvent
-@ stub AuthzFreeContext
+@ stdcall AuthzFreeContext(long)
 @ stub AuthzFreeHandle
 @ stub AuthzFreeResourceManager
 @ stub AuthzGetInformationFromContext
 @ stub AuthzInitializeContextFromAuthzContext
-@ stub AuthzInitializeContextFromSid
-@ stub AuthzInitializeContextFromToken
+@ stdcall AuthzInitializeContextFromSid(long ptr long ptr int64 ptr ptr)
+@ stdcall AuthzInitializeContextFromToken(long long long ptr int64 ptr ptr)
 @ stub AuthzInitializeObjectAccessAuditEvent
 @ stub AuthzInitializeObjectAccessAuditEvent2
 @ stdcall AuthzInitializeResourceManager(long ptr ptr ptr wstr ptr)
-- 
1.9.1

