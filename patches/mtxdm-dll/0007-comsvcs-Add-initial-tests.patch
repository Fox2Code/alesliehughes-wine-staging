From 43ea10a04c37090979f23b2dcd68d04dfb75504e Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 25 Jan 2017 11:08:33 +1100
Subject: [PATCH 7/7] comsvcs: Add initial tests

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 configure                      |  3 ++-
 configure.ac                   |  3 ++-
 dlls/comsvcs/tests/Makefile.in |  5 ++++
 dlls/comsvcs/tests/dispenser.c | 53 ++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 62 insertions(+), 2 deletions(-)
 create mode 100644 dlls/comsvcs/tests/Makefile.in
 create mode 100644 dlls/comsvcs/tests/dispenser.c

diff --git a/configure b/configure
index d330889..fa2fa29 100755
--- a/configure
+++ b/configure
@@ -17798,7 +17798,8 @@ wine_fn_config_dll comm.drv16 enable_win16
 wine_fn_config_dll commdlg.dll16 enable_win16
 wine_fn_config_dll compobj.dll16 enable_win16
 wine_fn_config_dll compstui enable_compstui implib
-wine_fn_config_dll comsvcs enable_comsvcs implib
+wine_fn_config_dll comsvcs enable_comsvcs clean,implib
+wine_fn_config_test dlls/comsvcs/tests comsvcs_test
 wine_fn_config_dll concrt140 enable_concrt140
 wine_fn_config_dll connect enable_connect
 wine_fn_config_dll credui enable_credui clean,implib
diff --git a/configure.ac b/configure.ac
index 461ec73..5bdcb36 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2856,7 +2856,8 @@ WINE_CONFIG_DLL(comm.drv16,enable_win16)
 WINE_CONFIG_DLL(commdlg.dll16,enable_win16)
 WINE_CONFIG_DLL(compobj.dll16,enable_win16)
 WINE_CONFIG_DLL(compstui,,[implib])
-WINE_CONFIG_DLL(comsvcs,,[implib])
+WINE_CONFIG_DLL(comsvcs,,[clean,implib])
+WINE_CONFIG_TEST(dlls/comsvcs/tests)
 WINE_CONFIG_DLL(concrt140)
 WINE_CONFIG_DLL(connect)
 WINE_CONFIG_DLL(credui,,[clean,implib])
diff --git a/dlls/comsvcs/tests/Makefile.in b/dlls/comsvcs/tests/Makefile.in
new file mode 100644
index 0000000..b3ff9a1
--- /dev/null
+++ b/dlls/comsvcs/tests/Makefile.in
@@ -0,0 +1,5 @@
+TESTDLL   = comsvcs.dll
+IMPORTS   = ole32 uuid
+
+C_SRCS = \
+	dispenser.c
diff --git a/dlls/comsvcs/tests/dispenser.c b/dlls/comsvcs/tests/dispenser.c
new file mode 100644
index 0000000..c172bc9
--- /dev/null
+++ b/dlls/comsvcs/tests/dispenser.c
@@ -0,0 +1,53 @@
+/*
+ * Copyright 2017 Alistair Leslie-Hughes
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#define COBJMACROS
+
+#include <stdarg.h>
+
+#include "windef.h"
+#include "winbase.h"
+#include "ole2.h"
+#include "comsvcs.h"
+#include "wine/test.h"
+
+static void create_dispenser(void)
+{
+    HRESULT hr;
+    IDispenserManager *dispenser = NULL;
+
+    hr = CoCreateInstance( &CLSID_DispenserManager, NULL, CLSCTX_ALL, &IID_IDispenserManager, (void**)&dispenser);
+    ok(hr == S_OK, "Failed to create object\n");
+    if(hr == S_OK)
+        IDispenserManager_Release(dispenser);
+}
+
+
+START_TEST(dispenser)
+{
+    HRESULT hr;
+
+    hr = CoInitialize(0);
+    ok( hr == S_OK, "failed to init com\n");
+    if (hr != S_OK)
+        return;
+
+    create_dispenser();
+
+    CoUninitialize();
+}
-- 
1.9.1

