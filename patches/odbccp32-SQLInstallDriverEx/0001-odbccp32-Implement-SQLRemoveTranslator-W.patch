From 68f653c3935177072151029ef82492c493b61630 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 3 Dec 2015 12:38:29 +1100
Subject: [v5 PATCH] odbccp32: Implement SQLRemoveTranslator/W

v3 - Fix trace message.
v4 - Fixed assignment of usage_count
v5 - Return FALSE if item not found
   - Add test

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/odbccp32/odbccp32.c   | 78 +++++++++++++++++++++++++++++++++++++++++-----
 dlls/odbccp32/tests/misc.c | 17 +++++++---
 2 files changed, 84 insertions(+), 11 deletions(-)

diff --git a/dlls/odbccp32/odbccp32.c b/dlls/odbccp32/odbccp32.c
index 7b2f020bbe..773c5d2489 100644
--- a/dlls/odbccp32/odbccp32.c
+++ b/dlls/odbccp32/odbccp32.c
@@ -1229,20 +1229,84 @@ BOOL WINAPI SQLRemoveDSNFromIni(LPCSTR lpszDSN)
     return FALSE;
 }
 
-BOOL WINAPI SQLRemoveTranslatorW(LPCWSTR lpszTranslator, LPDWORD lpdwUsageCount)
+BOOL WINAPI SQLRemoveTranslatorW(const WCHAR *translator, DWORD *usage_count)
 {
+    HKEY hkey;
+    DWORD usagecount = 1;
+    BOOL ret = TRUE;
+
     clear_errors();
-    FIXME("%s %p\n", debugstr_w(lpszTranslator), lpdwUsageCount);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
+    TRACE("%s %p\n", debugstr_w(translator), usage_count);
+
+    if (RegOpenKeyW(HKEY_LOCAL_MACHINE, odbcini, &hkey) == ERROR_SUCCESS)
+    {
+        HKEY hkeydriver;
+
+        if (RegOpenKeyW(hkey, translator, &hkeydriver) == ERROR_SUCCESS)
+        {
+            DWORD size, type;
+            DWORD count;
+
+            size = sizeof(usagecount);
+            RegGetValueA(hkeydriver, NULL, "UsageCount", RRF_RT_DWORD, &type, &usagecount, &size);
+            TRACE("Usage count %d\n", usagecount);
+            count = usagecount - 1;
+            if (count)
+            {
+                 if (RegSetValueExA(hkeydriver, "UsageCount", 0, REG_DWORD, (BYTE*)&count, sizeof(count)) != ERROR_SUCCESS)
+                    ERR("Failed to write registry UsageCount key\n");
+            }
+
+            RegCloseKey(hkeydriver);
+        }
+
+        if (usagecount)
+            usagecount--;
+
+        if (!usagecount)
+        {
+            if(RegDeleteKeyW(hkey, translator) != ERROR_SUCCESS)
+            {
+                push_error(ODBC_ERROR_COMPONENT_NOT_FOUND, odbc_error_component_not_found);
+                WARN("Failed to delete registry key: %s\n", debugstr_w(translator));
+                ret = FALSE;
+            }
+
+            if (ret && RegOpenKeyW(hkey, odbctranslators, &hkeydriver) == ERROR_SUCCESS)
+            {
+                if(RegDeleteValueW(hkeydriver, translator) != ERROR_SUCCESS)
+                {
+                    push_error(ODBC_ERROR_COMPONENT_NOT_FOUND, odbc_error_component_not_found);
+                    WARN("Failed to delete registry key: %s\n", debugstr_w(translator));
+                    ret = FALSE;
+                }
+
+                RegCloseKey(hkeydriver);
+            }
+        }
+
+        RegCloseKey(hkey);
+    }
+
+    if (ret && usage_count)
+        *usage_count = usagecount;
+
+    return ret;
 }
 
 BOOL WINAPI SQLRemoveTranslator(LPCSTR lpszTranslator, LPDWORD lpdwUsageCount)
 {
+    WCHAR *translator;
+    BOOL ret;
+
     clear_errors();
-    FIXME("%s %p\n", debugstr_a(lpszTranslator), lpdwUsageCount);
-    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
-    return FALSE;
+    TRACE("%s %p\n", debugstr_a(lpszTranslator), lpdwUsageCount);
+
+    translator = SQLInstall_strdup(lpszTranslator);
+    ret =  SQLRemoveTranslatorW(translator, lpdwUsageCount);
+
+    HeapFree(GetProcessHeap(), 0, translator);
+    return ret;
 }
 
 BOOL WINAPI SQLSetConfigMode(UWORD wConfigMode)
diff --git a/dlls/odbccp32/tests/misc.c b/dlls/odbccp32/tests/misc.c
index 7a6e8db3ef..ed8e6f1984 100644
--- a/dlls/odbccp32/tests/misc.c
+++ b/dlls/odbccp32/tests/misc.c
@@ -530,13 +530,22 @@ void test_SQLInstallTranslatorEx(void)
 
     cnt = 100;
     ret = SQLRemoveTranslator("WINE ODBC Translator", &cnt);
-    todo_wine ok(ret, "SQLRemoveTranslator failed\n");
-    todo_wine ok(cnt == 0, "SQLRemoveTranslator failed %d\n", cnt);
+    ok(ret, "SQLRemoveTranslator failed\n");
+    ok(cnt == 0, "SQLRemoveTranslator failed %d\n", cnt);
 
     cnt = 100;
     ret = SQLRemoveTranslator("WINE ODBC Translator Path", &cnt);
-    todo_wine ok(ret, "SQLRemoveTranslator failed\n");
-    todo_wine ok(cnt == 0, "SQLRemoveTranslator failed %d\n", cnt);
+    ok(ret, "SQLRemoveTranslator failed\n");
+    ok(cnt == 0, "SQLRemoveTranslator failed %d\n", cnt);
+
+    cnt = 100;
+    ret = SQLRemoveTranslator("WINE ODBC Translator NonExist", &cnt);
+    ok(!ret, "SQLRemoveTranslator succeeded\n");
+    ok(cnt == 100, "SQLRemoveTranslator succeeded %d\n", cnt);
+    sql_ret = SQLInstallerErrorW(1, &error_code, NULL, 0, NULL);
+    ok(sql_ret && error_code == ODBC_ERROR_COMPONENT_NOT_FOUND,
+        "SQLInstallTranslatorEx failed %d, %u\n", sql_ret, error_code);
+
 }
 
 START_TEST(misc)
-- 
2.11.0

