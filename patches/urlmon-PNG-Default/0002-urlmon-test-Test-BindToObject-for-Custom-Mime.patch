From 9eccab5774fbd18632ca9f7b48007e9c2c17f4e4 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 1 Dec 2016 10:37:09 +1100
Subject: [PATCH 2/2] urlmon/test: Test BindToObject for Custom Mime

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/urlmon/tests/url.c | 34 ++++++++++++++++++++++++++++++++++
 1 file changed, 34 insertions(+)

diff --git a/dlls/urlmon/tests/url.c b/dlls/urlmon/tests/url.c
index 9ccd8ef..8e3d91c 100644
--- a/dlls/urlmon/tests/url.c
+++ b/dlls/urlmon/tests/url.c
@@ -235,6 +235,34 @@ static BOOL is_urlmon_protocol(int prot)
     return prot == FILE_TEST || prot == HTTP_TEST || prot == HTTPS_TEST || prot == FTP_TEST || prot == MK_TEST;
 }
 
+static BOOL init_key(const char *key_name, const char *entry, const char *def_value, BOOL init)
+{
+    HKEY hkey;
+    DWORD res;
+
+    if(!init) {
+        RegDeleteKeyA(HKEY_CLASSES_ROOT, key_name);
+        return TRUE;
+    }
+
+    res = RegCreateKeyA(HKEY_CLASSES_ROOT, key_name, &hkey);
+    if(res != ERROR_SUCCESS)
+        return FALSE;
+
+    if(def_value)
+        res = RegSetValueExA(hkey, entry, 0, REG_SZ, (BYTE*)def_value, strlen(def_value));
+
+    RegCloseKey(hkey);
+
+    return res == ERROR_SUCCESS;
+}
+
+static BOOL init_registry(BOOL init)
+{
+    return init_key(".wine", NULL, "htmlfile", init)
+        && init_key("MIME\\Database\\Content Type\\text/wine", "Extension", ".wine", init);
+}
+
 static void test_CreateURLMoniker(LPCWSTR url1, LPCWSTR url2)
 {
     HRESULT hr;
@@ -3944,6 +3972,12 @@ START_TEST(url)
         trace("bind to an object of not registered MIME type...\n");
         create_file("test.winetest", "\x01\x02\x03xxxxxxxxxxxxxxxxxxxxxxxxx");
         test_BindToObject(FILE_TEST, 0, REGDB_E_CLASSNOTREG);
+
+        create_file("test.wine", "");
+        init_registry(TRUE);
+        test_BindToObject(FILE_TEST, 0, S_OK);
+        init_registry(FALSE);
+
         create_html_file();
 
         trace("file test (no callback)...\n");
-- 
1.9.1

